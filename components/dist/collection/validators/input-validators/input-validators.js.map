{"version":3,"file":"input-validators.js","sourceRoot":"","sources":["../../../../src/validators/input-validators/input-validators.ts"],"names":[],"mappings":"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","sourcesContent":["import { Validator } from '../validator';\nimport { isValidDate } from '../../utils/utils';\n\nconst emailPattern =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const requiredField: Validator<string> = {\n  validate: (value: string) => {\n    return {\n      valid: value != null && value.trim() != '',\n      reason: {\n        en: 'Enter information to continue.',\n        fr: 'Saisissez des renseignements pour continuer.',\n      },\n    };\n  },\n};\n\nexport const requiredEmailField: Validator<string> = {\n  validate: (value: string) => {\n    return {\n      valid:\n        value != null &&\n        value.trim() != '' &&\n        (value.toLowerCase().match(emailPattern) ? true : false),\n      reason: {\n        en: 'Enter a valid email address to continue. Use a standard format. Example: name@address.ca.',\n        fr: 'Saisissez votre adresse courriel pour continuer. Utilisez un format standard. Exemple: nom@adresse.ca.',\n      },\n    };\n  },\n};\n\nexport const requiredFileInput: Validator<FileList> = {\n  validate: (value: FileList) => {\n    return {\n      valid: value.length > 0,\n      reason: {\n        en: 'You must upload a file to continue.',\n        fr: 'Vous devez téléverser un fichier pour continuer.',\n      },\n    };\n  },\n};\n\nexport const requiredSelectField: Validator<string> = {\n  validate: (value: string) => {\n    return {\n      valid: value != null && value.trim() != '',\n      reason: {\n        en: 'Choose an option to continue.',\n        fr: 'Choisissez une option pour continuer.',\n      },\n    };\n  },\n};\n\n/*\n * Date input validators\n */\nexport const dateInputErrorMessage = {\n  en: {\n    all: 'Enter the date.',\n    missingmonth: 'Select the month.',\n    missingyear: 'Enter the year.',\n    missingday: 'Enter the day.',\n    missingmonthday: 'Select the month and enter the day.',\n    missingmonthyear: 'Select the month and enter the year.',\n    missingdayyear: 'Enter the day and year.',\n    invalidyearlength: 'Year must be 4 digits.',\n    invalidyear: 'Enter a valid year.',\n    invalidday: 'Enter a valid day.',\n  },\n  fr: {\n    all: 'Saisissez la date.',\n    missingmonth: 'Sélectionnez un mois.',\n    missingyear: \"Saisissez l'année.\",\n    missingday: 'Saisissez le jour.',\n    missingmonthday: 'Saisissez le jour et sélectionnez un mois.',\n    missingmonthyear: \"Sélectionnez un mois et saisissez l'année.\",\n    missingdayyear: \"Saisissez le jour et l'année.\",\n    invalidyearlength: \"L'année doit inclure 4 chiffres.\",\n    invalidyear: 'Entrez une année valide.',\n    invalidday: 'Saisissez un jour valide.',\n  },\n};\n\nexport const requiredDateInput: Validator<string> = {\n  validate: (date: string) => {\n    if (isValidDate(date)) {\n      return {\n        valid: true,\n        reason: {\n          en: '',\n          fr: '',\n        },\n      };\n    }\n\n    const splitDate = date.split('-');\n    const dateObject = {\n      day: splitDate[2],\n      month: splitDate[1],\n      year: splitDate[0],\n    };\n\n    const format = splitDate.length === 3 ? 'full' : 'compact';\n\n    const error = getDateInputError(dateObject, format);\n\n    return error;\n  },\n};\n\nconst getDateInputError = (dateValues, format) => {\n  const { day, month, year } = dateValues;\n\n  const errorResponse = {\n    valid: false,\n    errors: {\n      day: false,\n      month: false,\n      year: false,\n    },\n    reason: {\n      en: '',\n      fr: '',\n    },\n  };\n\n  // No values set\n  if (!day && !month && !year) {\n    errorResponse.errors.day = true;\n    errorResponse.errors.month = true;\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.all;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.all;\n\n    // No day set\n  } else if (!day && month && year) {\n    errorResponse.errors.day = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingday;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingday;\n\n    // No month set\n  } else if (\n    (day && !month && year) ||\n    (!day && !month && year && format === 'compact')\n  ) {\n    errorResponse.errors.month = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingmonth;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingmonth;\n\n    // No year set\n  } else if (\n    (day && month && !year) ||\n    (!day && month && !year && format === 'compact')\n  ) {\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingyear;\n\n    // No day and month set\n  } else if (!day && !month && year) {\n    errorResponse.errors.day = true;\n    errorResponse.errors.month = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingmonthday;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingmonthday;\n\n    // No day and year set\n  } else if (!day && month && !year) {\n    errorResponse.errors.day = true;\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingdayyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingdayyear;\n\n    // No month and year set\n  } else if (day && !month && !year) {\n    errorResponse.errors.year = true;\n    errorResponse.errors.month = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingmonthyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingmonthyear;\n\n    // Year is formatted incorrectly\n  } else if (year.length != 4) {\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.invalidyearlength;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.invalidyearlength;\n\n    // Year format\n  } else if (year < 0 || year > 9999) {\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.invalidyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.invalidyear;\n\n    // Invalid day\n  } else {\n    errorResponse.errors.day = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.invalidday;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.invalidday;\n  }\n\n  return errorResponse;\n};\n\nexport const requiredRadio: Validator<string> = {\n  validate: (value: string) => {\n    return {\n      valid: value != null && value != '',\n      reason: {\n        en: 'Choose an option to continue.',\n        fr: 'Choisissez une option pour continuer.',\n      },\n    };\n  },\n};\n\nexport const requiredCheckboxGroup: Validator<Array<string>> = {\n  validate: (value: Array<string>) => {\n    return {\n      valid: value.length > 0,\n      reason: {\n        en: 'Choose an option to continue.',\n        fr: 'Choisissez une option pour continuer.',\n      },\n    };\n  },\n};\n\nexport const requiredCheckboxSingle: Validator<Array<string>> = {\n  validate: (value: Array<string>) => {\n    return {\n      valid: value.length > 0,\n      reason: {\n        en: 'You must check the box to continue.',\n        fr: 'Vous devez cocher la case pour continuer.',\n      },\n    };\n  },\n};\n"]}