{"version":3,"file":"validator.factory.js","sourceRoot":"","sources":["../../src/validators/validator.factory.ts"],"names":[],"mappings":"AAAA,OAAO,EAGL,gBAAgB,EAChB,iBAAiB,GAClB,MAAM,aAAa,CAAC;AACrB,OAAO,EACL,aAAa,EACb,kBAAkB,EAClB,iBAAiB,EACjB,mBAAmB,EACnB,iBAAiB,EACjB,aAAa,EACb,qBAAqB,EACrB,sBAAsB,GACvB,MAAM,qCAAqC,CAAC;AAE7C,MAAM,CAAN,IAAY,cAUX;AAVD,WAAY,cAAc;IACxB,iDAA+B,CAAA;IAC/B,2DAAyC,CAAA;IACzC,iDAA+B,CAAA;IAC/B,yDAAuC,CAAA;IACvC,6DAA2C,CAAA;IAC3C,yDAAuC,CAAA;IACvC,iDAA+B,CAAA;IAC/B,iEAA+C,CAAA;IAC/C,mEAAiD,CAAA;AACnD,CAAC,EAVW,cAAc,KAAd,cAAc,QAUzB;AAED,MAAM,UAAU,YAAY,CAC1B,IAAmD;IAEnD,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC;SAChB,GAAG,CAAC,CAAC,CAAC,EAAE;QACP,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC;YAC1B,OAAO,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QACnC,CAAC;aAAM,IAAI,CAAC,IAAK,CAAS,CAAC,IAAI,EAAE,CAAC;YAChC,CAAC,GAAG,CAAmB,CAAC;YACxB,OAAO,gBAAgB,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;QAC7C,CAAC;aAAM,CAAC;YACN,OAAO,CAAiB,CAAC;QAC3B,CAAC;IACH,CAAC,CAAC;SACD,MAAM,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,IAAY,EAAE,OAAY;IACzD,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;IACvB,QAAQ,IAAI,EAAE,CAAC;QACb,KAAK,cAAc,CAAC,aAAa;YAC/B,OAAO,aAAa,CAAC;QACvB,KAAK,cAAc,CAAC,kBAAkB;YACpC,OAAO,kBAAkB,CAAC;QAC5B,KAAK,cAAc,CAAC,mBAAmB;YACrC,OAAO,mBAAmB,CAAC;QAC7B,KAAK,cAAc,CAAC,iBAAiB;YACnC,OAAO,iBAAiB,CAAC;QAC3B,KAAK,cAAc,CAAC,iBAAiB;YACnC,OAAO,iBAAiB,CAAC;QAC3B,KAAK,cAAc,CAAC,aAAa;YAC/B,OAAO,aAAa,CAAC;QACvB,KAAK,cAAc,CAAC,qBAAqB;YACvC,OAAO,qBAAqB,CAAC;QAC/B,KAAK,cAAc,CAAC,sBAAsB;YACxC,OAAO,sBAAsB,CAAC;QAChC;YACE,OAAO,gBAAgB,CAAC;IAC5B,CAAC;AACH,CAAC","sourcesContent":["import {\n  Validator,\n  ValidatorEntry,\n  defaultValidator,\n  combineValidators,\n} from './validator';\nimport {\n  requiredField,\n  requiredEmailField,\n  requiredFileInput,\n  requiredSelectField,\n  requiredDateInput,\n  requiredRadio,\n  requiredCheckboxGroup,\n  requiredCheckboxSingle,\n} from './input-validators/input-validators';\n\nexport enum ValidatorsName {\n  requiredField = 'requiredField',\n  requiredEmailField = 'requiredEmailField',\n  requiredCheck = 'requiredCheck',\n  requiredFileInput = 'requiredFileInput',\n  requiredSelectField = 'requiredSelectField',\n  requiredDateInput = 'requiredDateInput',\n  requiredRadio = 'requiredRadio',\n  requiredCheckboxGroup = 'requiredCheckboxGroup',\n  requiredCheckboxSingle = 'requiredCheckboxSingle',\n}\n\nexport function getValidator<A>(\n  list: Array<string | ValidatorEntry | Validator<A>>,\n): Validator<A> {\n  return (list || [])\n    .map(v => {\n      if (typeof v === 'string') {\n        return validatorFactory(v, null);\n      } else if (v && (v as any).name) {\n        v = v as ValidatorEntry;\n        return validatorFactory(v.name, v.options);\n      } else {\n        return v as Validator<A>;\n      }\n    })\n    .reduce(combineValidators, defaultValidator);\n}\n\nexport function validatorFactory(name: string, options: any): Validator<any> {\n  options ? options : {};\n  switch (name) {\n    case ValidatorsName.requiredField:\n      return requiredField;\n    case ValidatorsName.requiredEmailField:\n      return requiredEmailField;\n    case ValidatorsName.requiredSelectField:\n      return requiredSelectField;\n    case ValidatorsName.requiredDateInput:\n      return requiredDateInput;\n    case ValidatorsName.requiredFileInput:\n      return requiredFileInput;\n    case ValidatorsName.requiredRadio:\n      return requiredRadio;\n    case ValidatorsName.requiredCheckboxGroup:\n      return requiredCheckboxGroup;\n    case ValidatorsName.requiredCheckboxSingle:\n      return requiredCheckboxSingle;\n    default:\n      return defaultValidator;\n  }\n}\n"]}