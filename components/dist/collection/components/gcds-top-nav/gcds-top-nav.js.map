{"version":3,"file":"gcds-top-nav.js","sourceRoot":"","sources":["../../../src/components/gcds-top-nav/gcds-top-nav.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  State,\n  Listen,\n  Method,\n  h,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport { handleKeyDownNav, getNavItems } from '../../utils/menus/utils';\nimport I18N from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-top-nav',\n  styleUrl: 'gcds-top-nav.css',\n  shadow: true,\n})\nexport class GcdsTopNav {\n  @Element() el: HTMLElement;\n\n  private mobile?: HTMLGcdsNavGroupElement;\n\n  /**\n   * Label for navigation landmark\n   */\n  @Prop() label!: string;\n\n  /**\n   * Nav alignment\n   */\n  @Prop() alignment: 'left' | 'center' | 'right' = 'left';\n\n  /**\n   * Sticky navigation flag\n   */\n  // @Prop() position: 'static' | 'sticky' = 'static';\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Queue of nav items for keyboard navigation\n   */\n  @State() navItems = [];\n\n  /**\n   * Current size state based on widnow size\n   */\n  @State() navSize: 'desktop' | 'mobile';\n\n  @Listen('focusin', { target: 'document' })\n  async focusInListener(e) {\n    if (this.el.contains(e.target) && !this.navSize) {\n      const mediaQuery = window.matchMedia('screen and (min-width: 64em)');\n      const nav = this.el as HTMLGcdsTopNavElement;\n      const mobileTrigger = this.mobile;\n\n      if (mediaQuery.matches) {\n        this.navSize = 'desktop';\n      } else {\n        this.navSize = 'mobile';\n      }\n\n      await this.updateNavItemQueue(this.el);\n\n      mediaQuery.addEventListener('change', async function (e) {\n        if (e.matches) {\n          nav.updateNavSize('desktop');\n          await nav.updateNavItemQueue(nav);\n\n          if (mobileTrigger.hasAttribute('open')) {\n            mobileTrigger.toggleNav();\n            const childNavGroups = nav.querySelectorAll('gcds-nav-group');\n            childNavGroups.forEach(navGroup => {\n              if (navGroup.hasAttribute('open')) {\n                navGroup.toggleNav();\n              }\n            });\n          }\n        } else {\n          nav.updateNavSize('mobile');\n          const childNavGroups = nav.querySelectorAll('gcds-nav-group');\n          childNavGroups.forEach(navGroup => {\n            if (navGroup.hasAttribute('open')) {\n              navGroup.toggleNav();\n            }\n          });\n          await nav.updateNavItemQueue(nav);\n        }\n      });\n    }\n  }\n\n  @Listen('focusout', { target: 'document' })\n  async focusOutListener(e) {\n    if (!this.el.contains(e.relatedTarget)) {\n      if (this.navSize == 'mobile') {\n        if (this.mobile.hasAttribute('open')) {\n          await this.mobile.toggleNav();\n        }\n      }\n    }\n  }\n\n  @Listen('keydown', { target: 'document' })\n  async keyDownListener(e) {\n    if (this.el.contains(document.activeElement)) {\n      handleKeyDownNav(e, this.el, this.navItems);\n    }\n  }\n\n  @Listen('gcdsClick', { target: 'document' })\n  async gcdsClickListener(e) {\n    if (this.el.contains(e.target)) {\n      // Update tab queue when clicking mobile menu\n      if (e.target == this.el && this.navSize == 'mobile') {\n        await this.updateNavItemQueue(e.target);\n\n        // Update tab queue when clicking dropdown\n      } else if (\n        e.target.nodeName == 'GCDS-NAV-GROUP' &&\n        !e.target.hasAttribute('open')\n      ) {\n        await this.updateNavItemQueue(e.target, true);\n        (e.target as HTMLGcdsNavGroupElement).focusTrigger();\n      }\n    }\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  /*\n   * Get current navSize state\n   */\n  @Method()\n  async getNavSize() {\n    return this.navSize;\n  }\n\n  /*\n   * Pass new window size: desktop or mobile\n   */\n  @Method()\n  async updateNavSize(size) {\n    this.navSize = size;\n  }\n\n  /*\n   * Update item queue for keyboard navigation based on passed element\n   */\n  @Method()\n  async updateNavItemQueue(el, includeElement?: boolean) {\n    if (includeElement) {\n      const childElements = await getNavItems(el);\n      this.navItems = [el, ...childElements];\n    } else {\n      this.navItems = await getNavItems(el);\n    }\n\n    if (el == this.el && this.navSize == 'mobile') {\n      this.navItems = [...this.navItems, this.mobile];\n    }\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  render() {\n    const { label, alignment, lang } = this;\n\n    return (\n      <Host>\n        <div class=\"gcds-top-nav\">\n          <nav aria-label={`${label}${I18N[lang].navLabel}`}>\n            <ul class=\"gcds-top-nav__container\">\n              <gcds-nav-group\n                menuLabel={I18N[lang].menuLabel}\n                closeTrigger={I18N[lang].closeTrigger}\n                openTrigger={I18N[lang].menuLabel}\n                class=\"gcds-mobile-nav gcds-mobile-nav-topnav\"\n                ref={element =>\n                  (this.mobile = element as HTMLGcdsNavGroupElement)\n                }\n                lang={lang}\n              >\n                <slot name=\"home\"></slot>\n                <li class={`nav-container__list nav-list--${alignment}`}>\n                  <ul class={`nav-container__list nav-list--${alignment}`}>\n                    <slot></slot>\n                  </ul>\n                </li>\n              </gcds-nav-group>\n            </ul>\n          </nav>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}