{"version":3,"file":"gcds-topic-menu.stories.js","sourceRoot":"","sources":["../../../../../src/components/gcds-topic-menu/stories/gcds-topic-menu.stories.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,+CAA+C,CAAC;AAEzE,eAAe;IACb,KAAK,EAAE,iCAAiC;IAExC,QAAQ;QACN,QAAQ;QACR,IAAI,EAAE;YACJ,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,OAAO,EAAE,CAAC,KAAK,EAAE,IAAI,CAAC;YACtB,KAAK,EAAE;gBACL,IAAI,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE;gBAC5B,YAAY,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE;aACjC;SACF,IACE,QAAQ,CACZ;CACF,CAAC;AAEF,MAAM,QAAQ,GAAG,IAAI,CAAC,EAAE,CACtB;;mBAEiB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IACxC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAC9C;;;;iBAIe,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,IACtC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAC9C;;CAED,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AAExB,MAAM,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC;;IAE/B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI;IACzB,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI;;;CAGnD,CAAC;AAEF,+CAA+C;AAE/C,MAAM,CAAC,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,OAAO,CAAC,IAAI,GAAG;IACb,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,IAAI;CACX,CAAC;AAEF,8CAA8C;AAE9C,MAAM,CAAC,MAAM,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACxC,MAAM,CAAC,IAAI,GAAG;IACZ,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,IAAI;CACX,CAAC;AAEF,4CAA4C;AAE5C,MAAM,CAAC,MAAM,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACtC,IAAI,CAAC,IAAI,GAAG;IACV,IAAI,EAAE,IAAI;IACV,IAAI,EAAE,IAAI;CACX,CAAC;AAEF,oDAAoD;AAEpD,MAAM,CAAC,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACvC,KAAK,CAAC,IAAI,GAAG;IACX,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,IAAI;CACX,CAAC;AAEF,gDAAgD;AAEhD,MAAM,CAAC,MAAM,UAAU,GAAG,kBAAkB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACtD,UAAU,CAAC,IAAI,GAAG;IAChB,IAAI,EAAE,KAAK;IACX,IAAI,EAAE,IAAI;CACX,CAAC","sourcesContent":["import { langProp } from '../../../utils/storybook/component-properties';\n\nexport default {\n  title: 'Components/Theme and topic menu',\n\n  argTypes: {\n    // Props\n    home: {\n      control: { type: 'select' },\n      options: [false, true],\n      table: {\n        type: { summary: 'boolean' },\n        defaultValue: { summary: false },\n      },\n    },\n    ...langProp,\n  },\n};\n\nconst Template = args =>\n  `\n<!-- Web component code (HTML, Angular, Vue) -->\n<gcds-topic-menu ${args.home ? `home` : null} ${\n    args.lang != 'en' ? `lang=\"${args.lang}\"` : null\n  }>\n</gcds-topic-menu>\n\n<!-- React code -->\n<GcdsTopicMenu ${args.home ? `home` : null} ${\n    args.lang != 'en' ? `lang=\"${args.lang}\"` : null\n  }>\n</GcdsTopicMenu>\n`.replace(/ null/g, '');\n\nconst TemplatePlayground = args => `\n<gcds-topic-menu\n  ${args.home ? `home` : null}\n  ${args.lang != 'en' ? `lang=\"${args.lang}\"` : null}\n>\n</gcds-topic-menu>\n`;\n\n// ------ Theme and topic menu - English ------\n\nexport const English = Template.bind({});\nEnglish.args = {\n  home: false,\n  lang: 'en',\n};\n\n// ------ Theme and topic menu - French ------\n\nexport const French = Template.bind({});\nFrench.args = {\n  home: false,\n  lang: 'fr',\n};\n\n// ------ Theme and topic menu - Home ------\n\nexport const Home = Template.bind({});\nHome.args = {\n  home: true,\n  lang: 'en',\n};\n\n// ------ Theme and topic menu events & props ------\n\nexport const Props = Template.bind({});\nProps.args = {\n  home: false,\n  lang: 'en',\n};\n\n// ------ Theme and topic menu playground ------\n\nexport const Playground = TemplatePlayground.bind({});\nPlayground.args = {\n  home: false,\n  lang: 'en',\n};\n"]}