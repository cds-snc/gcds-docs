{"version":3,"file":"gcds-grid.js","sourceRoot":"","sources":["../../../src/components/gcds-grid/gcds-grid.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Host, Watch, Prop, h } from '@stencil/core';\nimport i18n from './i18n/i18n';\n\nexport type ContentValues =\n  | 'center'\n  | 'end'\n  | 'space-around'\n  | 'space-between'\n  | 'space-evenly'\n  | 'start'\n  | 'stretch';\n\nexport type GridGapValues =\n  | '150'\n  | '175'\n  | '200'\n  | '225'\n  | '250'\n  | '300'\n  | '350'\n  | '400'\n  | '450'\n  | '500'\n  | '550'\n  | '600'\n  | '650'\n  | '700'\n  | '750'\n  | '800';\n\nconst GridGapArray = [\n  '150',\n  '175',\n  '200',\n  '225',\n  '250',\n  '300',\n  '350',\n  '400',\n  '450',\n  '500',\n  '550',\n  '600',\n  '650',\n  '700',\n  '750',\n  '800',\n];\n\n@Component({\n  tag: 'gcds-grid',\n  styleUrl: 'gcds-grid.css',\n  shadow: true,\n})\nexport class GcdsGrid {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines the default number of grid columns for all viewports if columns-tablet\n   * and columns-desktop are not defined. Option to set different layouts for\n   * desktop with columns-desktop and for tablet with columns-tablet.\n   */\n  @Prop() columns?: string;\n\n  /**\n   * Provides option to set a different number of grid columns for tablet screens.\n   * If columns-desktop is not defined, columns-tablet will be used to define the\n   * number of columns for desktop as well.\n   */\n  @Prop() columnsTablet?: string;\n\n  /**\n   * Provides option to set a different number of grid columns for desktop screens.\n   */\n  @Prop() columnsDesktop?: string;\n\n  /**\n   * Defines grid container size\n   */\n  @Prop() container?: 'full' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\n\n  /**\n   * Defines if grid container is centered or not\n   */\n  @Prop() centered?: boolean = false;\n\n  /**\n   * Defines element as grid or inline-grid container\n   */\n  @Prop() display?: 'grid' | 'inline-grid' = 'grid';\n\n  /**\n   * Sets all grid items to have an equal height,\n   * based on the tallest item.\n   */\n  @Prop() equalRowHeight?: boolean = false;\n\n  /**\n   * Defines the horizontal and vertical spacing between items in\n   * a grid container for all viewports if gap-tablet and gap-desktop\n   * are not defined. Option to set different spacing for desktop\n   * with gap-desktop and for tablet with gap-tablet.\n   */\n  @Prop() gap?: GridGapValues = '300';\n\n  @Watch('gap')\n  validateGap(newValue: string) {\n    const values = GridGapArray;\n\n    if (!values.includes(newValue)) {\n      this.gap = '300';\n    }\n  }\n\n  /**\n   * Provides option to set horizontal and vertical spacing between items in a\n   * grid container for tablet screens. If gap-desktop is not defined, gap-tablet\n   * will be used to define the spacing for desktop screens as well.\n   */\n  @Prop() gapTablet?: GridGapValues;\n\n  @Watch('gapTablet')\n  validateGapTablet(newValue: string) {\n    const values = GridGapArray;\n\n    if (newValue != undefined && !values.includes(newValue)) {\n      this.gapTablet = undefined;\n      console.error(\n        `${i18n['en'].gapTabletError} | ${i18n['fr'].gapTabletError}`,\n      );\n    }\n  }\n\n  /**\n   * Provides option to set horizontal and vertical spacing between items\n   * in a grid container for desktop screens.\n   */\n  @Prop() gapDesktop?: GridGapValues;\n\n  @Watch('gapDesktop')\n  validateGapDesktop(newValue: string) {\n    const values = GridGapArray;\n\n    if (newValue != undefined && !values.includes(newValue)) {\n      this.gapDesktop = undefined;\n      console.error(\n        `${i18n['en'].gapDesktopError} | ${i18n['fr'].gapDesktopError}`,\n      );\n    }\n  }\n\n  /**\n   * Set tag for grid container\n   */\n  @Prop({ mutable: true }) tag?:\n    | 'article'\n    | 'aside'\n    | 'div'\n    | 'dl'\n    | 'main'\n    | 'nav'\n    | 'ol'\n    | 'section'\n    | 'ul' = 'div';\n\n  @Watch('tag')\n  validateTag(newValue: string) {\n    const values = [\n      'article',\n      'aside',\n      'div',\n      'dl',\n      'main',\n      'nav',\n      'ol',\n      'section',\n      'ul',\n    ];\n\n    if (!values.includes(newValue)) {\n      this.tag = 'div';\n    }\n  }\n\n  /**\n   * If total grid size is less than the size of its grid container,\n   * this property aligns the grid along the block (column) axis\n   */\n  @Prop() alignContent?: ContentValues;\n\n  /**\n   * If total grid size is less than the size of its grid container,\n   * this property aligns the grid along the inline (row) axis\n   */\n  @Prop() justifyContent?: ContentValues;\n\n  /**\n   * Sets both the align-content + justify-content properties\n   */\n  @Prop() placeContent?: ContentValues;\n\n  /**\n   * Aligns grid items along the block (column) axis\n   */\n  @Prop() alignItems?: 'baseline' | 'center' | 'end' | 'start' | 'stretch';\n\n  /**\n   * Aligns grid items along the inline (row) axis\n   */\n  @Prop() justifyItems?: 'center' | 'end' | 'start' | 'stretch';\n\n  /**\n   * Sets both the align-items + justify-items properties\n   */\n  @Prop() placeItems?: 'center' | 'end' | 'start' | 'stretch';\n\n  componentWillLoad() {\n    // Validate attributes and set defaults\n    this.validateTag(this.tag);\n    this.validateGap(this.gap);\n    this.validateGapTablet(this.gapTablet);\n    this.validateGapDesktop(this.gapDesktop);\n  }\n\n  render() {\n    const {\n      alignContent,\n      alignItems,\n      columns,\n      columnsDesktop,\n      columnsTablet,\n      container,\n      centered,\n      display,\n      equalRowHeight,\n      gap,\n      gapTablet,\n      gapDesktop,\n      justifyContent,\n      justifyItems,\n      placeContent,\n      placeItems,\n      tag,\n    } = this;\n\n    const Tag = tag;\n    const classNames = `\n      gcds-grid\n      ${alignContent ? `align-content-${alignContent}` : ''}\n      ${alignItems ? `align-items-${alignItems}` : ''}\n      ${\n        (columns || columnsTablet || columnsDesktop) === undefined\n          ? `display-grid-with-cols`\n          : `display-${display}`\n      }\n      ${equalRowHeight ? 'equal-row-height' : ''}\n      ${justifyContent ? `justify-content-${justifyContent}` : ''}\n      ${justifyItems ? `justify-items-${justifyItems}` : ''}\n      ${placeContent ? `place-content-${placeContent}` : ''}\n      ${placeItems ? `place-items-${placeItems}` : ''}\n    `;\n\n    // Set CSS variables in style attribute based on passed column + gap properties\n    function handleGridStyles() {\n      const gridStyles = {};\n\n      const setGridProperty = (value, property, suffix = '') => {\n        const gapValue = `var(--gcds-grid-gap-${value})`;\n        const tokenValue = property === 'gap' ? gapValue : value;\n\n        if (value) {\n          gridStyles[`--gcds-grid-${property}${suffix}`] = tokenValue;\n        }\n      };\n\n      // Handle columns\n      setGridProperty(columns, 'columns');\n      setGridProperty(columnsTablet, 'columns', '-tablet');\n      setGridProperty(columnsDesktop, 'columns', '-desktop');\n\n      // Handle gap\n      setGridProperty(gap, 'gap');\n      setGridProperty(gapTablet, 'gap', '-tablet');\n      setGridProperty(gapDesktop, 'gap', '-desktop');\n\n      return gridStyles;\n    }\n\n    return (\n      <Host>\n        {container ? (\n          <gcds-container size={container} centered={centered}>\n            <Tag class={classNames} style={handleGridStyles()}>\n              <slot />\n            </Tag>\n          </gcds-container>\n        ) : (\n          <Tag class={classNames} style={handleGridStyles()}>\n            <slot />\n          </Tag>\n        )}\n      </Host>\n    );\n  }\n}\n"]}