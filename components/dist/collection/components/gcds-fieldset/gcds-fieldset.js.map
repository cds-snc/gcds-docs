{"version":3,"file":"gcds-fieldset.js","sourceRoot":"","sources":["../../../src/components/gcds-fieldset/gcds-fieldset.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AAChF,OAAO,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC;AACtD,OAAO,IAAI,MAAM,aAAa,CAAC;AAM/B,MAAM,OAAO,YAAY;;;;;mCAsCgB,EAAE;;IAbzC,kBAAkB,CAAC,QAAgB;QACjC,MAAM,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAE9C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC/B,OAAO,CAAC,KAAK,CACX,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,MAAM,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAChE,CAAC;QACJ,CAAC;IACH,CAAC;IAOD,KAAK,CAAC,iBAAiB;QACrB,uCAAuC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEzC,IAAI,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;IAC5E,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,mBAAmB,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;QAE/D,MAAM,aAAa,qBACd,mBAAmB,CACvB,CAAC;QAEF,OAAO,CACL,EAAC,IAAI;YACH,+EACE,KAAK,EAAC,eAAe,IACjB,aAAa,uBAEf,IAAI,CAAC,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC,iBAAiB,EAE5D,QAAQ,EAAC,IAAI,EACb,GAAG,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,OAAsB,CAAC;gBAE7D,+DAAQ,EAAE,EAAC,iBAAiB,EAAC,KAAK,EAAE,QAAQ,UAAU,EAAE,IACrD,MAAM,CACA;gBAER,IAAI,CAAC,CAAC,CAAC,CACN,iBAAW,EAAE,EAAC,eAAe,aAAS,UAAU,IAC7C,IAAI,CACK,CACb,CAAC,CAAC,CAAC,IAAI;gBAER,8DAAa,CACJ,CACN,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, Element, State, Host, Watch, h } from '@stencil/core';\nimport { inheritAttributes } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n@Component({\n  tag: 'gcds-fieldset',\n  styleUrl: 'gcds-fieldset.css',\n  shadow: { delegatesFocus: true },\n})\nexport class GcdsFieldset {\n  @Element() el: HTMLElement;\n\n  private shadowElement?: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Hint displayed below the legend.\n   */\n  @Prop({ reflect: true, mutable: false }) hint: string;\n\n  /**\n   * The title for the contents of the fieldset\n   */\n  @Prop({ reflect: true, mutable: false }) legend!: string;\n\n  /**\n   * Sets the appropriate font size for the fieldset legend.\n   */\n  @Prop({ mutable: true }) legendSize!: 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n\n  @Watch('legendSize')\n  validateLegendSize(newValue: string) {\n    const values = ['h2', 'h3', 'h4', 'h5', 'h6'];\n\n    if (!values.includes(newValue)) {\n      console.error(\n        `${i18n['en'].legendSizeError} | ${i18n['fr'].legendSizeError}`,\n      );\n    }\n  }\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  async componentWillLoad() {\n    // Validate attributes and set defaults\n    this.validateLegendSize(this.legendSize);\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n  }\n\n  render() {\n    const { hint, inheritedAttributes, legend, legendSize } = this;\n\n    const fieldsetAttrs = {\n      ...inheritedAttributes,\n    };\n\n    return (\n      <Host>\n        <fieldset\n          class=\"gcds-fieldset\"\n          {...fieldsetAttrs}\n          aria-labelledby={\n            hint ? `fieldset-legend fieldset-hint` : `fieldset-legend`\n          }\n          tabindex=\"-1\"\n          ref={element => (this.shadowElement = element as HTMLElement)}\n        >\n          <legend id=\"fieldset-legend\" class={`size-${legendSize}`}>\n            {legend}\n          </legend>\n\n          {hint ? (\n            <gcds-hint id=\"fieldset-hint\" hint-id=\"fieldset\">\n              {hint}\n            </gcds-hint>\n          ) : null}\n\n          <slot></slot>\n        </fieldset>\n      </Host>\n    );\n  }\n}\n"]}