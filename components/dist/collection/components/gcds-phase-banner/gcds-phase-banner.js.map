{"version":3,"file":"gcds-phase-banner.js","sourceRoot":"","sources":["../../../src/components/gcds-phase-banner/gcds-phase-banner.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AACzE,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnE,OAAO,IAAI,MAAM,aAAa,CAAC;AAO/B,MAAM,OAAO,eAAe;IAL5B;QAQE;;WAEG;QAEH;;WAEG;QACK,eAAU,GAA6B,SAAS,CAAC;QAEzD;;WAEG;QACK,cAAS,GAA+C,IAAI,CAAC;KAmEtE;IAvDC;;OAEG;IAEH;;OAEG;IACH,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,SAAS,CAAC,EAAE;YAChD,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;gBAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;YAC3B,CAAC;QACH,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;IAC5C,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,wBAAwB;QACxB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAEtD,OAAO,CACL,EAAC,IAAI;YACH,4DACE,KAAK,EAAE,kCAAkC,UAAU,IACjD,OAAO,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,EACjC,EAAE,EACF,IAAI,EAAC,QAAQ,gBACD,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK;gBAE5B,uEAAgB,IAAI,EAAE,SAAS,EAAE,QAAQ;oBACvC,4DAAK,KAAK,EAAC,iBAAiB;wBAC1B,+DAAQ,KAAK,EAAC,yBAAyB;4BACrC,6DAAM,IAAI,EAAC,kBAAkB,GAAG,CACzB;wBAET,4DAAK,KAAK,EAAC,iBAAiB;4BAC1B,6DAAM,IAAI,EAAC,aAAa,GAAG;4BAC3B,6DAAM,IAAI,EAAC,YAAY,GAAG,CACtB;wBAEN,+DAAQ,KAAK,EAAC,0BAA0B;4BACtC,6DAAM,IAAI,EAAC,mBAAmB,GAAG,CAC1B,CACL,CACS,CACb,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Element, Host, Prop, State, h } from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-phase-banner',\n  styleUrl: 'gcds-phase-banner.css',\n  shadow: true,\n})\nexport class GcdsPhaseBanner {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines banner role.\n   */\n  @Prop() bannerRole?: 'primary' | 'secondary' = 'primary';\n\n  /**\n   * Defines the container width of the phase banner content\n   */\n  @Prop() container?: 'full' | 'xl' | 'lg' | 'md' | 'sm' | 'xs' = 'xl';\n\n  /**\n   * Defines if the banner's position is fixed.\n   */\n  @Prop() isFixed?: boolean;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  render() {\n    const { bannerRole, container, isFixed, lang } = this;\n\n    return (\n      <Host>\n        <div\n          class={`gcds-phase-banner banner--role-${bannerRole} ${\n            isFixed ? 'banner--is-fixed' : ''\n          }`}\n          role=\"status\"\n          aria-label={i18n[lang].label}\n        >\n          <gcds-container size={container} centered>\n            <div class=\"banner__content\">\n              <figure class=\"banner__icon icon--left\">\n                <slot name=\"banner-icon-left\" />\n              </figure>\n\n              <div class=\"banner__details\">\n                <slot name=\"banner-text\" />\n                <slot name=\"banner-cta\" />\n              </div>\n\n              <figure class=\"banner__icon icon--right\">\n                <slot name=\"banner-icon-right\" />\n              </figure>\n            </div>\n          </gcds-container>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}