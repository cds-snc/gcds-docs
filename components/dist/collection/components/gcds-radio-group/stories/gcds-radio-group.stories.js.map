{"version":3,"file":"gcds-radio-group.stories.js","sourceRoot":"","sources":["../../../../src/components/gcds-radio-group/stories/gcds-radio-group.stories.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  langProp,\n  eventProp,\n} from '../../../utils/storybook/component-properties';\n\nexport default {\n  title: 'Components/Radio Group',\n\n  parameters: {\n    actions: {\n      argTypesRegex: '^gcds.*',\n      handles: ['change', 'focus', 'blur'],\n    },\n  },\n\n  argTypes: {\n    // Props\n    name: {\n      control: 'text',\n      table: {\n        type: { summary: 'string' },\n        defaultValue: { summary: '-' },\n      },\n      type: {\n        required: true,\n      },\n    },\n    options: {\n      control: 'text',\n      table: {\n        type: {\n          summary: `\n        {\n          id: string;\n          label: string;\n          value: string;\n          hint?: string;\n          checked?: boolean;\n          required?: boolean;\n          disabled?: boolean;\n        }\n        string | object[]`,\n        },\n        defaultValue: { summary: '-' },\n      },\n      type: {\n        required: true,\n      },\n    },\n    ...langProp,\n\n    // Events\n    gcdsChange: {\n      action: 'change',\n      ...eventProp,\n    },\n    gcdsFocus: {\n      action: 'focus',\n      ...eventProp,\n    },\n    gcdsBlur: {\n      action: 'blur',\n      ...eventProp,\n    },\n  },\n};\n\nconst Template = args =>\n  `\n<!-- Web component code (HTML, Angular, Vue) -->\n<gcds-radio-group\n  name=\"${args.name}\"\n  options='${args.options}'\n>\n</gcds-radio-group>\n\n<!-- React code -->\n<GcdsRadioGroup\n  name=\"${args.name}\"\n  options='${args.options}'\n>\n</GcdsRadioGroup>\n`.replace(/\\s\\snull\\n/g, '');\n\nconst TemplateError = args =>\n  `\n<gcds-fieldset\n  legend=\"Fieldset legend\"\n  fieldset-id=\"fieldset\"\n  hint=\"Radio buttons only validate in fieldset\"\n  required\n>\n  <gcds-radio-group\n    name=\"${args.name}\"\n    options='${args.options}'\n  >\n  </gcds-radio-group>\n</gcds-fieldset>\n\n<!-- Script to provide validated example -->\n<script>document.querySelector('[fieldset-id=fieldset').validate();</script>\n`.replace(/\\s\\snull\\n/g, '');\n\nconst TemplatePlayground = args =>\n  `\n<!-- Web component code (Angular, Vue) -->\n<gcds-radio-group\n  name=\"${args.name}\"\n  options='${args.options}'\n>\n</gcds-radio-group>\n`.replace(/\\s\\snull\\n/g, '');\n\nexport const Default = Template.bind({});\nDefault.args = {\n  name: 'radioDefault',\n  options: `[\n    { \"label\": \"Label for radio 1\", \"id\": \"radio1\", \"value\": \"radio1\", \"hint\": \"Description or example to make the option clearer.\"},\n    { \"label\": \"Label for radio 2\", \"id\": \"radio2\", \"value\": \"radio2\", \"hint\": \"Description or example to make the option clearer.\"}\n  ]`,\n  lang: 'en',\n};\n\nexport const Disabled = Template.bind({});\nDisabled.args = {\n  name: 'radio',\n  options:\n    '[{ \"label\": \"Label\", \"id\": \"radio\", \"value\": \"radio1\", \"hint\": \"Description or example to make the option clearer.\", \"disabled\": true}]',\n  lang: 'en',\n};\n\nexport const Checked = Template.bind({});\nChecked.args = {\n  name: 'radio',\n  options:\n    '[{ \"label\": \"Label\", \"id\": \"radio\", \"value\": \"radio1\", \"hint\": \"Description or example to make the option clearer.\", \"checked\": true}]',\n  lang: 'en',\n};\n\nexport const Error = TemplateError.bind({});\nError.args = {\n  name: 'radioDefault',\n  options: `[\n    { \"label\": \"Label for radio 1\", \"id\": \"radio1\", \"value\": \"radio1\", \"hint\": \"Description or example to make the option clearer.\"},\n    { \"label\": \"Label for radio 2\", \"id\": \"radio2\", \"value\": \"radio2\", \"hint\": \"Description or example to make the option clearer.\"}\n  ]`,\n  lang: 'en',\n};\n\nexport const Props = Template.bind({});\nProps.args = {\n  name: 'radioDefault',\n  options: `[\n    { \"label\": \"Label for radio 1\", \"id\": \"radio1\", \"value\": \"radio1\", \"hint\": \"Description or example to make the option clearer.\"},\n    { \"label\": \"Label for radio 2\", \"id\": \"radio2\", \"value\": \"radio2\", \"hint\": \"Description or example to make the option clearer.\"}\n  ]`,\n  lang: 'en',\n};\n\nexport const Playground = TemplatePlayground.bind({});\nPlayground.args = {\n  name: 'radio',\n  options: `[\n    { \"label\": \"Label for radio 1\", \"id\": \"radio1\", \"value\": \"radio1\", \"hint\": \"Description or example to make the option clearer.\", },\n    { \"label\": \"Label for radio 2\", \"id\": \"radio2\", \"value\": \"radio2\", \"hint\": \"Description or example to make the option clearer.\", }\n  ]`,\n  lang: 'en',\n};\n"]}