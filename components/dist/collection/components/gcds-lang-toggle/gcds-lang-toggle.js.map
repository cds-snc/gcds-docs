{"version":3,"file":"gcds-lang-toggle.js","sourceRoot":"","sources":["../../../../src/components/gcds-lang-toggle/gcds-lang-toggle.tsx"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,OAAO,EACP,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,KAAK,EAEL,CAAC,GACF,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnE,OAAO,IAAI,MAAM,aAAa,CAAC;AAE/B;;GAEG;AAMH,MAAM,OAAO,cAAc;IAoCzB;;OAEG;IACH,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,SAAS,CAAC,EAAE;YAChD,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAC;gBAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;YAC3B,CAAC;QACH,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;IAC5C,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,wBAAwB;QACxB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;QAE5B,OAAO,CACL,EAAC,IAAI;YACH,4DAAK,KAAK,EAAC,kBAAkB;gBAC3B,qEAAc,EAAE,EAAC,sBAAsB,EAAC,GAAG,EAAC,IAAI,IAC7C,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CACN;gBACf,kEAAW,IAAI,EAAC,SAAS,EAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY;oBACjE,+DAAO,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAQ;oBAClC,6DAAM,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAG,IAAI,CAAC,IAAI,CAAC,CAAC,YAAY,CAAQ,CACxD,CACR,CACD,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  State,\n  Event,\n  EventEmitter,\n  h,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n/**\n * The language toggle is a link to the same content in the other Official Language.\n */\n@Component({\n  tag: 'gcds-lang-toggle',\n  styleUrl: 'gcds-lang-toggle.css',\n  shadow: true,\n})\nexport class GcdsLangToggle {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * The href attribute specifies the URL of the opposite language page\n   */\n  @Prop({ reflect: true, mutable: false }) href!: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the link has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the link loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  /**\n   * Emitted when the link has been clicked. Contains the href in the event detail.\n   */\n  @Event() gcdsClick!: EventEmitter<string>;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  render() {\n    const { lang, href } = this;\n\n    return (\n      <Host>\n        <div class=\"gcds-lang-toggle\">\n          <gcds-sr-only id=\"lang-toggle__heading\" tag=\"h2\">\n            {i18n[lang].heading}\n          </gcds-sr-only>\n          <gcds-link size=\"regular\" href={href} lang={i18n[lang].abbreviation}>\n            <span>{i18n[lang].language}</span>\n            <abbr title={i18n[lang].language}>{i18n[lang].abbreviation}</abbr>\n          </gcds-link>\n        </div>\n      </Host>\n    );\n  }\n}\n"]}