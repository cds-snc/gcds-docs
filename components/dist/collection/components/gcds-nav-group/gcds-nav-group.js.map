{"version":3,"file":"gcds-nav-group.js","sourceRoot":"","sources":["../../../src/components/gcds-nav-group/gcds-nav-group.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  State,\n  Method,\n  Event,\n  EventEmitter,\n  Listen,\n  h,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  observerConfig,\n  emitEvent,\n  closestElement,\n} from '../../utils/utils';\n\n@Component({\n  tag: 'gcds-nav-group',\n  styleUrl: 'gcds-nav-group.css',\n  shadow: true,\n})\nexport class GcdsNavGroup {\n  @Element() el: HTMLElement;\n\n  private triggerElement?: HTMLElement;\n\n  /**\n   *  Label for the expanded button trigger\n   */\n  @Prop({ reflect: true }) closeTrigger?: string;\n\n  /**\n   * Label for the nav group menu\n   */\n  @Prop({ reflect: true }) menuLabel!: string;\n\n  /**\n   *  Label for the collapsed button trigger\n   */\n  @Prop({ reflect: true }) openTrigger!: string;\n\n  /**\n   * Has the nav group been expanded\n   */\n  @Prop({ reflect: true, mutable: true }) open: boolean = false;\n\n  /**\n   * Emitted when the button has been clicked.\n   */\n  @Event() gcdsClick!: EventEmitter<void>;\n\n  /**\n   * Emitted when the button has been focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the button blurs.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Style of nav to render based on parent\n   */\n  @State() navStyle: string;\n\n  /**\n   * Position of nav for mobile menu logic\n   */\n  @State() navPosiiton: number;\n\n  // Close dropdowns on focusout when on desktop screen size\n  @Listen('focusout', { target: 'document' })\n  async focusOutListener(e) {\n    if (\n      (e.target === this.el || this.el.contains(e.target)) &&\n      !this.el.contains(e.relatedTarget) &&\n      this.navStyle === 'dropdown' &&\n      this.open &&\n      window.innerWidth >= 1024\n    ) {\n      setTimeout(() => this.toggleNav(), 200);\n    }\n  }\n\n  /**\n   * Focus button element\n   */\n  @Method()\n  async focusTrigger() {\n    this.triggerElement.focus();\n  }\n\n  /**\n   * Toggle the nav open or closed\n   */\n  @Method()\n  async toggleNav() {\n    this.open = !this.open;\n\n    // Close any child nav-groups\n    for (let i = 0; i < this.el.children.length; i++) {\n      if (\n        this.el.children[i].nodeName == 'GCDS-NAV-GROUP' &&\n        this.el.children[i].hasAttribute('open')\n      ) {\n        (this.el.children[i] as HTMLGcdsNavGroupElement).toggleNav();\n      }\n    }\n\n    // Dropdown exception - Close child dropdown nav-groups if opened in mobile menu\n    if (this.el.classList.contains('gcds-mobile-nav-topnav')) {\n      const topnav = closestElement('gcds-top-nav', this.el);\n      const childNavGroups = topnav.querySelectorAll('gcds-nav-group');\n      childNavGroups.forEach(navGroup => {\n        if (navGroup.hasAttribute('open')) {\n          navGroup.toggleNav();\n        }\n      });\n    }\n\n    // Remove ability to scroll page when mobile menu is open\n    if (this.el.classList.contains('gcds-mobile-nav')) {\n      if (this.open) {\n        this.navPosiiton = window.scrollY;\n        document.body.style.position = 'fixed';\n      } else {\n        document.body.style.removeProperty('position');\n        window.scrollTo(0, this.navPosiiton);\n      }\n    }\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    if (this.el.parentNode.nodeName == 'GCDS-TOP-NAV') {\n      this.navStyle = 'dropdown';\n\n      if (this.open) {\n        this.open = false;\n      }\n    } else {\n      this.navStyle = 'expandable';\n    }\n\n    if (\n      this.el.parentNode.nodeName == 'GCDS-NAV-GROUP' &&\n      !(this.el.parentNode as HTMLElement).classList.contains(\n        'gcds-mobile-nav',\n      ) &&\n      this.el.closest('gcds-top-nav')\n    ) {\n      this.el.remove();\n    }\n  }\n\n  render() {\n    const { closeTrigger, menuLabel, open, openTrigger } = this;\n\n    return (\n      <Host role=\"listitem\" open={open}>\n        <button\n          aria-haspopup=\"true\"\n          tabIndex={0}\n          aria-expanded={open.toString()}\n          ref={element => (this.triggerElement = element as HTMLElement)}\n          class={`gcds-nav-group__trigger gcds-trigger--${this.navStyle}`}\n          onBlur={() => this.gcdsBlur.emit()}\n          onFocus={() => this.gcdsFocus.emit()}\n          onClick={e => {\n            const event = emitEvent(e, this.gcdsClick);\n            if (event) {\n              this.toggleNav();\n            }\n          }}\n        >\n          <gcds-icon name={open ? 'angle-up' : 'angle-down'}></gcds-icon>\n          {closeTrigger && open ? closeTrigger : openTrigger}\n        </button>\n        <ul\n          aria-label={menuLabel}\n          class={`gcds-nav-group__list gcds-nav--${this.navStyle}`}\n        >\n          <slot></slot>\n        </ul>\n      </Host>\n    );\n  }\n}\n"]}