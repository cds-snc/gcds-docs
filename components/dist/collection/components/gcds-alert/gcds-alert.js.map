{"version":3,"file":"gcds-alert.js","sourceRoot":"","sources":["../../../src/components/gcds-alert/gcds-alert.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Host,\n  Prop,\n  State,\n  h,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig, emitEvent } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-alert',\n  styleUrl: 'gcds-alert.css',\n  shadow: true,\n})\nexport class GcdsAlert {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines alert role.\n   */\n  @Prop() alertRole?: 'danger' | 'info' | 'success' | 'warning' = 'info';\n\n  /**\n   * Defines the max width of the alert content.\n   */\n  @Prop() container?: 'full' | 'xl' | 'lg' | 'md' | 'sm' | 'xs' = 'full';\n\n  /**\n   * Defines the alert heading.\n   */\n  @Prop() heading!: string;\n\n  /**\n   * Defines if the alert's close button is displayed or not.\n   */\n  @Prop() hideCloseBtn?: boolean = false;\n\n  /**\n   * Defines if the alert's role icon is displayed or not.\n   */\n  @Prop() hideRoleIcon?: boolean = false;\n\n  /**\n   * Defines if the alert's position is fixed.\n   */\n  @Prop({ mutable: true }) isFixed?: boolean = false;\n\n  /**\n   * States\n   */\n\n  /**\n   * Specifies if the alert is open or not.\n   */\n  @State() isOpen: boolean = true;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  @Event() gcdsDismiss!: EventEmitter<void>;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  render() {\n    const {\n      alertRole,\n      container,\n      heading,\n      hideCloseBtn,\n      hideRoleIcon,\n      isFixed,\n      isOpen,\n      lang,\n    } = this;\n\n    return (\n      <Host>\n        {isOpen ? (\n          <div\n            class={`gcds-alert alert--role-${alertRole} ${\n              isFixed ? 'alert--is-fixed' : ''\n            }`}\n            role=\"alert\"\n            aria-label={\n              alertRole === 'danger'\n                ? i18n[lang].label.danger\n                : alertRole === 'info'\n                  ? i18n[lang].label.info\n                  : alertRole === 'success'\n                    ? i18n[lang].label.success\n                    : alertRole === 'warning'\n                      ? i18n[lang].label.warning\n                      : null\n            }\n          >\n            <gcds-container size={isFixed ? container : 'full'} centered>\n              <div class=\"alert__container\">\n                {!hideRoleIcon && (\n                  <gcds-icon\n                    aria-hidden=\"true\"\n                    class=\"alert__icon\"\n                    size=\"h5\"\n                    margin-right=\"175\"\n                    name={\n                      alertRole === 'danger'\n                        ? 'exclamation-circle'\n                        : alertRole === 'info'\n                          ? 'info-circle'\n                          : alertRole === 'success'\n                            ? 'checkmark-circle'\n                            : alertRole === 'warning'\n                              ? 'warning-triangle'\n                              : null\n                    }\n                  />\n                )}\n\n                <div class=\"alert__content\">\n                  <p class=\"alert__heading\">\n                    <strong>{heading}</strong>\n                  </p>\n                  <slot></slot>\n                </div>\n\n                {!hideCloseBtn && (\n                  <button\n                    class=\"alert__close-btn\"\n                    onClick={e => {\n                      const event = emitEvent(e, this.gcdsDismiss);\n                      if (event) {\n                        this.isOpen = false;\n                      }\n                    }}\n                    aria-label={i18n[lang].closeBtn}\n                  >\n                    <gcds-icon aria-hidden=\"true\" name=\"close\" size=\"text\" />\n                  </button>\n                )}\n              </div>\n            </gcds-container>\n          </div>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"]}