{"version":3,"file":"gcds-header.js","sourceRoot":"","sources":["../../../../src/components/gcds-header/gcds-header.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  h,\n  State,\n  Event,\n  EventEmitter,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n/**\n * The header is the responsive Government of Canada branded header landmark.\n *\n * @slot banner - Slot to add a banner across the top of the header.\n * @slot breadcrumb - Slot to add breadcrumbs at the bottom of the header.\n * @slot menu - Slot to add a menu below the divider line.\n * @slot search - Slot to add a search field to the right of the header.\n * @slot skip-to-nav - Slot to add a hidden skip to content navigation at the top of the header.\n * @slot signature - Slot to replace Government of Canada signature.\n * @slot toggle - Slot to add a custom language toggle in the top-right of the header.\n */\n@Component({\n  tag: 'gcds-header',\n  styleUrl: 'gcds-header.css',\n  shadow: true,\n})\nexport class GcdsHeader {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * GcdsLangToggle - The href attribute specifies the URL of the opposite language page\n   */\n  @Prop({ reflect: true, mutable: false }) langHref!: string;\n\n  /**\n   * GcdsSignature - The variant of the Government of Canada signature\n   */\n  @Prop({ reflect: false, mutable: false }) signatureVariant:\n    | 'colour'\n    | 'white';\n  /**\n   * GcdsSignature - GCDS signature links to Canada.ca\n   */\n  @Prop({ reflect: false, mutable: false }) signatureHasLink: boolean = true;\n\n  /**\n   * Top navigation - Skip to content href\n   */\n  @Prop({ reflect: false, mutable: false }) skipToHref!: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the link has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the link loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  /**\n   * Emitted when the link has been clicked. Contains the href in the event detail.\n   */\n  @Event() gcdsClick!: EventEmitter<string>;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  private get renderSkipToNav() {\n    if (this.el.querySelector('[slot=\"skip-to-nav\"]')) {\n      return <slot name=\"skip-to-nav\"></slot>;\n    } else if (this.skipToHref) {\n      return (\n        <nav\n          class=\"gcds-header__skip-to-nav\"\n          aria-label={i18n[this.lang].skipLabel}\n        >\n          <gcds-link href={this.skipToHref}>{i18n[this.lang].skip}</gcds-link>\n        </nav>\n      );\n    } else {\n      return;\n    }\n  }\n\n  private get renderToggle() {\n    if (this.el.querySelector('[slot=\"toggle\"]')) {\n      return <slot name=\"toggle\"></slot>;\n    } else if (this.langHref) {\n      return (\n        <section class=\"brand__toggle\">\n          <gcds-lang-toggle\n            lang={this.lang}\n            href={this.langHref}\n          ></gcds-lang-toggle>\n        </section>\n      );\n    } else {\n      return;\n    }\n  }\n\n  private get renderSignature() {\n    const signVariant = this.signatureVariant\n      ? this.signatureVariant\n      : 'colour';\n\n    if (this.el.querySelector('[slot=\"signature\"]')) {\n      return <slot name=\"signature\"></slot>;\n    } else {\n      return (\n        <div class=\"brand__signature\">\n          <gcds-signature\n            type=\"signature\"\n            variant={signVariant}\n            has-link={this.signatureHasLink}\n            lang={this.lang}\n          ></gcds-signature>\n        </div>\n      );\n    }\n  }\n\n  private get renderSearch() {\n    if (this.el.querySelector('[slot=\"search\"]')) {\n      return (\n        <div class=\"brand__search\">\n          <slot name=\"search\"></slot>\n        </div>\n      );\n    } else {\n      return;\n    }\n  }\n\n  private get hasSearch() {\n    return !!this.el.querySelector('[slot=\"search\"]');\n  }\n\n  private get hasBanner() {\n    return !!this.el.querySelector('[slot=\"banner\"]');\n  }\n\n  private get hasBreadcrumb() {\n    return !!this.el.querySelector('[slot=\"breadcrumb\"]');\n  }\n\n  render() {\n    const {\n      renderSkipToNav,\n      renderToggle,\n      renderSignature,\n      renderSearch,\n      hasSearch,\n      hasBanner,\n      hasBreadcrumb,\n    } = this;\n    return (\n      <Host role=\"banner\">\n        {renderSkipToNav}\n        {hasBanner ? <slot name=\"banner\"></slot> : null}\n        <div class=\"gcds-header__brand\">\n          <div\n            class={`brand__container ${!hasSearch ? 'container--simple' : ''}`}\n          >\n            {renderToggle}\n            {renderSignature}\n            {renderSearch}\n          </div>\n        </div>\n        <slot name=\"menu\"></slot>\n        {hasBreadcrumb ? (\n          <div class=\"gcds-header__container\">\n            <slot name=\"breadcrumb\"></slot>\n          </div>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"]}