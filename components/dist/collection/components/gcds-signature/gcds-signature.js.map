{"version":3,"file":"gcds-signature.js","sourceRoot":"","sources":["../../../src/components/gcds-signature/gcds-signature.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Host,\n  Element,\n  Watch,\n  State,\n  Prop,\n  h,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\nimport SignatureEn from './assets/sig-blk-en.svg';\nimport SignatureFr from './assets/sig-blk-fr.svg';\nimport WordmarkEn from './assets/wmms-spl-en.svg';\nimport WordmarkFr from './assets/wmms-spl-fr.svg';\n\n@Component({\n  tag: 'gcds-signature',\n  styleUrl: 'gcds-signature.css',\n  shadow: true,\n})\nexport class GcdsSignature {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * The type of graphic to render\n   */\n  @Prop({ reflect: true, mutable: true }) type: 'signature' | 'wordmark' =\n    'signature';\n\n  @Watch('type')\n  validateType(newValue: string) {\n    if (newValue != 'signature' && newValue != 'wordmark') {\n      this.type = 'signature';\n    }\n  }\n\n  /**\n   * The colour variant to render\n   */\n  @Prop({ reflect: true, mutable: true }) variant: 'colour' | 'white' =\n    'colour';\n\n  @Watch('variant')\n  validateVariant(newValue: string) {\n    if (newValue != 'colour' && newValue != 'white') {\n      this.variant = 'colour';\n    }\n  }\n\n  /**\n   * Has link to canada.ca. Only applies to signature\n   */\n  @Prop({ mutable: true }) hasLink: boolean = false;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.validateType;\n    this.validateVariant;\n\n    this.updateLang();\n  }\n\n  private get selectSVG() {\n    switch (this.type) {\n      case 'wordmark':\n        if (this.lang == 'en') {\n          return WordmarkEn;\n        } else {\n          return WordmarkFr;\n        }\n      case 'signature':\n      default:\n        if (this.lang == 'en') {\n          return SignatureEn;\n        } else {\n          return SignatureFr;\n        }\n    }\n  }\n\n  render() {\n    const { type, hasLink, lang, selectSVG } = this;\n\n    const sigAttrs = {\n      class: 'gcds-signature',\n    };\n    const Tag = hasLink ? 'a' : 'div';\n\n    if (Tag === 'a') {\n      sigAttrs['href'] = i18n[lang].link;\n    }\n\n    return (\n      <Host>\n        {type === 'signature' ? (\n          <Tag {...sigAttrs}>\n            <div innerHTML={selectSVG}></div>\n          </Tag>\n        ) : (\n          <div class=\"gcds-signature\" innerHTML={selectSVG}></div>\n        )}\n      </Host>\n    );\n  }\n}\n"]}