{"version":3,"file":"gcds-stepper.js","sourceRoot":"","sources":["../../../src/components/gcds-stepper/gcds-stepper.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Host, Prop, State, Watch, h } from '@stencil/core';\nimport { assignLanguage, observerConfig, logError } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-stepper',\n  styleUrl: 'gcds-stepper.css',\n  shadow: true,\n})\nexport class GcdsStepper {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines the current step.\n   */\n  @Prop({ mutable: true }) currentStep!: number;\n  @Watch('currentStep')\n  validateCurrentStep() {\n    if (\n      this.currentStep <= 0 ||\n      isNaN(this.currentStep) ||\n      this.currentStep > this.totalSteps\n    ) {\n      this.errors.push('currentStep');\n    } else if (this.errors.includes('currentStep')) {\n      this.errors.splice(this.errors.indexOf('currentStep'), 1);\n    }\n  }\n\n  /**\n   * Defines the total amount of steps.\n   */\n  @Prop({ mutable: true }) totalSteps!: number;\n  @Watch('totalSteps')\n  validateTotalSteps() {\n    if (\n      this.totalSteps <= 0 ||\n      isNaN(this.totalSteps) ||\n      this.totalSteps < this.currentStep\n    ) {\n      this.errors.push('totalSteps');\n    } else if (this.errors.includes('totalSteps')) {\n      this.errors.splice(this.errors.indexOf('totalSteps'), 1);\n    }\n  }\n\n  /**\n   * Defines the heading tag to render\n   */\n  @Prop() tag: 'h1' | 'h2' | 'h3' = 'h2';\n\n  /**\n   * State to track validation on properties\n   * Contains a list of properties that have an error associated with them\n   */\n  @State() errors: Array<string> = [];\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  private validateChildren() {\n    if (this.el.innerHTML.trim() == '') {\n      this.errors.push('children');\n    } else if (this.errors.includes('children')) {\n      this.errors.splice(this.errors.indexOf('children'), 1);\n    }\n  }\n\n  private validateRequiredProps() {\n    this.validateCurrentStep();\n    this.validateTotalSteps();\n    this.validateChildren();\n\n    if (\n      this.errors.includes('totalSteps') ||\n      this.errors.includes('currentStep') ||\n      this.errors.includes('children')\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    let valid = this.validateRequiredProps();\n\n    if (!valid) {\n      logError('gcds-stepper', this.errors);\n    }\n  }\n\n  render() {\n    const { currentStep, lang, totalSteps, tag } = this;\n\n    return (\n      <Host>\n        {this.validateRequiredProps() && (\n          <gcds-heading\n            tag={tag}\n            class=\"gcds-stepper\"\n            margin-top=\"0\"\n            margin-bottom=\"225\"\n          >\n            <span class=\"gcds-stepper__steps\">\n              {`${i18n[lang].step} ${currentStep} ${i18n[lang].of} ${totalSteps}`}\n\n              {/* Hidden colon to provide pause between caption and heading text for AT */}\n              <gcds-sr-only> : </gcds-sr-only>\n            </span>\n            <slot></slot>\n          </gcds-heading>\n        )}\n      </Host>\n    );\n  }\n}\n"]}