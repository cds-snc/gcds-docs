{"file":"gcds-input2.js","mappings":";;;;;;;;;AAAA,MAAM,YAAY,GAAG,w9DAAw9D,CAAC;AAC9+D,wBAAe,YAAY;;MCgCd,SAAS;;;;;;;;;;;;QAUpB,eAAU,GAAsB,gBAAgB,CAAC;QA0JzC,WAAM,GAAG;YACf,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,EAAE;gBAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YAED,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;SACtB,CAAC;QAOM,gBAAW,GAAG,CAAC,CAAC,EAAE,WAAW;YACnC,MAAM,GAAG,GAAG,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;YACvC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;YACjB,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;YAE9C,IAAI,CAAC,CAAC,IAAI,KAAK,QAAQ,EAAE;gBACvB,MAAM,SAAS,GAAG,IAAI,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;aAClC;YAED,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9B,CAAC;wBAzK4C,KAAK;;yBA0BrB,KAAK;;;;;wBAyBN,KAAK;;oBAY2C,MAAM;;;;;mCAkC5C,EAAE;;;;IA/FzC,qBAAqB;QACnB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;KACF;IAOD,oBAAoB;QAClB,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;SACxB;aAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE;YAC9C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;SACtB;aAAM,IAAI,IAAI,CAAC,YAAY,IAAI,EAAE,EAAE;YAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;KACF;IA8DD,iBAAiB;QACf,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACtC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;SAC1B;KACF;IAiBD,gBAAgB;QACd,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;KACF;;;;IAWD,kBAAkB;QAChB,IAAI,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE;YACxE,aAAa;SACd,CAAC,CAAC;KACJ;IAED,uBAAuB;QACrB,IAAI,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE;YACxE,aAAa;SACd,CAAC,CAAC;KACJ;;;;IAmDD,MAAM,QAAQ;QACZ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE;YACzE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;gBAClB,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE;gBACtB,OAAO,EAAE,GAAG,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,YAAY,EAAE;aAChD,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;SACjD;KACF;IAaD,cAAc,CAAC,CAAC;QACd,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YACvC,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,EAAE;gBACjD,IAAI,CAAC,QAAQ,EAAE,CAAC;aACjB;YAED,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,EAAE;gBAC/C,CAAC,CAAC,cAAc,EAAE,CAAC;aACpB;SACF;KACF;IAGD,eAAe,CAAC,CAAC;QACf,IAAI,CAAC,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,EAAE;YAC5C,MAAM,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YACpD,UAAU,CAAC,IAAI,GAAG,QAAQ,CAAC;YAC3B,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAClC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAChD,UAAU,CAAC,KAAK,EAAE,CAAC;YACnB,UAAU,CAAC,MAAM,EAAE,CAAC;SACrB;KACF;;;;IAKD,iBAAiB;QACf,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,YAAY,EAAE;YACnC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;SAChC;KACF;IAED,wBAAwB,CAAC,KAAK;QAC5B,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACnC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;;;;IAKD,UAAU;QACR,MAAM,QAAQ,GAAG,IAAI,gBAAgB,CAAC,SAAS;YAC7C,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE;gBACzC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;aAC1B;SACF,CAAC,CAAC;QACH,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,cAAc,CAAC,CAAC;KAC3C;IAED,MAAM,iBAAiB;;QAErB,IAAI,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAEpC,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,iBAAiB,EAAE,CAAC;;QAGzB,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAE/C,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAChD;QAED,IAAI,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE;YACxE,aAAa;SACd,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;KACpD;IAED,mBAAmB;QACjB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAChD;KACF;IAED,MAAM;QACJ,MAAM,EACJ,QAAQ,EACR,YAAY,EACZ,SAAS,EACT,IAAI,EACJ,OAAO,EACP,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,IAAI,EACJ,IAAI,EACJ,KAAK,EACL,QAAQ,EACR,YAAY,EACZ,mBAAmB,EACnB,IAAI,GACL,GAAG,IAAI,CAAC;;QAGT,MAAM,KAAK,GAAG;YACZ,QAAQ,EAAE,QAAQ,IAAI,GAAG,CAAC,cAAc;SACzC,CAAC;QAEF,MAAM,UAAU,mBACd,QAAQ;YACR,QAAQ;YACR,IAAI;YACJ,KAAK;YACL,YAAY,IACT,mBAAmB,CACvB,CAAC;QAEF,MAAM,UAAU,GAAG;YACjB,KAAK;YACL,QAAQ;SACT,CAAC;QAEF,IAAI,IAAI,IAAI,YAAY,EAAE;YACxB,MAAM,MAAM,GAAG,IAAI,GAAG,QAAQ,OAAO,GAAG,GAAG,EAAE,CAAC;YAC9C,MAAM,OAAO,GAAG,YAAY,GAAG,iBAAiB,OAAO,GAAG,GAAG,EAAE,CAAC;YAChE,UAAU,CAAC,kBAAkB,CAAC,GAAG,GAAG,MAAM,GAAG,OAAO,GAClD,UAAU,CAAC,kBAAkB,CAAC;kBAC1B,IAAI,UAAU,CAAC,kBAAkB,CAAC,EAAE;kBACpC,EACN,EAAE,CAAC;SACJ;QAED,QACE,EAAC,IAAI,uDACH,4DACE,KAAK,EAAE,sBAAsB,QAAQ,GAAG,eAAe,GAAG,EAAE,IAC1D,QAAQ,GAAG,YAAY,GAAG,EAC5B,EAAE,IAEF,mFACM,UAAU,kBACF,SAAS,eACV,OAAO,EAClB,IAAI,EAAE,IAAI,IACV,EAED,IAAI,GAAG,4BAAoB,OAAO,IAAG,IAAI,CAAa,GAAG,IAAI,EAE7D,YAAY,IACX,0BAAoB,SAAS,EAAE,OAAO,IACnC,YAAY,CACM,IACnB,IAAI,EAER,8EACM,UAAU,IACd,KAAK,EAAE,QAAQ,GAAG,YAAY,GAAG,IAAI,EACrC,EAAE,EAAE,OAAO,EACX,IAAI,EAAE,IAAI,EACV,MAAM,EAAE,MAAM,IAAI,CAAC,MAAM,EAAE,EAC3B,OAAO,EAAE,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EACpC,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EACjD,QAAQ,EAAE,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,qBAClC,aAAa,OAAO,EAAE,kBAErC,mBAAmB,CAAC,cAAc,CAAC,KAAK,MAAM;kBAC1C,mBAAmB,CAAC,cAAc,CAAC;kBACnC,YAAY;sBACV,MAAM;sBACN,OAAO,EAEf,IAAI,EAAE,IAAI,EACV,KAAK,EAAE,IAAI,GAAG,KAAK,GAAG,IAAI,EAC1B,IAAI,EAAC,OAAO,EACZ,GAAG,EAAE,OAAO,KAAK,IAAI,CAAC,aAAa,GAAG,OAAsB,CAAC,IAC7D,CACE,CACD,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["src/components/gcds-input/gcds-input.css?tag=gcds-input&encapsulation=shadow","src/components/gcds-input/gcds-input.tsx"],"sourcesContent":["@layer reset, default, disabled, error, focus;\n\n@layer reset {\n  :host {\n    display: block;\n\n    .gcds-input-wrapper {\n      margin: 0;\n      padding: 0;\n      border: 0;\n\n      input {\n        box-sizing: border-box;\n      }\n    }\n  }\n}\n\n@layer default {\n  :host .gcds-input-wrapper {\n    max-width: 75ch;\n    width: 100%;\n    font: var(--gcds-input-font);\n    color: var(--gcds-input-default-text);\n    transition: color ease-in-out 0.15s;\n\n    input {\n      display: block;\n      min-width: var(--gcds-input-min-width-and-height);\n      width: 100%;\n      max-width: 100%;\n      height: auto;\n      min-height: var(--gcds-input-min-width-and-height);\n      font: inherit !important;\n      margin: var(--gcds-input-margin) !important;\n      padding: var(--gcds-input-padding) !important;\n      background-color: var(--gcds-input-default-background);\n      background-image: none;\n      color: var(--gcds-input-default-text);\n      border: var(--gcds-input-border-width) solid currentColor;\n      border-radius: var(--gcds-input-border-radius);\n      transition:\n        border-color ease-in-out 0.15s,\n        box-shadow ease-in-out 0.15s,\n        outline ease-in-out 0.15s;\n\n      /* Hide number arrows */\n      &[type='number'] {\n        -moz-appearance: textfield;\n\n        &::-webkit-outer-spin-button,\n        &::-webkit-inner-spin-button {\n          -webkit-appearance: none;\n        }\n      }\n    }\n  }\n}\n\n@layer disabled {\n  :host .gcds-input-wrapper.gcds-disabled {\n    color: var(--gcds-input-disabled-text);\n\n    gcds-label {\n      --gcds-label-text: currentColor;\n    }\n\n    gcds-hint {\n      --gcds-hint-text: currentColor;\n    }\n\n    input:disabled {\n      cursor: not-allowed;\n      background-color: var(--gcds-input-disabled-background);\n      border-color: var(--gcds-input-disabled-text);\n    }\n  }\n}\n\n@layer error {\n  :host .gcds-input-wrapper input.gcds-error:not(:focus) {\n    border-color: var(--gcds-input-danger-border);\n  }\n}\n\n@layer focus {\n  :host .gcds-input-wrapper:focus-within input:focus {\n    border-color: var(--gcds-input-focus-border);\n    outline: var(--gcds-input-outline-width) solid\n      var(--gcds-input-focus-border);\n    outline-offset: var(--gcds-input-border-width);\n    box-shadow: var(--gcds-input-focus-box-shadow);\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  Watch,\n  EventEmitter,\n  State,\n  Method,\n  Host,\n  Prop,\n  h,\n  Listen,\n  AttachInternals,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  inheritAttributes,\n  observerConfig,\n} from '../../utils/utils';\nimport {\n  Validator,\n  defaultValidator,\n  ValidatorEntry,\n  getValidator,\n  requiredValidator,\n} from '../../validators';\n\n@Component({\n  tag: 'gcds-input',\n  styleUrl: 'gcds-input.css',\n  shadow: { delegatesFocus: true },\n  formAssociated: true,\n})\nexport class GcdsInput {\n  @Element() el: HTMLElement;\n\n  @AttachInternals()\n  internals: ElementInternals;\n\n  private initialValue?: string;\n\n  private shadowElement?: HTMLElement;\n\n  _validator: Validator<string> = defaultValidator;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Specifies if an input element is disabled or not.\n   */\n  @Prop({ mutable: true }) disabled?: boolean = false;\n  @Watch('disabled')\n  validateDisabledInput() {\n    if (this.required) {\n      this.disabled = false;\n    }\n  }\n\n  /**\n   * Error message for an invalid input element.\n   */\n  @Prop({ mutable: true }) errorMessage?: string;\n  @Watch('errorMessage')\n  validateErrorMessage() {\n    if (this.disabled) {\n      this.errorMessage = '';\n    } else if (!this.hasError && this.errorMessage) {\n      this.hasError = true;\n    } else if (this.errorMessage == '') {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Specifies if the label is hidden or not.\n   */\n  @Prop() hideLabel?: boolean = false;\n\n  /**\n   * Hint displayed below the label and above the input field.\n   */\n  @Prop() hint?: string;\n\n  /**\n   * Id  attribute for an input element.\n   */\n  @Prop() inputId!: string;\n\n  /**\n   * Name attribute for an input element.\n   */\n  @Prop() name!: string;\n\n  /**\n   * Form field label\n   */\n  @Prop() label!: string;\n\n  /**\n   * Specifies if a form field is required or not.\n   */\n  @Prop() required?: boolean = false;\n\n  /**\n   * Size attribute for an input element to provide a visual indication\n   * of the expected text length to the user.\n   */\n  @Prop() size?: number;\n\n  /**\n   * Set Input types\n   */\n  // prettier-ignore\n  @Prop() type?: 'email' | 'number' | 'password' | 'search' | 'text' | 'url' = 'text';\n\n  /**\n   * Default value for an input element.\n   */\n  @Prop({ mutable: true }) value?: string;\n\n  /**\n   * String to have autocomplete enabled\n   */\n  @Prop() autocomplete?: string;\n\n  /**\n   * Array of validators\n   */\n  @Prop({ mutable: true }) validator: Array<\n    string | ValidatorEntry | Validator<string>\n  >;\n\n  @Watch('validator')\n  validateValidator() {\n    if (this.validator && !this.validateOn) {\n      this.validateOn = 'blur';\n    }\n  }\n\n  /**\n   * Set event to call validator\n   */\n  @Prop({ mutable: true }) validateOn: 'blur' | 'submit' | 'other';\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Specifies if the input is invalid.\n   */\n  @State() hasError: boolean;\n  @Watch('hasError')\n  validateHasError() {\n    if (this.disabled) {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Watch HTML attributes to inherit changes\n   */\n  @Watch('aria-invalid')\n  ariaInvalidWatcher() {\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement, [\n      'placeholder',\n    ]);\n  }\n  @Watch('aria-description')\n  ariaDescriptiondWatcher() {\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement, [\n      'placeholder',\n    ]);\n  }\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the input has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the input loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  private onBlur = () => {\n    if (this.validateOn == 'blur') {\n      this.validate();\n    }\n\n    this.gcdsBlur.emit();\n  };\n\n  /**\n   * Emitted when the element has received input.\n   */\n  @Event() gcdsInput: EventEmitter;\n\n  private handleInput = (e, customEvent) => {\n    const val = e.target && e.target.value;\n    this.value = val;\n    this.internals.setFormValue(val ? val : null);\n\n    if (e.type === 'change') {\n      const changeEvt = new e.constructor(e.type, e);\n      this.el.dispatchEvent(changeEvt);\n    }\n\n    customEvent.emit(this.value);\n  };\n\n  /**\n   * Emitted when the input has changed.\n   */\n  @Event() gcdsChange: EventEmitter;\n\n  /**\n   * Call any active validators\n   */\n  @Method()\n  async validate() {\n    if (!this._validator.validate(this.value) && this._validator.errorMessage) {\n      this.errorMessage = this._validator.errorMessage[this.lang];\n      this.gcdsError.emit({\n        id: `#${this.inputId}`,\n        message: `${this.label} - ${this.errorMessage}`,\n      });\n    } else {\n      this.errorMessage = '';\n      this.gcdsValid.emit({ id: `#${this.inputId}` });\n    }\n  }\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsError!: EventEmitter<object>;\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsValid!: EventEmitter<object>;\n\n  @Listen('submit', { target: 'document' })\n  submitListener(e) {\n    if (e.target == this.el.closest('form')) {\n      if (this.validateOn && this.validateOn != 'other') {\n        this.validate();\n      }\n\n      if (this.hasError && this.validateOn != 'other') {\n        e.preventDefault();\n      }\n    }\n  }\n\n  @Listen('keydown', { target: 'document' })\n  keyDownListener(e) {\n    if (e.target == this.el && e.key === 'Enter') {\n      const formButton = document.createElement('button');\n      formButton.type = 'submit';\n      formButton.style.display = 'none';\n      this.el.closest('form').appendChild(formButton);\n      formButton.click();\n      formButton.remove();\n    }\n  }\n\n  /*\n   * Form internal functions\n   */\n  formResetCallback() {\n    if (this.value != this.initialValue) {\n      this.internals.setFormValue(this.initialValue);\n      this.value = this.initialValue;\n    }\n  }\n\n  formStateRestoreCallback(state) {\n    this.internals.setFormValue(state);\n    this.value = state;\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    this.validateDisabledInput();\n    this.validateHasError();\n    this.validateErrorMessage();\n    this.validateValidator();\n\n    // Assign required validator if needed\n    requiredValidator(this.el, 'input', this.type);\n\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement, [\n      'placeholder',\n    ]);\n\n    this.internals.setFormValue(this.value ? this.value : null);\n    this.initialValue = this.value ? this.value : null;\n  }\n\n  componentWillUpdate() {\n    if (this.validator) {\n      this._validator = getValidator(this.validator);\n    }\n  }\n\n  render() {\n    const {\n      disabled,\n      errorMessage,\n      hideLabel,\n      hint,\n      inputId,\n      name,\n      label,\n      required,\n      size,\n      type,\n      value,\n      hasError,\n      autocomplete,\n      inheritedAttributes,\n      lang,\n    } = this;\n\n    // Use max-width to keep field responsive\n    const style = {\n      maxWidth: `calc(${size * 2}ch + 1.5rem)`,\n    };\n\n    const attrsInput = {\n      disabled,\n      required,\n      type,\n      value,\n      autocomplete,\n      ...inheritedAttributes,\n    };\n\n    const attrsLabel = {\n      label,\n      required,\n    };\n\n    if (hint || errorMessage) {\n      const hintID = hint ? `hint-${inputId} ` : '';\n      const errorID = errorMessage ? `error-message-${inputId} ` : '';\n      attrsInput['aria-describedby'] = `${hintID}${errorID}${\n        attrsInput['aria-describedby']\n          ? ` ${attrsInput['aria-describedby']}`\n          : ''\n      }`;\n    }\n\n    return (\n      <Host>\n        <div\n          class={`gcds-input-wrapper ${disabled ? 'gcds-disabled' : ''} ${\n            hasError ? 'gcds-error' : ''\n          }`}\n        >\n          <gcds-label\n            {...attrsLabel}\n            hide-label={hideLabel}\n            label-for={inputId}\n            lang={lang}\n          />\n\n          {hint ? <gcds-hint hint-id={inputId}>{hint}</gcds-hint> : null}\n\n          {errorMessage ? (\n            <gcds-error-message messageId={inputId}>\n              {errorMessage}\n            </gcds-error-message>\n          ) : null}\n\n          <input\n            {...attrsInput}\n            class={hasError ? 'gcds-error' : null}\n            id={inputId}\n            name={name}\n            onBlur={() => this.onBlur()}\n            onFocus={() => this.gcdsFocus.emit()}\n            onInput={e => this.handleInput(e, this.gcdsInput)}\n            onChange={e => this.handleInput(e, this.gcdsChange)}\n            aria-labelledby={`label-for-${inputId}`}\n            aria-invalid={\n              inheritedAttributes['aria-invalid'] === 'true'\n                ? inheritedAttributes['aria-invalid']\n                : errorMessage\n                  ? 'true'\n                  : 'false'\n            }\n            size={size}\n            style={size ? style : null}\n            part=\"input\"\n            ref={element => (this.shadowElement = element as HTMLElement)}\n          />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}