import{h as e,p as s,H as t,d as c,c as i}from"./p-Bid1IElL.js";import{d as o,l as d,h as a,f as r,a as h,i as l,e as n}from"./p-BphlHDEW.js";import{d as g,g as b,r as f}from"./p-BwGU8uxz.js";import{d as u}from"./p-BPUZBykJ.js";import{d as k}from"./p-COMIv74k.js";import{d as x}from"./p-CkVRd3cw.js";import{d as p}from"./p-A25Hiffv.js";import{d as m}from"./p-C4FL9OV7.js";function v(e){if(typeof e!=="object"||e===null)return false;const s=["id","label","value","hint","checked","required"];const t=Object.keys(e);const c=typeof e.id==="string"&&typeof e.label==="string"&&(e.value===undefined||typeof e.value==="string")&&(e.hint===undefined||typeof e.hint==="string")&&(e.checked===undefined||typeof e.checked==="boolean");const i=t.every((e=>s.includes(e)));return c&&i}function y(e){let s=false;if(e&&e.length>=1){s=e.some((e=>!v(e)))}else if(e&&e.length==0){s=true}return s}function _(e,s){const t=[];e.forEach((e=>{t.push(e.value?e.value:"on");if((e.checked=="true"||e.checked===true)&&!s.value.includes(e.value||"on")){s.value=[...s.value,e.value?e.value:"on"]}}));s.value.filter((e=>!t.includes(e))).forEach((e=>{s.value=s.value.filter((s=>s!==e))}))}const w=(s,t,c,i)=>{const{name:o,disabled:d,hasError:a,errorMessage:r,gcdsFocus:h,gcdsInput:l,gcdsChange:n,gcdsClick:g,gcdsBlur:b,required:f,hint:u,isGroup:k,lang:x,value:p,onBlurValidate:m}=t;const v={name:o,id:s.id,disabled:d,required:s.required,value:s.value};const y={label:s.label,"label-for":s.id,lang:x};if(!k&&f){y["required"]=f;v["required"]=f}if(s.hint){const e=`hint-${s.id}`;v["aria-describedby"]=`${e}${v["aria-describedby"]?`${v["aria-describedby"]}`:""}`}if(p.includes(s.value)){v["checked"]=true}if(a){v["aria-invalid"]="true";v["aria-description"]=r}return e("div",{class:`gcds-checkbox ${d?"gcds-checkbox--disabled":""} ${a?"gcds-checkbox--error":""}`},e("input",Object.assign({type:"checkbox"},v,{onBlur:k?()=>b.emit():m,onFocus:()=>h.emit(),onChange:()=>n.emit(),onInput:e=>i(e,l),onClick:e=>!d?c(e,g):e.stopImmediatePropagation()})),e("gcds-label",Object.assign({},y,{onClick:e=>e.stopPropagation()})),s.hint||!k&&u?e("gcds-hint",{"hint-id":s.id},!k&&u?u:s.hint):null,!k&&r?e("gcds-error-message",{messageId:s.id},r):null)};const E='@layer reset, default, disabled, error, focus;@layer reset{:host{display:block}:host .gcds-checkboxes__fieldset{border:0;min-inline-size:auto;padding:0}:host .gcds-checkboxes__fieldset legend{padding:0}:host .gcds-checkbox{padding:0}:host .gcds-checkbox gcds-label{display:block}:host .gcds-checkbox gcds-label>label:after,:host .gcds-checkbox gcds-label>label:before{box-sizing:border-box;content:"";cursor:pointer;position:absolute}}@layer default{:host .gcds-checkboxes__fieldset{margin:var(--gcds-checkbox-fieldset-margin)}:host .gcds-checkboxes__fieldset .gcds-checkboxes__legend{font:var(--gcds-checkbox-legend-font-desktop);margin:var(--gcds-checkbox-legend-margin)}:host .gcds-checkboxes__fieldset .gcds-checkboxes__legend .legend__required{font:var(--gcds-checkbox-legend-required-font-desktop)}@media only screen and (width < 48em){:host .gcds-checkboxes__fieldset .gcds-checkboxes__legend{font:var(--gcds-checkbox-legend-font-mobile)}:host .gcds-checkboxes__fieldset .gcds-checkboxes__legend .legend__required{font:var(--gcds-checkbox-legend-required-font-mobile)}}:host .gcds-checkboxes__fieldset .gcds-checkboxes__legend:not(:has(+gcds-hint)){margin:var(--gcds-checkbox-legend-hint-margin)}:host .gcds-checkbox{color:var(--gcds-checkbox-default-text);font:var(--gcds-checkbox-font);margin:var(--gcds-checkbox-margin)!important;max-width:var(--gcds-checkbox-max-width);min-height:calc(var(--gcds-checkbox-input-height-and-width) - var(--gcds-checkbox-padding));padding:var(--gcds-checkbox-padding) 0 0;position:relative;transition:color .15s ease-in-out}:host .gcds-checkbox :is(gcds-label,gcds-hint,gcds-error-message){padding:var(--gcds-checkbox-label-padding)!important}:host .gcds-checkbox gcds-hint::part(hint){margin:0}:host .gcds-checkbox gcds-label:after,:host .gcds-checkbox gcds-label:before,:host .gcds-checkbox input{position:absolute}:host .gcds-checkbox gcds-label>label:before,:host .gcds-checkbox input{height:var(--gcds-checkbox-input-height-and-width);left:0;top:0;width:var(--gcds-checkbox-input-height-and-width)}:host .gcds-checkbox input{opacity:0}:host .gcds-checkbox gcds-label>label{width:fit-content;--gcds-label-font-desktop:var(--gcds-checkbox-label-font-desktop);--gcds-label-font-mobile:var(--gcds-checkbox-label-font-mobile)}:host .gcds-checkbox gcds-label>label:before{background-color:var(--gcds-checkbox-default-background);border:var(--gcds-checkbox-input-border-width) solid;border-radius:var(--gcds-checkbox-input-border-radius);transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out,outline .15s ease-in-out}:host .gcds-checkbox gcds-label>label:after{border:var(--gcds-checkbox-check-border-width) solid;border-block-start:0!important;border-inline-start:0!important;height:var(--gcds-checkbox-check-height);left:var(--gcds-checkbox-check-left);opacity:0;top:var(--gcds-checkbox-check-top);transform:rotate(40deg);width:var(--gcds-checkbox-check-width)}:host .gcds-checkbox input:checked+gcds-label>label:after{opacity:1}}@layer disabled{:host .gcds-checkbox.gcds-checkbox--disabled{color:var(--gcds-checkbox-disabled-text)}:host .gcds-checkbox.gcds-checkbox--disabled gcds-label>label{--gcds-label-text:currentColor;cursor:not-allowed}:host .gcds-checkbox.gcds-checkbox--disabled gcds-label>label:after,:host .gcds-checkbox.gcds-checkbox--disabled gcds-label>label:before{cursor:not-allowed}:host .gcds-checkbox.gcds-checkbox--disabled gcds-label>label:before{background-color:var(--gcds-checkbox-disabled-background);border-color:currentcolor}:host .gcds-checkbox.gcds-checkbox--disabled gcds-hint{--gcds-hint-text:currentColor}}@layer error{:host .gcds-checkbox.gcds-checkbox--error:not(:focus-within) gcds-label>label:before{border-color:var(--gcds-checkbox-danger-border)}:host .gcds-checkbox.gcds-checkbox--error:not(:focus-within) gcds-label>label:after{color:var(--gcds-checkbox-danger-border)}}@layer focus{:host .gcds-checkbox:focus-within input:focus+gcds-label>label:before{background:var(--gcds-checkbox-focus-background);box-shadow:var(--gcds-checkbox-focus-box-shadow);color:var(--gcds-checkbox-focus-color);outline:var(--gcds-checkbox-focus-outline-width) solid currentcolor;outline-offset:var(--gcds-checkbox-input-border-width)}:host .gcds-checkbox:focus-within input:focus+gcds-label>label:after{color:var(--gcds-checkbox-focus-color)}}';const C=s(class s extends t{constructor(){super();this.__registerHost();this.__attachShadow();this.gcdsClick=c(this,"gcdsClick");this.gcdsFocus=c(this,"gcdsFocus");this.gcdsBlur=c(this,"gcdsBlur");this.gcdsInput=c(this,"gcdsInput");this.gcdsChange=c(this,"gcdsChange");this.gcdsError=c(this,"gcdsError");this.gcdsValid=c(this,"gcdsValid");this.internals=this.attachInternals();this.isGroup=false;this._validator=g;this.value=[];this.validateOn="blur";this.inheritedAttributes={};this.errors=[];this.onBlurValidate=()=>{if(this.validateOn=="blur"){this.validate()}this.gcdsBlur.emit()};this.handleInput=(e,s)=>{if(e.target.checked){this.value=[...this.value,e.target.value]}else{this.options=(typeof this.options==="string"?JSON.parse(this.options):this.options).map((s=>s.value===e.target.value?Object.assign(Object.assign({},s),{checked:false}):s));this.value=this.value.filter((s=>s!==e.target.value))}if(this.value.length>0){this.internals.setFormValue(this.value.toString())}else{this.internals.setFormValue(null)}if(e.type==="change"){const s=new e.constructor(e.type,e);this.el.dispatchEvent(s)}s.emit(this.value)}}validateName(){this.errors=o(this.errors,"name",this.name)}validateLegend(){if(this.isGroup){this.errors=o(this.errors,"legend",this.legend)}}validateOptions(){let e=false;e=this.assignOptionsArray();if(this.optionsArr&&!e){e=y(this.optionsArr);if(this.optionsArr&&this.optionsArr.length>1){this.isGroup=true}}this.errors=o(this.errors,"options",this.optionsArr,e)}validateDisabledCheckbox(){if(this.required){this.disabled=false}}validateValue(e){if(!Array.isArray(e)){try{this.value=JSON.parse(e)}catch(e){d("gcds-checkboxes",["Invalid array for value"]);this.value=[]}}else if(this.optionsArr){_(this.optionsArr,this.el);if(this.value.length>0){this.internals.setFormValue(this.value.toString())}}}validateErrorMessage(){if(this.disabled){this.errorMessage=""}else{this.hasError=this.errorMessage?!this.hasError:false}}validateValidator(){this._validator=b(this.validator)}validateHasError(){if(this.disabled){this.hasError=false}}async validate(){a(this.el,this._validator.validate(this.value),this.isGroup?this.legend:this.optionsArr[0].label,this.gcdsError,this.gcdsValid,this.lang)}formdataListener(e){const s=e.formData;this.value.forEach((e=>{if(this.value.indexOf(e)===0){s.set(this.name,e)}else{s.append(this.name,e)}}))}submitListener(e){if(e.target==this.el.closest("form")){if(this.validateOn&&this.validateOn!="other"){this.validate()}if(this.hasError&&this.validateOn!="other"){e.preventDefault()}}}formResetCallback(){if(this.value!=this.initialState){this.value=this.initialState}}formStateRestoreCallback(e){this.internals.setFormValue(e);this.value=[...e.split(",")]}watchLang(e,s){if(e!==s){this.lang=e}}validateRequiredProps(){this.validateOptions();this.validateValue(this.value);this.validateLegend();this.validateName();return r(this.errors,["name","legend","options"])}async componentWillLoad(){var e;this.lang=h(this.el);const s=this.validateRequiredProps();this.validateDisabledCheckbox();this.validateHasError();this.validateErrorMessage();f(this.el,this.isGroup?"checkboxGroup":"checkboxSingle");this.validateValidator();if(!this.isGroup&&this.optionsArr&&((e=this.optionsArr[0])===null||e===void 0?void 0:e.hint)&&!this.hint){this.hint=this.optionsArr[0].hint}if(!s){d("gcds-checkboxes",this.errors)}this.initialState=this.value;this.inheritedAttributes=l(this.el,this.shadowElement)}async componentDidUpdate(){const e=this.validateRequiredProps();if(!e){d("gcds-checkboxes",this.errors)}}assignOptionsArray(){let e=false;if(Array.isArray(this.options)){this.optionsArr=this.options}else if(typeof this.options==="string"&&this.options.trim()!==""){try{const s=JSON.parse(this.options);if(Array.isArray(s)){this.optionsArr=s}else{this.optionsArr=null;e=true}}catch(s){d("gcds-checkboxes",["Invalid JSON string for options"]);this.options=null;e=true}}return e}render(){const{legend:s,required:t,hint:c,errorMessage:o}=this;const d={tabindex:"-1","aria-labelledby":"checkboxes-legend"};if(c){const e=this.hint?`checkboxes-hint `:"";d["aria-labelledby"]=`${d["aria-labelledby"]} ${e}`.trim()}if(this.validateRequiredProps()){return e(i,{key:"2531c781c8cf539929baa5e749c11b698fbe8f8c",onBlur:()=>this.isGroup&&this.onBlurValidate()},this.isGroup?e("fieldset",Object.assign({class:"gcds-checkboxes__fieldset"},d),e("legend",{id:"checkboxes-legend",class:"gcds-checkboxes__legend"},s,t?e("span",{class:"legend__required"}," (required)"):null),c?e("gcds-hint",{id:"checkboxes-hint","hint-id":"checkboxes"},c):null,o?e("div",null,e("gcds-error-message",{id:"checkboxes-error",messageId:"checkboxes"},o)):null,this.optionsArr&&this.optionsArr.map((e=>w(e,this,n,this.handleInput)))):this.optionsArr&&this.optionsArr.length>0&&w(this.optionsArr[0],this,n,this.handleInput))}}static get delegatesFocus(){return true}static get formAssociated(){return true}get el(){return this}static get watchers(){return{name:["validateName"],legend:["validateLegend"],options:["validateOptions"],disabled:["validateDisabledCheckbox"],value:["validateValue"],errorMessage:["validateErrorMessage"],validator:["validateValidator"],hasError:["validateHasError"],lang:["watchLang"]}}static get style(){return E}},[81,"gcds-checkboxes",{name:[513],legend:[513],options:[1025],required:[516],disabled:[1540],value:[1537],errorMessage:[1537,"error-message"],hint:[1537],validator:[1040],validateOn:[1025,"validate-on"],inheritedAttributes:[32],hasError:[32],lang:[32],errors:[32],validate:[64]},[[4,"formdata","formdataListener"],[4,"submit","submitListener"]],{name:["validateName"],legend:["validateLegend"],options:["validateOptions"],disabled:["validateDisabledCheckbox"],value:["validateValue"],errorMessage:["validateErrorMessage"],validator:["validateValidator"],hasError:["validateHasError"],lang:["watchLang"]}]);function O(){if(typeof customElements==="undefined"){return}const e=["gcds-checkboxes","gcds-error-message","gcds-hint","gcds-icon","gcds-label","gcds-text"];e.forEach((e=>{switch(e){case"gcds-checkboxes":if(!customElements.get(e)){customElements.define(e,C)}break;case"gcds-error-message":if(!customElements.get(e)){u()}break;case"gcds-hint":if(!customElements.get(e)){k()}break;case"gcds-icon":if(!customElements.get(e)){x()}break;case"gcds-label":if(!customElements.get(e)){p()}break;case"gcds-text":if(!customElements.get(e)){m()}break}}))}const j=C;const L=O;export{j as GcdsCheckboxes,L as defineCustomElement};
//# sourceMappingURL=gcds-checkboxes.js.map