{"version":3,"names":["gcdsBreadcrumbsItemCss","GcdsBreadcrumbsItem","__stencil_proxyCustomElement","HTMLElement","render","href","this","h","Host","key","role","class","size"],"sources":["src/components/gcds-breadcrumbs-item/gcds-breadcrumbs-item.css?tag=gcds-breadcrumbs-item&encapsulation=shadow","src/components/gcds-breadcrumbs-item/gcds-breadcrumbs-item.tsx"],"sourcesContent":["@layer reset, default, hover, focus;\n\n@layer reset {\n  :host(.gcds-breadcrumbs-item) {\n    display: inline-block;\n\n    gcds-link::part(link) {\n      display: inline-block;\n      white-space: normal;\n    }\n\n    slot {\n      display: block;\n    }\n  }\n}\n\n@layer default {\n  :host(.gcds-breadcrumbs-item) {\n    margin: var(--gcds-breadcrumbs-item-margin) !important;\n\n    &:before {\n      display: inline-block;\n      width: 0.375rem;\n      content: url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' height='12px' viewBox='0 0 8 14'><path fill='26374a' d='M7.7,6.3c0.4,0.4,0.4,1,0,1.4l-6,6c-0.4,0.4-1,0.4-1.4,0s-0.4-1,0-1.4L5.6,7L0.3,1.7c-0.4-0.4-0.4-1,0-1.4s1-0.4,1.4,0 L7.7,6.3L7.7,6.3z'/></svg>\");\n      margin: var(--gcds-breadcrumbs-item-arrow-margin);\n    }\n\n    gcds-link::part(link) {\n      font: var(--gcds-breadcrumbs-item-font);\n    }\n  }\n}\n","import {\n  Component,\n  Element,\n  Host,\n  Prop,\n  Event,\n  EventEmitter,\n  h,\n} from '@stencil/core';\n\n/**\n * Breadcrumbs item represents a single link in the breadcrumbs navigation.\n *\n * @slot default - Slot for the breadcrumb item link label.\n */\n@Component({\n  tag: 'gcds-breadcrumbs-item',\n  styleUrl: 'gcds-breadcrumbs-item.css',\n  shadow: true,\n})\nexport class GcdsBreadcrumbsItem {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Specifies the href of the breadcrumb item.\n   */\n  @Prop() href!: string | undefined;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the link has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the link loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  /**\n   * Emitted when the link has been clicked. Contains the href in the event detail.\n   */\n  @Event() gcdsClick!: EventEmitter<string>;\n\n  render() {\n    const { href } = this;\n\n    return (\n      <Host role=\"listitem\" class=\"gcds-breadcrumbs-item\">\n        <gcds-link size=\"regular\" href={href}>\n          <slot></slot>\n        </gcds-link>\n      </Host>\n    );\n  }\n}\n"],"mappings":"wIAAA,MAAMA,EAAyB,yyB,MCoBlBC,EAAmBC,EAAA,MAAAD,UAAAE,E,yKA+B9B,MAAAC,GACE,MAAMC,KAAEA,GAASC,KAEjB,OACEC,EAACC,EAAK,CAAAC,IAAA,2CAAAC,KAAK,WAAWC,MAAM,yBAC1BJ,EAAA,aAAAE,IAAA,2CAAWG,KAAK,UAAUP,KAAMA,GAC9BE,EAAa,QAAAE,IAAA,8C","ignoreList":[]}