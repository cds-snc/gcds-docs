{"version":3,"names":["gcdsInputCss","GcdsInput","__stencil_proxyCustomElement","HTMLElement","constructor","this","_validator","defaultValidator","disabled","hideLabel","required","type","validateOn","inheritedAttributes","onBlur","validate","gcdsBlur","emit","handleInput","e","customEvent","val","target","value","internals","setFormValue","changeEvt","el","dispatchEvent","validateDisabledInput","validateErrorMessage","errorMessage","hasError","validateValidator","getValidator","validator","validateHasError","ariaInvalidWatcher","inheritAttributes","shadowElement","ariaDescriptiondWatcher","handleValidationResult","label","gcdsError","gcdsValid","lang","submitListener","closest","preventDefault","keyDownListener","key","formButton","document","createElement","style","display","appendChild","click","remove","formResetCallback","initialValue","formStateRestoreCallback","state","updateLang","observer","MutationObserver","mutations","oldValue","observe","observerConfig","componentWillLoad","assignLanguage","requiredValidator","render","hint","inputId","name","size","autocomplete","maxWidth","attrsInput","Object","assign","attrsLabel","hintID","errorID","h","Host","class","messageId","id","onFocus","gcdsFocus","onInput","gcdsInput","onChange","gcdsChange","part","ref","element"],"sources":["src/components/gcds-input/gcds-input.css?tag=gcds-input&encapsulation=shadow","src/components/gcds-input/gcds-input.tsx"],"sourcesContent":["@layer reset, default, disabled, error, focus;\n\n@layer reset {\n  :host {\n    display: block;\n\n    .gcds-input-wrapper {\n      margin: 0;\n      padding: 0;\n      border: 0;\n\n      input {\n        box-sizing: border-box;\n      }\n    }\n  }\n}\n\n@layer default {\n  :host .gcds-input-wrapper {\n    max-width: 75ch;\n    width: 100%;\n    font: var(--gcds-input-font);\n    color: var(--gcds-input-default-text);\n    transition: color ease-in-out 0.15s;\n\n    input {\n      display: block;\n      min-width: var(--gcds-input-min-width-and-height);\n      width: 100%;\n      max-width: 100%;\n      height: auto;\n      min-height: var(--gcds-input-min-width-and-height);\n      font: inherit !important;\n      margin: var(--gcds-input-margin) !important;\n      padding: var(--gcds-input-padding) !important;\n      background-color: var(--gcds-input-default-background);\n      background-image: none;\n      color: var(--gcds-input-default-text);\n      border: var(--gcds-input-border-width) solid currentColor;\n      border-radius: var(--gcds-input-border-radius);\n      transition:\n        border-color ease-in-out 0.15s,\n        box-shadow ease-in-out 0.15s,\n        outline ease-in-out 0.15s;\n\n      /* Hide number arrows */\n      &[type='number'] {\n        -moz-appearance: textfield;\n\n        &::-webkit-outer-spin-button,\n        &::-webkit-inner-spin-button {\n          -webkit-appearance: none;\n        }\n      }\n    }\n  }\n}\n\n@layer disabled {\n  :host .gcds-input-wrapper.gcds-disabled {\n    color: var(--gcds-input-disabled-text);\n\n    gcds-label {\n      --gcds-label-text: currentColor;\n    }\n\n    gcds-hint {\n      --gcds-hint-text: currentColor;\n    }\n\n    input:disabled {\n      cursor: not-allowed;\n      background-color: var(--gcds-input-disabled-background);\n      border-color: var(--gcds-input-disabled-text);\n    }\n  }\n}\n\n@layer error {\n  :host .gcds-input-wrapper input.gcds-error:not(:focus) {\n    border-color: var(--gcds-input-danger-border);\n  }\n}\n\n@layer focus {\n  :host .gcds-input-wrapper:focus-within input:focus {\n    border-color: var(--gcds-input-focus-border);\n    outline: var(--gcds-input-outline-width) solid\n      var(--gcds-input-focus-border);\n    outline-offset: var(--gcds-input-border-width);\n    box-shadow: var(--gcds-input-focus-box-shadow);\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  Watch,\n  EventEmitter,\n  State,\n  Method,\n  Host,\n  Prop,\n  h,\n  Listen,\n  AttachInternals,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  handleValidationResult,\n  inheritAttributes,\n  observerConfig,\n} from '../../utils/utils';\nimport {\n  Validator,\n  defaultValidator,\n  ValidatorEntry,\n  getValidator,\n  requiredValidator,\n  ValidatorOld,\n} from '../../validators';\n\n@Component({\n  tag: 'gcds-input',\n  styleUrl: 'gcds-input.css',\n  shadow: { delegatesFocus: true },\n  formAssociated: true,\n})\nexport class GcdsInput {\n  @Element() el: HTMLElement;\n\n  @AttachInternals()\n  internals: ElementInternals;\n\n  private initialValue?: string;\n\n  private shadowElement?: HTMLElement;\n\n  _validator: Validator<string> | ValidatorOld<string> = defaultValidator;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Specifies if an input element is disabled or not.\n   */\n  @Prop({ mutable: true }) disabled?: boolean = false;\n  @Watch('disabled')\n  validateDisabledInput() {\n    if (this.required) {\n      this.disabled = false;\n    }\n  }\n\n  /**\n   * Error message for an invalid input element.\n   */\n  @Prop({ mutable: true }) errorMessage?: string;\n  @Watch('errorMessage')\n  validateErrorMessage() {\n    if (this.disabled) {\n      this.errorMessage = '';\n    } else if (!this.hasError && this.errorMessage) {\n      this.hasError = true;\n    } else if (this.errorMessage == '') {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Specifies if the label is hidden or not.\n   */\n  @Prop() hideLabel?: boolean = false;\n\n  /**\n   * Hint displayed below the label and above the input field.\n   */\n  @Prop() hint?: string;\n\n  /**\n   * Id  attribute for an input element.\n   */\n  @Prop() inputId!: string;\n\n  /**\n   * Name attribute for an input element.\n   */\n  @Prop() name!: string;\n\n  /**\n   * Form field label\n   */\n  @Prop() label!: string;\n\n  /**\n   * Specifies if a form field is required or not.\n   */\n  @Prop() required?: boolean = false;\n\n  /**\n   * Size attribute for an input element to provide a visual indication\n   * of the expected text length to the user.\n   */\n  @Prop() size?: number;\n\n  /**\n   * Set Input types\n   */\n  // prettier-ignore\n  @Prop() type?: 'email' | 'number' | 'password' | 'search' | 'text' | 'url' = 'text';\n\n  /**\n   * Default value for an input element.\n   */\n  @Prop({ mutable: true }) value?: string;\n\n  /**\n   * String to have autocomplete enabled\n   */\n  @Prop() autocomplete?: string;\n\n  /**\n   * Array of validators\n   */\n  @Prop({ mutable: true }) validator: Array<\n    string | ValidatorEntry | Validator<string>\n  >;\n\n  @Watch('validator')\n  validateValidator() {\n    this._validator = getValidator(this.validator);\n  }\n\n  /**\n   * Set event to call validator\n   */\n  @Prop({ mutable: true }) validateOn: 'blur' | 'submit' | 'other' = 'blur';\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Specifies if the input is invalid.\n   */\n  @State() hasError: boolean;\n  @Watch('hasError')\n  validateHasError() {\n    if (this.disabled) {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Watch HTML attributes to inherit changes\n   */\n  @Watch('aria-invalid')\n  ariaInvalidWatcher() {\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement, [\n      'placeholder',\n    ]);\n  }\n  @Watch('aria-description')\n  ariaDescriptiondWatcher() {\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement, [\n      'placeholder',\n    ]);\n  }\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the input has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the input loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  private onBlur = () => {\n    if (this.validateOn == 'blur') {\n      this.validate();\n    }\n\n    this.gcdsBlur.emit();\n  };\n\n  /**\n   * Emitted when the element has received input.\n   */\n  @Event() gcdsInput: EventEmitter;\n\n  private handleInput = (e, customEvent) => {\n    const val = e.target && e.target.value;\n    this.value = val;\n    this.internals.setFormValue(val ? val : null);\n\n    if (e.type === 'change') {\n      const changeEvt = new e.constructor(e.type, e);\n      this.el.dispatchEvent(changeEvt);\n    }\n\n    customEvent.emit(this.value);\n  };\n\n  /**\n   * Emitted when the input has changed.\n   */\n  @Event() gcdsChange: EventEmitter;\n\n  /**\n   * Call any active validators\n   */\n  @Method()\n  async validate() {\n    handleValidationResult(\n      this.el as HTMLGcdsInputElement,\n      this._validator.validate(this.value),\n      this.label,\n      this.gcdsError,\n      this.gcdsValid,\n      this.lang,\n    );\n  }\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsError!: EventEmitter<object>;\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @Event() gcdsValid!: EventEmitter<object>;\n\n  @Listen('submit', { target: 'document' })\n  submitListener(e) {\n    if (e.target == this.el.closest('form')) {\n      if (this.validateOn && this.validateOn != 'other') {\n        this.validate();\n      }\n\n      if (this.hasError && this.validateOn != 'other') {\n        e.preventDefault();\n      }\n    }\n  }\n\n  @Listen('keydown', { target: 'document' })\n  keyDownListener(e) {\n    if (e.target == this.el && e.key === 'Enter') {\n      const formButton = document.createElement('button');\n      formButton.type = 'submit';\n      formButton.style.display = 'none';\n      this.el.closest('form').appendChild(formButton);\n      formButton.click();\n      formButton.remove();\n    }\n  }\n\n  /*\n   * Form internal functions\n   */\n  formResetCallback() {\n    if (this.value != this.initialValue) {\n      this.internals.setFormValue(this.initialValue);\n      this.value = this.initialValue;\n    }\n  }\n\n  formStateRestoreCallback(state) {\n    this.internals.setFormValue(state);\n    this.value = state;\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    this.validateDisabledInput();\n    this.validateHasError();\n    this.validateErrorMessage();\n\n    // Assign required validator if needed\n    requiredValidator(this.el, 'input', this.type);\n\n    this.validateValidator();\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement, [\n      'placeholder',\n    ]);\n\n    this.internals.setFormValue(this.value ? this.value : null);\n    this.initialValue = this.value ? this.value : null;\n  }\n\n  render() {\n    const {\n      disabled,\n      errorMessage,\n      hideLabel,\n      hint,\n      inputId,\n      name,\n      label,\n      required,\n      size,\n      type,\n      value,\n      hasError,\n      autocomplete,\n      inheritedAttributes,\n      lang,\n    } = this;\n\n    // Use max-width to keep field responsive\n    const style = {\n      maxWidth: `calc(${size * 2}ch + 1.5rem)`,\n    };\n\n    const attrsInput = {\n      disabled,\n      required,\n      type,\n      value,\n      autocomplete,\n      ...inheritedAttributes,\n    };\n\n    const attrsLabel = {\n      label,\n      required,\n    };\n\n    if (hint || errorMessage) {\n      const hintID = hint ? `hint-${inputId} ` : '';\n      const errorID = errorMessage ? `error-message-${inputId} ` : '';\n      attrsInput['aria-describedby'] = `${hintID}${errorID}${\n        attrsInput['aria-describedby']\n          ? ` ${attrsInput['aria-describedby']}`\n          : ''\n      }`;\n    }\n\n    return (\n      <Host>\n        <div\n          class={`gcds-input-wrapper ${disabled ? 'gcds-disabled' : ''} ${\n            hasError ? 'gcds-error' : ''\n          }`}\n        >\n          <gcds-label\n            {...attrsLabel}\n            hide-label={hideLabel}\n            label-for={inputId}\n            lang={lang}\n          />\n\n          {hint ? <gcds-hint hint-id={inputId}>{hint}</gcds-hint> : null}\n\n          {errorMessage ? (\n            <gcds-error-message messageId={inputId}>\n              {errorMessage}\n            </gcds-error-message>\n          ) : null}\n\n          <input\n            {...attrsInput}\n            class={hasError ? 'gcds-error' : null}\n            id={inputId}\n            name={name}\n            onBlur={() => this.onBlur()}\n            onFocus={() => this.gcdsFocus.emit()}\n            onInput={e => this.handleInput(e, this.gcdsInput)}\n            onChange={e => this.handleInput(e, this.gcdsChange)}\n            aria-labelledby={`label-for-${inputId}`}\n            aria-invalid={\n              inheritedAttributes['aria-invalid'] === 'true'\n                ? inheritedAttributes['aria-invalid']\n                : errorMessage\n                  ? 'true'\n                  : 'false'\n            }\n            size={size}\n            style={size ? style : null}\n            part=\"input\"\n            ref={element => (this.shadowElement = element as HTMLElement)}\n          />\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}