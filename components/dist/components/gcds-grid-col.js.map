{"file":"gcds-grid-col.js","mappings":";;AAAA,MAAM,cAAc,GAAG,+uBAA+uB,CAAC;AACvwB,0BAAe,cAAc;;MCMhBA,aAAW;;;;;mBAUC,KAAK;sBAO8B,CAAC;;;IAG3D,cAAc,CAAC,QAAgB;QAC7B,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAElC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC9B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACjB;KACF;IAqBD,eAAe,CAAC,QAAgB;QAC9B,MAAM,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAEvD,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YAC9C,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACnB;KACF;IAED,iBAAiB;;QAEf,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACpC;IAED,MAAM;QACJ,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QAEtC,MAAM,GAAG,GAAG,GAAG,CAAC;QAEhB,SAAS,aAAa;YACpB,MAAM,OAAO,GAAG,EAAE,CAAC;YAEnB,IAAI,MAAM,EAAE;gBACV,OAAO,CAAC,wBAAwB,CAAC,GAAG,MAAM,CAAC;aAC5C;YAED,IAAI,OAAO,EAAE;gBACX,OAAO,CAAC,yBAAyB,CAAC,GAAG,OAAO,CAAC;aAC9C;iBAAM,IAAI,MAAM,EAAE;gBACjB,OAAO,CAAC,yBAAyB,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC;aACjD;YAED,OAAO,OAAO,CAAC;SAChB;QAED,QACE,EAAC,IAAI,IAAC,KAAK,EAAE,aAAa,EAAE,IAC1B,EAAC,GAAG,IAAC,KAAK,EAAC,eAAe,IACxB,eAAQ,CACJ,CACD,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["GcdsGridCol"],"sources":["src/components/gcds-grid-col/gcds-grid-col.css?tag=gcds-grid-col&encapsulation=shadow","src/components/gcds-grid-col/gcds-grid-col.tsx"],"sourcesContent":["@layer reset, default, tablet, desktop;\n\n@layer reset {\n  :host {\n    display: block;\n\n    .gcds-grid-col {\n      display: block;\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n  }\n}\n\n@layer default {\n  :host {\n    grid-column: span var(--gcds-grid-columns-default-base) / span\n      var(--gcds-grid-columns-default-base);\n\n    .gcds-grid-col {\n      width: 100%;\n      height: 100%;\n    }\n  }\n}\n\n/* Note: viewport specific style decision */\n@layer tablet {\n  @media screen and (width >= 48em) {\n    :host {\n      grid-column: span\n        var(--gcds-grid-col-tablet, var(--gcds-grid-columns-default-tablet)) /\n        span\n        var(--gcds-grid-col-tablet, var(--gcds-grid-columns-default-tablet));\n    }\n  }\n}\n\n/* Note: viewport specific style decision */\n@layer desktop {\n  @media screen and (width >= 64em) {\n    :host {\n      grid-column: span\n        var(--gcds-grid-col-desktop, var(--gcds-grid-columns-default-desktop)) /\n        span\n        var(--gcds-grid-col-desktop, var(--gcds-grid-columns-default-desktop));\n    }\n  }\n}\n","import { Component, Element, Host, Watch, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'gcds-grid-col',\n  styleUrl: 'gcds-grid-col.css',\n  shadow: true,\n})\nexport class GcdsGridCol {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Set tag for grid column\n   */\n  @Prop() tag?: string = 'div';\n\n  /**\n   * Optimize grid column size for tablet (768px - 1023px).\n   * Tablet grid column sizes are based on a 6 column grid.\n   * The tablet size will also be used for desktop, if desktop is undefined.\n   */\n  @Prop({ mutable: true }) tablet?: 1 | 2 | 3 | 4 | 5 | 6 = 6;\n\n  @Watch('tablet')\n  validateTablet(newValue: number) {\n    const values = [1, 2, 3, 4, 5, 6];\n\n    if (!values.includes(newValue)) {\n      this.tablet = 6;\n    }\n  }\n\n  /**\n   * Optimize grid column size for desktop (1024px and above).\n   * Desktop grid column sizes are based on a 12 column grid.\n   */\n  @Prop({ mutable: true }) desktop?:\n    | 1\n    | 2\n    | 3\n    | 4\n    | 5\n    | 6\n    | 7\n    | 8\n    | 9\n    | 10\n    | 11\n    | 12;\n\n  @Watch('desktop')\n  validateDesktop(newValue: number) {\n    const values = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n    if (this.desktop && !values.includes(newValue)) {\n      this.desktop = 12;\n    }\n  }\n\n  componentWillLoad() {\n    // Validate attributes and set defaults\n    this.validateTablet(this.tablet);\n    this.validateDesktop(this.desktop);\n  }\n\n  render() {\n    const { desktop, tablet, tag } = this;\n\n    const Tag = tag;\n\n    function handleColSize() {\n      const colSize = {};\n\n      if (tablet) {\n        colSize['--gcds-grid-col-tablet'] = tablet;\n      }\n\n      if (desktop) {\n        colSize['--gcds-grid-col-desktop'] = desktop;\n      } else if (tablet) {\n        colSize['--gcds-grid-col-desktop'] = tablet * 2;\n      }\n\n      return colSize;\n    }\n\n    return (\n      <Host style={handleColSize()}>\n        <Tag class=\"gcds-grid-col\">\n          <slot />\n        </Tag>\n      </Host>\n    );\n  }\n}\n"],"version":3}