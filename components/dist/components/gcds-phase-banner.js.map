{"version":3,"names":["I18N","en","label","fr","gcdsPhaseBannerCss","GcdsPhaseBanner","__stencil_proxyCustomElement","HTMLElement","constructor","this","bannerRole","container","updateLang","observer","MutationObserver","mutations","oldValue","el","lang","observe","observerConfig","componentWillLoad","assignLanguage","render","isFixed","h","Host","key","class","role","i18n","size","centered","name"],"sources":["src/components/gcds-phase-banner/i18n/i18n.js","src/components/gcds-phase-banner/gcds-phase-banner.css?tag=gcds-phase-banner&encapsulation=shadow","src/components/gcds-phase-banner/gcds-phase-banner.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    label: 'Banner',\n  },\n  fr: {\n    label: 'BanniÃ¨re',\n  },\n};\n\nexport default I18N;\n","@layer reset, default, fixed, role, wide, compact;\n\n@layer reset {\n  :host {\n    display: block;\n\n    slot {\n      display: initial;\n    }\n  }\n}\n\n@layer default {\n  :host .gcds-phase-banner {\n    container: component banner / inline-size;\n    font: var(--gcds-phase-banner-font);\n    line-height: var(--gcds-phase-banner-line-height);\n\n    .banner__content {\n      padding: var(--gcds-phase-banner-padding);\n    }\n\n    .banner__icon {\n      display: flex;\n      margin: 0;\n\n      &.icon--left {\n        margin-inline-end: var(--gcds-phase-banner-icon-margin);\n      }\n\n      &.icon--right {\n        margin-inline-start: var(--gcds-phase-banner-icon-margin);\n      }\n\n      ::slotted(img),\n      ::slotted(svg) {\n        max-height: var(--gcds-phase-banner-icon-max-height);\n      }\n    }\n\n    .banner__details {\n      display: flex;\n      flex-wrap: wrap;\n      align-items: baseline;\n\n      ::slotted(a),\n      ::slotted(gcds-button) {\n        flex: 0 0 auto;\n      }\n\n      ::slotted(span),\n      ::slotted(small),\n      ::slotted(a) {\n        font-size: 80% !important;\n      }\n\n      ::slotted(p) {\n        font: var(--gcds-phase-banner-font);\n        margin: 0;\n      }\n\n      ::slotted(a) {\n        color: inherit;\n      }\n\n      ::slotted(gcds-button) {\n        margin: var(--gcds-phase-banner-details-cta-margin);\n        transform: scale(90%);\n      }\n    }\n  }\n}\n\n@layer fixed {\n  :host .gcds-phase-banner.banner-is-fixed {\n    position: sticky;\n    top: 0;\n    width: 100%;\n    z-index: 9999;\n  }\n}\n\n@layer role {\n  :host .gcds-phase-banner {\n    &.banner--role-primary {\n      background-color: var(--gcds-phase-banner-primary-background);\n      color: var(--gcds-phase-banner-primary-text);\n    }\n\n    &.banner--role-secondary {\n      background-color: var(--gcds-phase-banner-secondary-background);\n      color: var(--gcds-phase-banner-secondary-text);\n    }\n  }\n}\n\n@layer wide {\n  @container banner (width >= 36em) {\n    :host .gcds-phase-banner .banner__content {\n      display: flex;\n    }\n  }\n}\n\n@layer compact {\n  @container banner (width < 36em) {\n    :host .gcds-phase-banner .banner__content .banner__icon {\n      display: none;\n    }\n  }\n}\n","import { Component, Element, Host, Prop, State, h } from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n/**\n * Phase banner displays a banner indicating the current phase of a project or feature, with optional icons and call-to-action elements.\n *\n * @slot banner-cta - Slot for the call-to-action element in the banner.\n * @slot banner-icon-left - Slot for displaying an icon/image on the left of the banner.\n * @slot banner-icon-right - Slot for displaying an icon/image on the right of the banner.\n * @slot banner-text - Slot for the main content of the banner.\n */\n@Component({\n  tag: 'gcds-phase-banner',\n  styleUrl: 'gcds-phase-banner.css',\n  shadow: true,\n})\nexport class GcdsPhaseBanner {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines banner role.\n   */\n  @Prop() bannerRole?: 'primary' | 'secondary' = 'primary';\n\n  /**\n   * Defines the container width of the phase banner content\n   */\n  @Prop() container?: 'full' | 'xl' | 'lg' | 'md' | 'sm' | 'xs' = 'xl';\n\n  /**\n   * Defines if the banner's position is fixed.\n   */\n  @Prop() isFixed?: boolean;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n  }\n\n  render() {\n    const { bannerRole, container, isFixed, lang } = this;\n\n    return (\n      <Host>\n        <div\n          class={`gcds-phase-banner banner--role-${bannerRole} ${\n            isFixed ? 'banner--is-fixed' : ''\n          }`}\n          role=\"status\"\n          aria-label={i18n[lang].label}\n        >\n          <gcds-container size={container} centered>\n            <div class=\"banner__content\">\n              <figure class=\"banner__icon icon--left\">\n                <slot name=\"banner-icon-left\" />\n              </figure>\n\n              <div class=\"banner__details\">\n                <slot name=\"banner-text\" />\n                <slot name=\"banner-cta\" />\n              </div>\n\n              <figure class=\"banner__icon icon--right\">\n                <slot name=\"banner-icon-right\" />\n              </figure>\n            </div>\n          </gcds-container>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"wIAAA,MAAMA,EAAO,CACXC,GAAI,CACFC,MAAO,UAETC,GAAI,CACFD,MAAO,aCLX,MAAME,EAAqB,qnE,MCiBdC,EAAeC,EAAA,MAAAD,UAAAE,EAL5B,WAAAC,G,oDAeUC,KAAUC,WAA6B,UAKvCD,KAASE,UAA+C,IAmEjE,CAhDC,UAAAC,GACE,MAAMC,EAAW,IAAIC,kBAAiBC,IACpC,GAAIA,EAAU,GAAGC,UAAYP,KAAKQ,GAAGC,KAAM,CACzCT,KAAKS,KAAOT,KAAKQ,GAAGC,I,KAGxBL,EAASM,QAAQV,KAAKQ,GAAIG,E,CAG5B,uBAAMC,GAEJZ,KAAKS,KAAOI,EAAeb,KAAKQ,IAEhCR,KAAKG,Y,CAGP,MAAAW,GACE,MAAMb,WAAEA,EAAUC,UAAEA,EAASa,QAAEA,EAAON,KAAEA,GAAST,KAEjD,OACEgB,EAACC,EAAI,CAAAC,IAAA,4CACHF,EACE,OAAAE,IAAA,2CAAAC,MAAO,kCAAkClB,KACvCc,EAAU,mBAAqB,KAEjCK,KAAK,SACO,aAAAC,EAAKZ,GAAMhB,OAEvBuB,EAAA,kBAAAE,IAAA,2CAAgBI,KAAMpB,EAAWqB,SAAQ,MACvCP,EAAK,OAAAE,IAAA,2CAAAC,MAAM,mBACTH,EAAQ,UAAAE,IAAA,2CAAAC,MAAM,2BACZH,EAAA,QAAAE,IAAA,2CAAMM,KAAK,sBAGbR,EAAK,OAAAE,IAAA,2CAAAC,MAAM,mBACTH,EAAM,QAAAE,IAAA,2CAAAM,KAAK,gBACXR,EAAA,QAAAE,IAAA,2CAAMM,KAAK,gBAGbR,EAAQ,UAAAE,IAAA,2CAAAC,MAAM,4BACZH,EAAM,QAAAE,IAAA,2CAAAM,KAAK,0B","ignoreList":[]}