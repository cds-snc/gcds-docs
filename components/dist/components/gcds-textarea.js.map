{"version":3,"names":["I18N","en","characters","allowed","left","fr","gcdsTextareaCss","GcdsTextarea","__stencil_proxyCustomElement","HTMLElement","constructor","this","_validator","defaultValidator","disabled","hideLabel","required","rows","validateOn","inheritedAttributes","onBlur","validate","gcdsBlur","emit","handleInput","e","customEvent","val","target","value","internals","setFormValue","shadowElement","type","changeEvt","el","dispatchEvent","validateDisabledTextarea","validateErrorMessage","errorMessage","hasError","watchValue","validateValidator","getValidator","validator","validateHasError","handleValidationResult","label","gcdsError","gcdsValid","lang","submitListener","closest","preventDefault","formResetCallback","initialValue","formStateRestoreCallback","state","updateLang","observer","MutationObserver","mutations","oldValue","observe","observerConfig","componentWillLoad","assignLanguage","requiredValidator","inheritAttributes","render","characterCount","cols","hint","textareaId","name","style","maxWidth","attrsLabel","attrsTextarea","Object","assign","hintID","errorID","countID","h","Host","key","class","messageId","id","onFocus","gcdsFocus","onInput","gcdsInput","onChange","gcdsChange","maxlength","ref","element","undefined","i18n","length"],"sources":["src/components/gcds-textarea/i18n/i18n.js","src/components/gcds-textarea/gcds-textarea.css?tag=gcds-textarea&encapsulation=shadow","src/components/gcds-textarea/gcds-textarea.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    characters: {\n      allowed: 'characters allowed',\n      left: 'characters left',\n    },\n  },\n  fr: {\n    characters: {\n      allowed: 'caractères maximum',\n      left: 'caractères restants',\n    },\n  },\n};\n\nexport default I18N;\n","@layer reset, default, disabled, error, focus;\n\n@layer reset {\n  :host {\n    display: block;\n\n    .gcds-textarea-wrapper {\n      margin: 0;\n      padding: 0;\n      border: 0;\n\n      textarea {\n        box-sizing: border-box;\n      }\n    }\n  }\n}\n\n@layer default {\n  :host .gcds-textarea-wrapper {\n    width: 100%;\n    max-width: 75ch;\n    font: var(--gcds-textarea-font);\n    color: var(--gcds-textarea-default-text);\n    transition: color ease-in-out 0.15s;\n\n    textarea {\n      display: block;\n      min-width: 50%;\n      width: 100%;\n      max-width: 100%;\n      height: auto;\n      min-height: var(--gcds-textarea-min-height);\n      font: inherit;\n      margin: var(--gcds-textarea-margin) !important;\n      padding: var(--gcds-textarea-padding) !important;\n      background-color: var(--gcds-textarea-default-background);\n      background-image: none;\n      color: var(--gcds-textarea-default-text);\n      border: var(--gcds-textarea-border-width) solid currentColor;\n      border-radius: var(--gcds-textarea-border-radius);\n      transition:\n        border-color ease-in-out 0.15s,\n        box-shadow ease-in-out 0.15s,\n        outline ease-in-out 0.15s;\n    }\n  }\n}\n\n@layer disabled {\n  :host .gcds-textarea-wrapper.gcds-disabled {\n    color: var(--gcds-textarea-disabled-text);\n\n    gcds-label {\n      --gcds-label-text: currentColor;\n    }\n\n    gcds-hint {\n      --gcds-hint-text: currentColor;\n    }\n\n    textarea:disabled {\n      cursor: not-allowed;\n      background-color: var(--gcds-textarea-disabled-background);\n      border-color: var(--gcds-textarea-disabled-text);\n    }\n  }\n}\n\n@layer error {\n  :host .gcds-textarea-wrapper {\n    .error-message-container {\n      display: block;\n    }\n\n    textarea.gcds-error:not(:focus) {\n      border-color: var(--gcds-textarea-danger-border);\n    }\n  }\n}\n\n@layer focus {\n  :host .gcds-textarea-wrapper:focus-within textarea:focus {\n    border-color: var(--gcds-textarea-focus-border);\n    outline: var(--gcds-textarea-outline-width) solid\n      var(--gcds-textarea-focus-border);\n    outline-offset: var(--gcds-textarea-border-width);\n    box-shadow: var(--gcds-textarea-focus-box-shadow);\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  Method,\n  Watch,\n  EventEmitter,\n  Host,\n  State,\n  Prop,\n  h,\n  Listen,\n  AttachInternals,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  handleValidationResult,\n  inheritAttributes,\n  observerConfig,\n} from '../../utils/utils';\nimport {\n  Validator,\n  defaultValidator,\n  ValidatorEntry,\n  getValidator,\n  requiredValidator,\n} from '../../validators';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-textarea',\n  styleUrl: 'gcds-textarea.css',\n  shadow: { delegatesFocus: true },\n  formAssociated: true,\n})\nexport class GcdsTextarea {\n  @Element() el: HTMLElement;\n\n  @AttachInternals()\n  internals: ElementInternals;\n\n  private initialValue?: string;\n\n  private shadowElement?: HTMLTextAreaElement;\n\n  _validator: Validator<string> = defaultValidator;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Sets the maxlength attribute for the textarea element.\n   */\n  @Prop() characterCount?: number;\n\n  /**\n   * Defines width for textarea cols (the min-width for textarea's is 50%).\n   */\n  @Prop() cols?: number;\n\n  /**\n   * Specifies if a textarea element is disabled or not.\n   */\n  @Prop({ mutable: true }) disabled?: boolean = false;\n  @Watch('disabled')\n  validateDisabledTextarea() {\n    if (this.required) {\n      this.disabled = false;\n    }\n  }\n\n  /**\n   * Error message for an invalid textarea element.\n   */\n  @Prop({ mutable: true }) errorMessage?: string;\n  @Watch('errorMessage')\n  validateErrorMessage() {\n    if (this.disabled) {\n      this.errorMessage = '';\n    } else if (!this.hasError && this.errorMessage) {\n      this.hasError = true;\n    } else if (this.errorMessage == '') {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Specifies if the label is hidden or not.\n   */\n  @Prop() hideLabel?: boolean = false;\n\n  /**\n   * Hint displayed below the label and above the textarea field.\n   */\n  @Prop() hint?: string;\n\n  /**\n   * Form field label\n   */\n  @Prop() label!: string;\n\n  /**\n   * Name attribute for a textarea element.\n   */\n  @Prop() name!: string;\n\n  /**\n   * Specifies if a form field is required or not.\n   */\n  @Prop() required?: boolean = false;\n\n  /**\n   * Default value for textarea rows.\n   */\n  @Prop() rows?: number = 5;\n\n  /**\n   * Id attribute for a textarea element.\n   */\n  @Prop() textareaId!: string;\n\n  /**\n   * Default value for an input element.\n   */\n  @Prop({ mutable: true }) value?: string;\n\n  /**\n   * Set value on internal textarea to allow proper resets\n   */\n  @Watch('value')\n  watchValue(val) {\n    this.shadowElement.value = val;\n    this.internals.setFormValue(val ? val : null);\n  }\n\n  /**\n   * Array of validators\n   */\n  @Prop({ mutable: true }) validator: Array<\n    string | ValidatorEntry | Validator<string>\n  >;\n\n  @Watch('validator')\n  validateValidator() {\n    this._validator = getValidator(this.validator);\n  }\n\n  /**\n   * Set event to call validator\n   */\n  @Prop({ mutable: true }) validateOn: 'blur' | 'submit' | 'other' = 'blur';\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Specifies if the textarea is invalid.\n   */\n  @State() hasError: boolean;\n  @Watch('hasError')\n  validateHasError() {\n    if (this.disabled) {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the textarea has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the textarea loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  private onBlur = () => {\n    if (this.validateOn == 'blur') {\n      this.validate();\n    }\n\n    this.gcdsBlur.emit();\n  };\n\n  /**\n   * Emitted when the textarea has changed.\n   */\n  @Event() gcdsChange: EventEmitter;\n\n  /**\n   * Emitted when the textarea has received input.\n   */\n  @Event() gcdsInput: EventEmitter;\n\n  private handleInput = (e, customEvent) => {\n    const val = e.target && e.target.value;\n    this.value = val;\n    this.internals.setFormValue(val ? val : null);\n    this.shadowElement.value = val;\n\n    if (e.type === 'change') {\n      const changeEvt = new e.constructor(e.type, e);\n      this.el.dispatchEvent(changeEvt);\n    }\n\n    customEvent.emit(this.value);\n  };\n\n  /**\n   * Call any active validators\n   */\n  @Method()\n  async validate() {\n    handleValidationResult(\n      this.el as HTMLGcdsTextareaElement,\n      this._validator.validate(this.value),\n      this.label,\n      this.gcdsError,\n      this.gcdsValid,\n      this.lang,\n    );\n  }\n\n  /**\n   * Emitted when the textarea has a validation error.\n   */\n  @Event() gcdsError!: EventEmitter<object>;\n\n  /**\n   * Emitted when the textarea has a validation error.\n   */\n  @Event() gcdsValid!: EventEmitter<object>;\n\n  @Listen('submit', { target: 'document' })\n  submitListener(e) {\n    if (e.target == this.el.closest('form')) {\n      if (this.validateOn && this.validateOn != 'other') {\n        this.validate();\n      }\n\n      if (this.hasError && this.validateOn != 'other') {\n        e.preventDefault();\n      }\n    }\n  }\n\n  /*\n   * Form internal functions\n   */\n  formResetCallback() {\n    if (this.value != this.initialValue) {\n      this.internals.setFormValue(this.initialValue);\n      this.value = this.initialValue;\n      this.shadowElement.value = this.initialValue;\n    }\n  }\n\n  formStateRestoreCallback(state) {\n    this.internals.setFormValue(state);\n    this.value = state;\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    this.validateDisabledTextarea();\n    this.validateHasError();\n    this.validateErrorMessage();\n\n    // Assign required validator if needed\n    requiredValidator(this.el, 'textarea');\n\n    this.validateValidator();\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement, [\n      'placeholder',\n    ]);\n\n    this.internals.setFormValue(this.value ? this.value : null);\n    this.initialValue = this.value ? this.value : null;\n  }\n\n  render() {\n    const {\n      characterCount,\n      cols,\n      disabled,\n      errorMessage,\n      hideLabel,\n      hint,\n      label,\n      required,\n      rows,\n      textareaId,\n      value,\n      hasError,\n      inheritedAttributes,\n      lang,\n      name,\n    } = this;\n\n    // Use max-width instead of cols attribute to keep field responsive\n    const style = {\n      maxWidth: `${cols * 1.5}ch`,\n    };\n\n    const attrsLabel = {\n      label,\n      required,\n    };\n\n    const attrsTextarea = {\n      name,\n      disabled,\n      required,\n      rows,\n      ...inheritedAttributes,\n    };\n\n    if (hint || errorMessage || characterCount) {\n      const hintID = hint ? `hint-${textareaId} ` : '';\n      const errorID = errorMessage ? `error-message-${textareaId} ` : '';\n      const countID = characterCount ? `textarea__count-${textareaId} ` : '';\n      attrsTextarea['aria-describedby'] = `${hintID}${errorID}${countID}${\n        attrsTextarea['aria-describedby']\n          ? `${attrsTextarea['aria-describedby']}`\n          : ''\n      }`;\n    }\n\n    return (\n      <Host>\n        <div\n          class={`gcds-textarea-wrapper ${disabled ? 'gcds-disabled' : ''} ${\n            hasError ? 'gcds-error' : ''\n          }`}\n        >\n          <gcds-label\n            {...attrsLabel}\n            hide-label={hideLabel}\n            label-for={textareaId}\n            lang={lang}\n          />\n\n          {hint ? <gcds-hint hint-id={textareaId}>{hint}</gcds-hint> : null}\n\n          {errorMessage ? (\n            <gcds-error-message messageId={textareaId}>\n              {errorMessage}\n            </gcds-error-message>\n          ) : null}\n\n          <textarea\n            {...attrsTextarea}\n            class={hasError ? 'gcds-error' : null}\n            id={textareaId}\n            onBlur={() => this.onBlur()}\n            onFocus={() => this.gcdsFocus.emit()}\n            onInput={e => this.handleInput(e, this.gcdsInput)}\n            onChange={e => this.handleInput(e, this.gcdsChange)}\n            aria-labelledby={`label-for-${textareaId}`}\n            aria-invalid={errorMessage ? 'true' : 'false'}\n            maxlength={characterCount ? characterCount : null}\n            style={cols ? style : null}\n            ref={element =>\n              (this.shadowElement = element as HTMLTextAreaElement)\n            }\n          >\n            {value}\n          </textarea>\n\n          {characterCount ? (\n            <gcds-text id={`textarea__count-${textareaId}`} aria-live=\"polite\">\n              {value == undefined\n                ? `${characterCount} ${i18n[lang].characters.allowed}`\n                : `${characterCount - value.length} ${\n                    i18n[lang].characters.left\n                  }`}\n            </gcds-text>\n          ) : null}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}