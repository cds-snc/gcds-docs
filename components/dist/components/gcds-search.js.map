{"version":3,"names":["I18N","en","search","searchLabel","fr","gcdsSearchCss","GcdsSearch","__stencil_proxyCustomElement","HTMLElement","constructor","this","placeholder","action","method","name","searchId","handleInput","e","customEvent","input","target","value","emit","updateLang","observer","MutationObserver","mutations","oldValue","el","lang","observe","observerConfig","componentWillLoad","assignLanguage","render","suggested","labelText","replace","attrsInput","formAction","h","Host","key","class","tag","role","onSubmit","emitEvent","gcdsSubmit","label","Object","assign","type","id","list","size","maxLength","onInput","gcdsInput","onChange","gcdsChange","onFocus","gcdsFocus","onBlur","gcdsBlur","map","k","v","exportparts"],"sources":["src/components/gcds-search/i18n/I18N.js","src/components/gcds-search/gcds-search.css?tag=gcds-search&encapsulation=shadow","src/components/gcds-search/gcds-search.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    search: 'Search',\n    searchLabel: 'Search {$}',\n  },\n  fr: {\n    search: 'Recherche',\n    searchLabel: 'Rechercher dans {$}',\n  },\n};\n\nexport default I18N;\n","@layer reset, default, focus;\n\n@layer reset {\n  :host {\n    display: block;\n\n    .gcds-search input {\n      background-image: none;\n      box-sizing: border-box;\n    }\n\n    [type='search']::-webkit-search-cancel-button,\n    [type='search']::-webkit-search-decoration {\n      -webkit-appearance: none;\n      appearance: none;\n    }\n  }\n}\n\n@layer default {\n  :host .gcds-search {\n    .gcds-search__header {\n      display: block;\n      width: 0;\n      height: 0;\n      margin: 0;\n      overflow: hidden;\n    }\n\n    .gcds-search__form {\n      display: flex;\n      margin: var(--gcds-search-margin) !important;\n    }\n\n    input {\n      box-sizing: border-box;\n      border-radius: 0;\n      width: 100%;\n      max-height: var(--gcds-search-max-height);\n      font: var(--gcds-search-font);\n      padding: var(--gcds-search-padding) !important;\n      background-color: var(--gcds-search-default-background);\n      color: var(--gcds-search-default-text);\n      border: var(--gcds-search-border-width) solid var(--gcds-search-border-color);\n      border-right: 0 solid transparent;\n      transition:\n        border-color ease-in-out 0.15s,\n        box-shadow ease-in-out 0.15s;\n\n      &::placeholder {\n        color: var(--gcds-search-placeholder);\n      }\n    }\n\n    gcds-button {\n      --gcds-button-mobile-margin: 0;\n\n      &::part(button) {\n        border-radius: 0;\n        padding: 0;\n        width: var(--gcds-search-button-width-height);\n        height: var(--gcds-search-button-width-height);\n      }\n    }\n  }\n}\n\n@layer focus {\n  :host .gcds-search {\n    input:focus {\n      border-color: var(--gcds-search-focus-border-color);\n      outline: var(--gcds-search-outline-width) solid\n        var(--gcds-search-focus-border-color);\n      outline-offset: var(--gcds-search-border-width);\n      box-shadow: var(--gcds-search-focus-box-shadow);\n      border-width: var(--gcds-search-focus-border-width);\n      margin: var(--gcds-search-focus-margin);\n      z-index: 30;\n    }\n\n    ::part(button):focus {\n      box-shadow: var(--gcds-search-focus-box-shadow);\n    }\n  }\n}\n","import {\n  Component,\n  Host,\n  Prop,\n  Element,\n  State,\n  Event,\n  EventEmitter,\n  h,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig, emitEvent } from '../../utils/utils';\nimport I18N from './i18n/I18N';\n\n@Component({\n  tag: 'gcds-search',\n  styleUrl: 'gcds-search.css',\n  shadow: true,\n})\nexport class GcdsSearch {\n  @Element() el: HTMLElement;\n\n  /**\n   * Set the placeholder and label for the search input. Becomes \"Search [placeholder]\"\n   */\n  @Prop() placeholder: string = 'Canada.ca';\n\n  /**\n   * Sets the action for the search form. Default will be canada.ca global search\n   */\n  @Prop() action: string = '/sr/srb.html';\n\n  /**\n   * Set the form method of the search form\n   */\n  @Prop() method: 'get' | 'post' = 'get';\n\n  /**\n   * Set the name of the search input\n   */\n  @Prop() name: string = 'q';\n\n  /**\n   * Set the id of the search input\n   */\n  @Prop() searchId: string = 'search';\n\n  /**\n   * Set the value of the search input\n   */\n  @Prop({ mutable: true }) value: string;\n\n  /**\n   * Set a list of predefined search terms\n   */\n  @Prop() suggested: Array<string>;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the search element has recieved input.\n   */\n  @Event() gcdsInput!: EventEmitter<string>;\n\n  /**\n   * Emitted when the search input value has changed.\n   */\n  @Event() gcdsChange!: EventEmitter<string>;\n\n  /**\n   * Emitted when the search input value has gained focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<object>;\n\n  /**\n   * Emitted when the search input has lost focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<object>;\n\n  /**\n   * Emitted when the search form has submitted.\n   */\n  @Event() gcdsSubmit!: EventEmitter<object>;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  private handleInput = (e, customEvent) => {\n    const input = e.target as HTMLInputElement;\n    this.value = input.value;\n\n    customEvent.emit(this.value);\n  };\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n  }\n\n  render() {\n    const {\n      placeholder,\n      action,\n      method,\n      name,\n      value,\n      lang,\n      searchId,\n      suggested,\n    } = this;\n\n    const labelText = `${I18N[lang].searchLabel.replace('{$}', placeholder)}`;\n\n    const attrsInput = {\n      name,\n      placeholder: labelText,\n    };\n\n    const formAction =\n      action === '/sr/srb.html'\n        ? `https://www.canada.ca/${lang}/sr/srb.html`\n        : action;\n\n    return (\n      <Host>\n        <section class=\"gcds-search\">\n          <gcds-sr-only tag=\"h2\">{I18N[lang].search}</gcds-sr-only>\n          <form\n            action={formAction}\n            method={method}\n            role=\"search\"\n            onSubmit={e => emitEvent(e, this.gcdsSubmit, this.value)}\n            class=\"gcds-search__form\"\n          >\n            <gcds-label\n              label={labelText}\n              label-for={searchId}\n              hide-label\n            ></gcds-label>\n            <input\n              type=\"search\"\n              id={searchId}\n              {...(suggested ? { list: 'search-list' } : {})}\n              size={34}\n              maxLength={170}\n              onInput={e => this.handleInput(e, this.gcdsInput)}\n              onChange={e => this.handleInput(e, this.gcdsChange)}\n              onFocus={() => this.gcdsFocus.emit()}\n              onBlur={() => this.gcdsBlur.emit()}\n              {...attrsInput}\n              class=\"gcds-search__input\"\n              value={value}\n            ></input>\n\n            {suggested && (\n              <datalist id=\"search-list\">\n                {suggested.map((k, v) => (\n                  <option value={k} key={v} />\n                ))}\n              </datalist>\n            )}\n\n            <gcds-button\n              type=\"submit\"\n              class=\"gcds-search__button\"\n              exportparts=\"button\"\n            >\n              <gcds-icon\n                name=\"search\"\n                label={I18N[lang].search}\n                size=\"h3\"\n              ></gcds-icon>\n            </gcds-button>\n          </form>\n        </section>\n      </Host>\n    );\n  }\n}\n"],"mappings":"kQAAA,MAAMA,EAAO,CACXC,GAAI,CACFC,OAAQ,SACRC,YAAa,cAEfC,GAAI,CACFF,OAAQ,YACRC,YAAa,wBCPjB,MAAME,EAAgB,oqD,MCkBTC,EAAUC,EAAA,MAAAD,UAAAE,EALvB,WAAAC,G,qOAWUC,KAAWC,YAAW,YAKtBD,KAAME,OAAW,eAKjBF,KAAMG,OAAmB,MAKzBH,KAAII,KAAW,IAKfJ,KAAQK,SAAW,SA8CnBL,KAAAM,YAAc,CAACC,EAAGC,KACxB,MAAMC,EAAQF,EAAEG,OAChBV,KAAKW,MAAQF,EAAME,MAEnBH,EAAYI,KAAKZ,KAAKW,MAAM,CAmG/B,CA7FC,UAAAE,GACE,MAAMC,EAAW,IAAIC,kBAAiBC,IACpC,GAAIA,EAAU,GAAGC,UAAYjB,KAAKkB,GAAGC,KAAM,CACzCnB,KAAKmB,KAAOnB,KAAKkB,GAAGC,I,KAGxBL,EAASM,QAAQpB,KAAKkB,GAAIG,E,CAG5B,uBAAMC,GAEJtB,KAAKmB,KAAOI,EAAevB,KAAKkB,G,CAGlC,MAAAM,GACE,MAAMvB,YACJA,EAAWC,OACXA,EAAMC,OACNA,EAAMC,KACNA,EAAIO,MACJA,EAAKQ,KACLA,EAAId,SACJA,EAAQoB,UACRA,GACEzB,KAEJ,MAAM0B,EAAY,GAAGpC,EAAK6B,GAAM1B,YAAYkC,QAAQ,MAAO1B,KAE3D,MAAM2B,EAAa,CACjBxB,OACAH,YAAayB,GAGf,MAAMG,EACJ3B,IAAW,eACP,yBAAyBiB,gBACzBjB,EAEN,OACE4B,EAACC,EAAI,CAAAC,IAAA,4CACHF,EAAS,WAAAE,IAAA,2CAAAC,MAAM,eACbH,EAAc,gBAAAE,IAAA,2CAAAE,IAAI,MAAM5C,EAAK6B,GAAM3B,QACnCsC,EAAA,QAAAE,IAAA,2CACE9B,OAAQ2B,EACR1B,OAAQA,EACRgC,KAAK,SACLC,SAAU7B,GAAK8B,EAAU9B,EAAGP,KAAKsC,WAAYtC,KAAKW,OAClDsB,MAAM,qBAENH,EAAA,cAAAE,IAAA,2CACEO,MAAOb,EAAS,YACLrB,EAEC,oBACdyB,EACE,QAAAU,OAAAC,OAAA,CAAAT,IAAA,2CAAAU,KAAK,SACLC,GAAItC,GACCoB,EAAY,CAAEmB,KAAM,eAAkB,GAAE,CAC7CC,KAAM,GACNC,UAAW,IACXC,QAASxC,GAAKP,KAAKM,YAAYC,EAAGP,KAAKgD,WACvCC,SAAU1C,GAAKP,KAAKM,YAAYC,EAAGP,KAAKkD,YACxCC,QAAS,IAAMnD,KAAKoD,UAAUxC,OAC9ByC,OAAQ,IAAMrD,KAAKsD,SAAS1C,QACxBgB,EAAU,CACdK,MAAM,qBACNtB,MAAOA,KAGRc,GACCK,EAAU,YAAAE,IAAA,2CAAAW,GAAG,eACVlB,EAAU8B,KAAI,CAACC,EAAGC,IACjB3B,EAAQ,UAAAnB,MAAO6C,EAAGxB,IAAKyB,OAK7B3B,EACE,eAAAE,IAAA,2CAAAU,KAAK,SACLT,MAAM,sBACNyB,YAAY,UAEZ5B,EACE,aAAAE,IAAA,2CAAA5B,KAAK,SACLmC,MAAOjD,EAAK6B,GAAM3B,OAClBqD,KAAK,U","ignoreList":[]}