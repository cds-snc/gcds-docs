{"version":3,"names":["I18N","en","heading","subheading","fr","gcdsErrorSummaryCss","GcdsErrorSummary","__stencil_proxyCustomElement","HTMLElement","constructor","this","listen","errorLinksObject","errorQueue","hasSubmitted","listenChanged","errorLinks","errorLinksChanged","newErrorLinks","JSON","parse","errorListener","e","target","closest","el","detail","message","validListener","key","value","Object","entries","sortedErrorList","sortErrors","assign","submitListener","setTimeout","shadowElement","focus","sortable","map","getBoundingClientRect","y","sort","a","b","objSorted","forEach","item","focusElement","id","element","document","querySelector","replace","_a","scrollIntoView","updateLang","observer","MutationObserver","mutations","oldValue","lang","observe","observerConfig","componentWillLoad","assignLanguage","render","h","Host","role","tabindex","ref","class","keys","length","tag","i18n","size","href","onClick","preventDefault"],"sources":["src/components/gcds-error-summary/i18n/i18n.js","src/components/gcds-error-summary/gcds-error-summary.css?tag=gcds-error-summary&encapsulation=shadow","src/components/gcds-error-summary/gcds-error-summary.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    heading: 'There was a problem',\n    subheading: 'Errors were found on this page:',\n  },\n  fr: {\n    heading: 'Un problème est survenu',\n    subheading: 'Des erreurs ont été trouvées sur cette page :',\n  },\n};\n\nexport default I18N;\n","@layer reset, default, compact;\n\n@layer reset {\n  :host {\n    display: block;\n  }\n}\n\n@layer default {\n  :host {\n    container: component summary / inline-size;\n\n    .gcds-error-summary {\n      padding: var(--gcds-error-summary-padding);\n      margin: var(--gcds-error-summary-margin);\n      border: var(--gcds-error-summary-border-width) solid\n        var(--gcds-error-summary-border-color);\n      color: var(--gcds-error-summary-text);\n      transition:\n        background 0.15s ease-in-out,\n        border 0.15s ease-in-out,\n        color 0.15s ease-in-out;\n      display: none;\n\n      &.gcds-show {\n        display: block;\n      }\n\n      .summary__errorlist {\n        padding: 0;\n        margin: var(--gcds-error-summary-list-margin);\n\n        .summary__listitem {\n          max-width: var(--gcds-error-summary-max-width);\n\n          &:not(:last-child) {\n            padding: var(--gcds-error-summary-list-item-padding);\n          }\n\n          gcds-link::part(link):not(:focus) {\n            color: var(--gcds-error-summary-link-color);\n          }\n        }\n      }\n    }\n  }\n}\n\n@layer compact {\n  @container summary (width < 24em) {\n    :host .gcds-error-summary {\n      padding: var(--gcds-error-summary-mobile-padding);\n    }\n  }\n}\n","import {\n  Component,\n  Host,\n  Element,\n  Prop,\n  Watch,\n  State,\n  Listen,\n  Event,\n  EventEmitter,\n  h,\n} from '@stencil/core';\nimport { assignLanguage, observerConfig } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n\n/**\n * An error summary is a list of user errors in a form.\n */\n@Component({\n  tag: 'gcds-error-summary',\n  styleUrl: 'gcds-error-summary.css',\n  shadow: true,\n})\nexport class GcdsErrorSummary {\n  @Element() el: HTMLElement;\n\n  private shadowElement?: HTMLElement;\n\n  /**\n   * Set error summary heading\n   */\n  @Prop({ reflect: true }) heading?: string;\n\n  /**\n   * Specifies if the error summary should listen for GcdsError event to generate error list.\n   */\n  @Prop({ mutable: true }) listen?: boolean = true;\n  @Watch('listen')\n  listenChanged() {\n    if (this.errorLinks) {\n      this.listen = false;\n    }\n  }\n\n  /**\n   * Object of list items for error list. Format: { link-href: link-label }\n   */\n  @Prop({ reflect: false, mutable: true }) errorLinks: string | object;\n  errorLinksObject: object = {};\n\n  /**\n   * Convert contextual links prop to object\n   * (Object props get treated as string when using Stencil components without a framework)\n   */\n  @Watch('errorLinks')\n  errorLinksChanged(newErrorLinks: string | object) {\n    if (typeof newErrorLinks == 'string') {\n      this.errorLinks = JSON.parse(newErrorLinks);\n    } else if (typeof newErrorLinks == 'object') {\n      this.errorLinks = newErrorLinks;\n    }\n\n    this.errorQueue = this.errorLinks as Object;\n\n    // Turn off listen if error-links is being used\n    if (this.listen) {\n      this.listen = false;\n    }\n  }\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the link has focus.\n   */\n  @Event() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the link loses focus.\n   */\n  @Event() gcdsBlur!: EventEmitter<void>;\n\n  /**\n   * Emitted when the link has been clicked.\n   */\n  @Event() gcdsClick!: EventEmitter<string>;\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Queue of erros\n   */\n  @State() errorQueue: object = {};\n\n  @State() hasSubmitted: boolean = false;\n\n  @Listen('gcdsError', { target: 'document' })\n  errorListener(e) {\n    if (this.listen && e.target.closest('form') == this.el.closest('form')) {\n      this.errorLinksObject[e.detail.message] = e.target;\n    }\n  }\n\n  @Listen('gcdsValid', { target: 'document' })\n  validListener(e) {\n    if (this.listen && e.target.closest('form') == this.el.closest('form')) {\n      for (const [key, value] of Object.entries(this.errorLinksObject)) {\n        if (value == e.target) {\n          delete this.errorLinksObject[key];\n        }\n      }\n\n      if (this.errorQueue) {\n        const sortedErrorList = this.sortErrors();\n\n        this.errorQueue = { ...sortedErrorList };\n      }\n    }\n  }\n\n  @Listen('submit', { target: 'document' })\n  submitListener(e) {\n    if (this.listen && e.target.closest('form') == this.el.closest('form')) {\n      this.hasSubmitted = true;\n\n      // Time out to collect gcdsError events before rendering\n      setTimeout(() => {\n        const sortedErrorList = this.sortErrors();\n\n        this.errorQueue = { ...sortedErrorList };\n\n        // Time out to let list render\n        setTimeout(() => {\n          this.shadowElement.focus();\n        }, 50);\n      }, 100);\n    }\n  }\n\n  /*\n   * Sort error object based on the order form compoennts appear in the form\n   */\n  sortErrors() {\n    const sortable = Object.entries(this.errorLinksObject).map(\n      ([key, value]) => [\n        key,\n        value,\n        (value as HTMLElement).getBoundingClientRect().y,\n      ],\n    );\n\n    sortable.sort(function (a, b) {\n      return a[2] - b[2];\n    });\n\n    const objSorted = {};\n    sortable.forEach(function (item) {\n      objSorted[item[0]] = item[1];\n    });\n\n    return objSorted;\n  }\n\n  /*\n   * Focus element on error link click with label visible\n   */\n  focusElement(id) {\n    const element = document.querySelector(id);\n\n    const target = `[for=${id.replace('#', '')}]`;\n\n    element.closest('form').querySelector(target)?.scrollIntoView();\n    element.focus();\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n    this.listenChanged();\n\n    // Format error-links string / object\n    if (this.errorLinks && typeof this.errorLinks == 'string') {\n      this.errorQueue = { ...JSON.parse(this.errorLinks) };\n    } else if (this.errorLinks && typeof this.errorLinks == 'object') {\n      this.errorQueue = { ...this.errorLinks };\n    }\n  }\n\n  render() {\n    const { heading, errorQueue, lang, hasSubmitted, errorLinks } = this;\n    return (\n      <Host>\n        <div\n          role=\"alert\"\n          tabindex=\"-1\"\n          ref={element => (this.shadowElement = element as HTMLElement)}\n          class={`gcds-error-summary ${\n            (hasSubmitted || errorLinks) && Object.keys(errorQueue).length > 0\n              ? 'gcds-show'\n              : ''\n          }`}\n        >\n          <gcds-heading tag=\"h2\" margin-top=\"0\" margin-bottom=\"225\">\n            {heading ?? i18n[lang].heading}\n          </gcds-heading>\n          <ol class=\"summary__errorlist\">\n            {(hasSubmitted || errorLinks) &&\n              Object.keys(errorQueue).length > 0 &&\n              Object.keys(errorQueue).map(key => {\n                return (\n                  <li class=\"summary__listitem\">\n                    <gcds-link\n                      size=\"regular\"\n                      href={errorLinks ? key : '#'}\n                      onClick={e => {\n                        e.preventDefault();\n                        errorLinks\n                          ? this.focusElement(key)\n                          : (errorQueue[key] as HTMLElement).focus();\n                      }}\n                    >\n                      {errorLinks ? errorQueue[key] : key}\n                    </gcds-link>\n                  </li>\n                );\n              })}\n          </ol>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"6MAAA,MAAMA,EAAO,CACXC,GAAI,CACFC,QAAS,sBACTC,WAAY,mCAEdC,GAAI,CACFF,QAAS,0BACTC,WAAY,kDCPhB,MAAME,EAAsB,ymC,MCuBfC,EAAgBC,EAAA,MAAAD,UAAAE,EAL7B,WAAAC,G,2JAkB2BC,KAAMC,OAAa,KAY5CD,KAAgBE,iBAAW,GAiDlBF,KAAUG,WAAW,GAErBH,KAAYI,aAAY,KAuJlC,CApNC,aAAAC,GACE,GAAIL,KAAKM,WAAY,CACnBN,KAAKC,OAAS,K,EAelB,iBAAAM,CAAkBC,GAChB,UAAWA,GAAiB,SAAU,CACpCR,KAAKM,WAAaG,KAAKC,MAAMF,E,MACxB,UAAWA,GAAiB,SAAU,CAC3CR,KAAKM,WAAaE,C,CAGpBR,KAAKG,WAAaH,KAAKM,WAGvB,GAAIN,KAAKC,OAAQ,CACfD,KAAKC,OAAS,K,EAoClB,aAAAU,CAAcC,GACZ,GAAIZ,KAAKC,QAAUW,EAAEC,OAAOC,QAAQ,SAAWd,KAAKe,GAAGD,QAAQ,QAAS,CACtEd,KAAKE,iBAAiBU,EAAEI,OAAOC,SAAWL,EAAEC,M,EAKhD,aAAAK,CAAcN,GACZ,GAAIZ,KAAKC,QAAUW,EAAEC,OAAOC,QAAQ,SAAWd,KAAKe,GAAGD,QAAQ,QAAS,CACtE,IAAK,MAAOK,EAAKC,KAAUC,OAAOC,QAAQtB,KAAKE,kBAAmB,CAChE,GAAIkB,GAASR,EAAEC,OAAQ,QACdb,KAAKE,iBAAiBiB,E,EAIjC,GAAInB,KAAKG,WAAY,CACnB,MAAMoB,EAAkBvB,KAAKwB,aAE7BxB,KAAKG,WAAkBkB,OAAAI,OAAA,GAAAF,E,GAM7B,cAAAG,CAAed,GACb,GAAIZ,KAAKC,QAAUW,EAAEC,OAAOC,QAAQ,SAAWd,KAAKe,GAAGD,QAAQ,QAAS,CACtEd,KAAKI,aAAe,KAGpBuB,YAAW,KACT,MAAMJ,EAAkBvB,KAAKwB,aAE7BxB,KAAKG,WAAkBkB,OAAAI,OAAA,GAAAF,GAGvBI,YAAW,KACT3B,KAAK4B,cAAcC,OAAO,GACzB,GAAG,GACL,I,EAOP,UAAAL,GACE,MAAMM,EAAWT,OAAOC,QAAQtB,KAAKE,kBAAkB6B,KACrD,EAAEZ,EAAKC,KAAW,CAChBD,EACAC,EACCA,EAAsBY,wBAAwBC,KAInDH,EAASI,MAAK,SAAUC,EAAGC,GACzB,OAAOD,EAAE,GAAKC,EAAE,EAClB,IAEA,MAAMC,EAAY,GAClBP,EAASQ,SAAQ,SAAUC,GACzBF,EAAUE,EAAK,IAAMA,EAAK,EAC5B,IAEA,OAAOF,C,CAMT,YAAAG,CAAaC,G,MACX,MAAMC,EAAUC,SAASC,cAAcH,GAEvC,MAAM5B,EAAS,QAAQ4B,EAAGI,QAAQ,IAAK,QAEvCC,EAAAJ,EAAQ5B,QAAQ,QAAQ8B,cAAc/B,MAAS,MAAAiC,SAAA,SAAAA,EAAAC,iBAC/CL,EAAQb,O,CAMV,UAAAmB,GACE,MAAMC,EAAW,IAAIC,kBAAiBC,IACpC,GAAIA,EAAU,GAAGC,UAAYpD,KAAKe,GAAGsC,KAAM,CACzCrD,KAAKqD,KAAOrD,KAAKe,GAAGsC,I,KAGxBJ,EAASK,QAAQtD,KAAKe,GAAIwC,E,CAG5B,uBAAMC,GAEJxD,KAAKqD,KAAOI,EAAezD,KAAKe,IAEhCf,KAAKgD,aACLhD,KAAKK,gBAGL,GAAIL,KAAKM,mBAAqBN,KAAKM,YAAc,SAAU,CACzDN,KAAKG,WAAkBkB,OAAAI,OAAA,GAAAhB,KAAKC,MAAMV,KAAKM,Y,MAClC,GAAIN,KAAKM,mBAAqBN,KAAKM,YAAc,SAAU,CAChEN,KAAKG,WAAUkB,OAAAI,OAAA,GAAQzB,KAAKM,W,EAIhC,MAAAoD,GACE,MAAMlE,QAAEA,EAAOW,WAAEA,EAAUkD,KAAEA,EAAIjD,aAAEA,EAAYE,WAAEA,GAAeN,KAChE,OACE2D,EAACC,EAAI,CAAAzC,IAAA,4CACHwC,EAAA,OAAAxC,IAAA,2CACE0C,KAAK,QACLC,SAAS,KACTC,IAAKrB,GAAY1C,KAAK4B,cAAgBc,EACtCsB,MAAO,uBACJ5D,GAAgBE,IAAee,OAAO4C,KAAK9D,GAAY+D,OAAS,EAC7D,YACA,MAGNP,EAAc,gBAAAxC,IAAA,2CAAAgD,IAAI,KAAI,aAAY,IAAkB,uBACjD3E,IAAO,MAAPA,SAAA,EAAAA,EAAW4E,EAAKf,GAAM7D,SAEzBmE,EAAI,MAAAxC,IAAA,2CAAA6C,MAAM,uBACN5D,GAAgBE,IAChBe,OAAO4C,KAAK9D,GAAY+D,OAAS,GACjC7C,OAAO4C,KAAK9D,GAAY4B,KAAIZ,GAExBwC,EAAA,MAAIK,MAAM,qBACRL,EACE,aAAAU,KAAK,UACLC,KAAMhE,EAAaa,EAAM,IACzBoD,QAAS3D,IACPA,EAAE4D,iBACFlE,EACIN,KAAKwC,aAAarB,GACjBhB,EAAWgB,GAAqBU,OAAO,GAG7CvB,EAAaH,EAAWgB,GAAOA,Q","ignoreList":[]}