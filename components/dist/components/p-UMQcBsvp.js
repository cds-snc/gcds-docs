const e={en:{valueMissing:"Enter information to continue.",typeMismatch:{email:"Enter a valid email address to continue. Use a standard format. Example: name@address.ca.",url:"Enter a URL in the specified format to continue."},patternMismatch:"Use the specified format to continue.",tooLong:"Enter {max} characters or less to continue. You've entered {current} characters.",tooShort:"Enter at least {min} characters to continue. You've entered {current} characters.",rangeUnderflow:"Enter a number that's {min} or more to continue.",rangeOverflow:"Enter a number that's {max} or less to continue.",stepMismatch:"Enter a number from the specified options to continue. The closest numbers to what you entered are {lower} and {upper}. ",badInput:"Enter a number to continue."},fr:{valueMissing:"Saisissez des renseignements pour continuer.",typeMismatch:{email:"Saisissez votre adresse courriel pour continuer. Utilisez un format standard. Exemple: nom@adresse.ca.",url:"Entrez une adresse Web en utilisant le format spécifié pour continuer."},patternMismatch:"Utilisez le format spécifié pour continuer.",tooLong:"Entrez {max} caractères ou moins pour continuer. Vous en avez présentement {current}.",tooShort:"Entrez au moins {min} caractères pour continuer. Vous en avez présentement {current}.",rangeUnderflow:"Entrez un nombre plus grand ou égal à {min} pour continuer.",rangeOverflow:"Entrez un nombre plus petit ou égal à {max} pour continuer.",stepMismatch:"Entrez un nombre parmi les options spécifiées pour continuer. Les nombres les plus proches de votre entrée sont {lower} et {upper}.",badInput:"Entrez un nombre pour continuer."}};const r=(e,r,t=[])=>{const n={};for(let r=0;r<e.attributes.length;r++){const t=e.attributes[r];if(t.name.includes("aria-")){n[t.name]=t.value}}t.forEach((t=>{if(e.hasAttribute(t)||r&&r.hasAttribute(t)){const s=e.getAttribute(t)||r.getAttribute(t);if(s!==null){n[t]=e.getAttribute(t)||r.getAttribute(t)}e.removeAttribute(t)}}));return n};const t=e=>{var r;let t="";if(!e.getAttribute("lang")){const s=(r=n("[lang]",e))===null||r===void 0?void 0:r.getAttribute("lang");if(s=="en"||!s){t="en"}else{t="fr"}}else if(e.getAttribute("lang")=="en"){t="en"}else{t="fr"}return t};const n=(e,r)=>{if(r){return r&&r!=document&&typeof window!="undefined"&&r!=window&&r.closest(e)||n(e,r.getRootNode().host)}return null};const s={attributes:true,attributeOldValue:true,attributeFilter:["lang"]};const o=(e,r,t)=>{const n=r.emit(t);if(n.defaultPrevented||e.defaultPrevented){e.preventDefault();return false}return true};const a=(e,r,t)=>{const n="Render error, please check required properties.";const s="Erreur de rendu, veuillez vérifier les propriétés requises.";const o=[...r];if(t&&t.length>0){for(const e of t){if(o.includes(e)){o.splice(o.indexOf(e),1)}}}console.error(`${e}: ${n} (${o}) | ${e}: ${s} (${o})`)};const u=(e,r,t,n=false)=>{if(t&&typeof t==="string"&&t.trim()===""||!t||t===""||n){if(!e.includes(r)){e.push(r)}}else if(e.includes(r)){e.splice(e.indexOf(r),1)}return e};const i=(e,r)=>{const t=e.filter((e=>r.includes(e)));return t.length>0?false:true};const c=(e,r)=>{const t=/^\d{4}-\d{2}-\d{2}$/;const n=/^\d{4}-\d{2}$/;let s="";if(t.test(e)){s="full"}else if(n.test(e)){s="compact"}else{return false}if(r&&s!=r){return false}const o=`${e}${s==="compact"?"-15":""}`;const[a,u,i]=o.split("-").map(Number);const c=[1,3,5,7,8,10,12];const f=[4,6,9,11];if(u<1||u>12){return false}else if(f.includes(u)&&(i<1||i>30)){return false}else if(c.includes(u)&&(i<1||i>31)){return false}else if(!l(a)&&u===2&&(i<1||i>28)){return false}else if(l(a)&&u===2&&(i<1||i>29)){return false}return true};function l(e){return!(e&3||!(e%25)&&e&15)}function f(e,r,t,n,s,o,a){if(!r.valid){e.errorMessage=r.reason[o];n.emit({message:`${t} - ${r.reason[o]}`});if(r.errors){return r.errors}}else{e.errorMessage="";s.emit()}return a}function m(r,t,n){switch(r){case"valueMissing":return e[t][r];case"typeMismatch":if(n.type==="url"||n.type==="email"){return e[t][r][n.type]}else{return e[t][r]}case"tooLong":return e[t][r].replace("{max}",n.maxlength||n.characterCount).replace("{current}",n.value.length);case"tooShort":return e[t][r].replace("{min}",n.minlength).replace("{current}",n.value.length);case"rangeUnderflow":return e[t][r].replace("{min}",n.min);case"rangeOverflow":return e[t][r].replace("{max}",n.max);case"stepMismatch":return e[t][r].replace("{lower}",Math.floor(Number(n.value)/Number(n.step))*Number(n.step)).replace("{upper}",Math.floor(Number(n.value)/Number(n.step))*Number(n.step)+Number(n.step));case"badInput":case"patternMismatch":default:return e[t][r]}}export{t as a,c as b,n as c,u as d,o as e,m as f,i as g,f as h,r as i,a as l,s as o};
//# sourceMappingURL=p-UMQcBsvp.js.map