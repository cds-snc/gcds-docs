{"version":3,"names":["I18N","en","button","remove","upload","summary","selected","unselected","removeFile","droppedError","fr","gcdsFileUploaderCss","GcdsFileUploader","__stencil_proxyCustomElement","HTMLElement","constructor","this","_validator","defaultValidator","required","disabled","value","validateOn","inheritedAttributes","onBlur","validate","gcdsBlur","emit","handleInput","e","customEvent","filesContainer","files","Array","from","target","map","file","push","addFilesToFormData","setTimeout","type","changeEvt","el","dispatchEvent","preventDefault","fileName","closest","childNodes","textContent","indexOf","splice","dt","DataTransfer","f","shadowElement","length","name","items","add","gcdsRemoveFile","gcdsChange","Event","bubbles","composed","formData","FormData","forEach","append","internals","setFormValue","validateDisabledSelect","watchFiles","validateErrorMessage","errorMessage","hasError","validateValidator","getValidator","validator","validateHasError","handleValidationResult","label","gcdsError","gcdsValid","lang","submitListener","formResetCallback","formStateRestoreCallback","state","handleDrop","droppedFiles","dataTransfer","focus","updateLang","observer","MutationObserver","mutations","oldValue","observe","observerConfig","componentWillLoad","assignLanguage","requiredValidator","inheritAttributes","render","accept","hint","multiple","uploaderId","attrsInput","Object","assign","attrsLabel","hintID","errorID","h","Host","key","class","messageId","onDrop","onDragOver","tabindex","onClick","click","i18n","id","onFocus","gcdsFocus","onInput","gcdsInput","onChange","ref","element","size"],"sources":["src/components/gcds-file-uploader/i18n/i18n.js","src/components/gcds-file-uploader/gcds-file-uploader.css?tag=gcds-file-uploader&encapsulation=shadow","src/components/gcds-file-uploader/gcds-file-uploader.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    button: {\n      remove: 'Remove',\n      upload: 'Choose file',\n    },\n    summary: {\n      selected: 'Currently selected:',\n      unselected: 'No file currently selected.',\n    },\n    removeFile: 'Remove file',\n    droppedError:\n      'One or more of the dropped files is unable to be uploaded. Accepted file types:',\n  },\n  fr: {\n    button: {\n      remove: 'Supprimer',\n      upload: 'Choisir un fichier',\n    },\n    summary: {\n      selected: 'Actuellement sélectionné:',\n      unselected: 'Aucun fichier actuellement sélectionné.',\n    },\n    removeFile: 'Supprimer le fichier',\n    droppedError:\n      'Un ou plusieurs fichiers déposés ne peuvent pas être téléversés. Types de fichiers acceptés :',\n  },\n};\n\nexport default I18N;\n","@layer reset, default, input, files, disabled, error, focus, active;\n\n@layer reset {\n  :host {\n    display: block;\n\n    .gcds-file-uploader-wrapper {\n      margin: 0;\n      padding: 0;\n      border: 0;\n\n      button {\n        font: inherit;\n        outline: 0;\n        cursor: pointer;\n      }\n    }\n  }\n}\n\n@layer default {\n  :host .gcds-file-uploader-wrapper {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    max-width: 90%;\n    font: var(--gcds-file-uploader-font-desktop);\n    color: var(--gcds-file-uploader-default-text);\n    transition: color ease-in-out 0.15s;\n\n    @media only screen and (width < 48em) {\n      font: var(--gcds-file-uploader-font-mobile);\n    }\n\n    button {\n      border-radius: var(--gcds-file-uploader-file-button-border-radius);\n      transition: all 0.15s ease-in-out;\n    }\n  }\n}\n\n@layer input {\n  :host .gcds-file-uploader-wrapper .file-uploader__input {\n    position: relative;\n    display: inline-block;\n\n    button {\n      font-weight: var(--gcds-file-uploader-button-font-weight);\n      margin: var(--gcds-file-uploader-button-margin);\n      padding: var(--gcds-file-uploader-button-padding);\n      background-color: var(--gcds-file-uploader-button-background);\n      color: var(--gcds-file-uploader-button-text);\n      border: var(--gcds-file-uploader-button-border-width) solid\n        var(--gcds-file-uploader-button-text);\n    }\n\n    input {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      opacity: 0;\n      cursor: pointer;\n\n      &::-webkit-file-upload-button {\n        cursor: pointer;\n      }\n    }\n\n    #file-uploader__summary {\n      visibility: hidden;\n      height: 0;\n      margin: 0;\n      overflow: hidden;\n    }\n  }\n}\n\n@layer files {\n  :host .gcds-file-uploader-wrapper .file-uploader__uploaded-file {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    max-width: var(--gcds-file-uploader-file-max-width);\n    padding: var(--gcds-file-uploader-file-padding);\n    border: var(--gcds-file-uploader-file-border-width) solid\n      var(--gcds-file-uploader-file-border-color);\n\n    &:not(:last-of-type) {\n      border-block-end: 0;\n    }\n\n    &:last-of-type {\n      margin: var(--gcds-file-uploader-button-margin);\n    }\n\n    gcds-text {\n      overflow: auto;\n\n      &::part(text) {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n    }\n\n    button {\n      display: flex;\n      align-items: center;\n      background: transparent;\n      border: 0;\n      color: var(--gcds-file-uploader-file-button-default-text);\n      font-weight: var(--gcds-file-uploader-button-font-weight);\n      margin: var(--gcds-file-uploader-file-button-margin);\n      padding: var(--gcds-file-uploader-file-button-padding);\n\n      &:not(:focus) span {\n        overflow: visible;\n        text-decoration: underline\n          var(--gcds-file-uploader-file-button-default-decoration-thickness);\n        text-underline-offset: var(\n          --gcds-file-uploader-file-button-underline-offset\n        );\n      }\n    }\n  }\n}\n\n@layer disabled {\n  :host .gcds-file-uploader-wrapper.gcds-disabled {\n    color: var(--gcds-file-uploader-disabled-text);\n\n    gcds-label {\n      --gcds-label-text: currentColor;\n    }\n\n    gcds-hint {\n      --gcds-hint-text: currentColor;\n    }\n\n    :is(.file-uploader__input, .file-uploader__uploaded-file) {\n      pointer-events: none;\n    }\n\n    .file-uploader__input button,\n    .file-uploader__uploaded-file,\n    .file-uploader__uploaded-file button {\n      color: inherit;\n    }\n\n    .file-uploader__input button {\n      background-color: var(--gcds-file-uploader-disabled-background);\n      border-color: currentColor;\n    }\n  }\n}\n\n@layer error {\n  :host .gcds-file-uploader-wrapper.gcds-error .file-uploader__uploaded-file {\n    border-color: var(--gcds-file-uploader-file-danger-border-color);\n  }\n}\n\n@layer hover {\n  @media (hover: hover) {\n    :host .gcds-file-uploader-wrapper {\n      .file-uploader__input:not(:focus-within):hover button {\n        background-color: var(--gcds-file-uploader-hover-button-background);\n      }\n\n      .file-uploader__uploaded-file button:not(:focus):hover {\n        color: var(--gcds-file-uploader-file-button-hover-text);\n\n        span {\n          text-decoration-thickness: var(\n            --gcds-file-uploader-file-button-hover-decoration-thickness\n          );\n        }\n      }\n    }\n  }\n}\n\n@layer focus {\n  :host .gcds-file-uploader-wrapper:focus-within {\n    .file-uploader__uploaded-file:focus-within {\n      border-color: var(--gcds-file-uploader-file-focus-border-color);\n    }\n\n    .file-uploader__input:focus-within button,\n    .file-uploader__uploaded-file button:focus {\n      background-color: var(--gcds-file-uploader-focus-button-background);\n      color: var(--gcds-file-uploader-focus-button-text);\n      outline: var(--gcds-file-uploader-button-outline-width) solid\n        var(--gcds-file-uploader-focus-button-background);\n      outline-offset: var(--gcds-file-uploader-focus-button-outline-offset);\n      border-color: var(--gcds-file-uploader-focus-button-background);\n    }\n  }\n}\n\n@layer active {\n  :host .gcds-file-uploader-wrapper {\n    .file-uploader__input:has(input:active) button {\n      background-color: var(--gcds-file-uploader-active-button-background);\n      color: var(--gcds-file-uploader-active-button-text);\n      border-color: var(--gcds-file-uploader-active-button-background);\n    }\n  }\n}\n","import {\n  Component,\n  Element,\n  Event as StencilEvent,\n  EventEmitter,\n  Prop,\n  Watch,\n  State,\n  Method,\n  Host,\n  h,\n  Listen,\n  AttachInternals,\n} from '@stencil/core';\nimport {\n  assignLanguage,\n  handleValidationResult,\n  inheritAttributes,\n  observerConfig,\n} from '../../utils/utils';\nimport {\n  Validator,\n  defaultValidator,\n  ValidatorEntry,\n  getValidator,\n  requiredValidator,\n} from '../../validators';\nimport i18n from './i18n/i18n';\n\n@Component({\n  tag: 'gcds-file-uploader',\n  styleUrl: 'gcds-file-uploader.css',\n  shadow: { delegatesFocus: true },\n  formAssociated: true,\n})\nexport class GcdsFileUploader {\n  @Element() el: HTMLElement;\n\n  @AttachInternals()\n  internals: ElementInternals;\n\n  private shadowElement?: HTMLInputElement;\n\n  _validator: Validator<unknown> = defaultValidator;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Id attribute for a file uploader element.\n   */\n  @Prop({ reflect: true, mutable: true }) uploaderId!: string;\n\n  /**\n   * Name attribute for file input element.\n   */\n  @Prop() name!: string;\n\n  /**\n   * Form field label.\n   */\n  @Prop({ reflect: true, mutable: false }) label!: string;\n\n  /**\n   * Specifies if a form field is required or not.\n   */\n  @Prop({ reflect: true, mutable: false }) required: boolean = false;\n\n  /**\n   * Specifies if a file uploader element is disabled or not.\n   */\n  @Prop({ reflect: true, mutable: true }) disabled: boolean = false;\n\n  @Watch('disabled')\n  validateDisabledSelect() {\n    if (this.required) {\n      this.disabled = false;\n    }\n  }\n\n  /**\n   * Value for a file uploader element.\n   */\n  @Prop({ reflect: true, mutable: true }) value: string[] = [];\n\n  /**\n   * Defines the file types the file uploader accepts.\n   */\n  @Prop({ reflect: true, mutable: false }) accept: string;\n\n  /**\n   * Boolean that specifies if the user is allowed to select more than one file.\n   */\n  @Prop({ reflect: true, mutable: false }) multiple: boolean;\n\n  /**\n   * FileList of uploaded files to input\n   */\n  @Prop({ mutable: true }) files: FileList;\n  @Watch('files')\n  watchFiles() {\n    const filesContainer: string[] = [];\n    const files = Array.from(this.files);\n\n    files.map(file => {\n      filesContainer.push(file['name']);\n    });\n\n    this.addFilesToFormData(files);\n    this.value = [...filesContainer];\n  }\n\n  /**\n   * Error message for an invalid file uploader element.\n   */\n  @Prop({ reflect: true, mutable: true }) errorMessage: string;\n  @Watch('errorMessage')\n  validateErrorMessage() {\n    if (this.disabled) {\n      this.errorMessage = '';\n    } else if (!this.hasError && this.errorMessage) {\n      this.hasError = true;\n    } else if (this.errorMessage == '') {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Hint displayed below the label.\n   */\n  @Prop({ reflect: true, mutable: false }) hint: string;\n\n  /**\n   * Array of validators\n   */\n  @Prop({ mutable: true }) validator: Array<\n    string | ValidatorEntry | Validator<string | number | FileList>\n  >;\n\n  @Watch('validator')\n  validateValidator() {\n    this._validator = getValidator(this.validator);\n  }\n\n  /**\n   * Set event to call validator\n   */\n  @Prop({ mutable: true }) validateOn: 'blur' | 'submit' | 'other' = 'blur';\n\n  /**\n   * Specifies if the file uploader is invalid.\n   */\n  @State() hasError: boolean;\n  @Watch('hasError')\n  validateHasError() {\n    if (this.disabled) {\n      this.hasError = false;\n    }\n  }\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  /**\n   * Language of rendered component\n   */\n  @State() lang: string;\n\n  /**\n   * Events\n   */\n\n  /**\n   * Emitted when the uploader has focus.\n   */\n  @StencilEvent() gcdsFocus!: EventEmitter<void>;\n\n  /**\n   * Emitted when the uploader loses focus.\n   */\n  @StencilEvent() gcdsBlur!: EventEmitter<void>;\n\n  private onBlur = () => {\n    if (this.validateOn == 'blur') {\n      this.validate();\n    }\n\n    this.gcdsBlur.emit();\n  };\n\n  /**\n   * Emitted when the user has made a file selection.\n   */\n  @StencilEvent() gcdsChange: EventEmitter;\n\n  /**\n   * Emitted when the user has uploaded a file.\n   */\n  @StencilEvent() gcdsInput: EventEmitter;\n\n  private handleInput = (e, customEvent) => {\n    const filesContainer: string[] = [];\n    const files = Array.from(e.target.files);\n    this.files = e.target.files;\n\n    files.map(file => {\n      filesContainer.push(file['name']);\n    });\n\n    this.addFilesToFormData(files);\n\n    this.value = [...filesContainer];\n\n    // Validate since the input loses focus when dialog opens\n    if (this.validateOn == 'blur') {\n      setTimeout(() => {\n        this.validate();\n      }, 100);\n    }\n\n    if (e.type === 'change') {\n      const changeEvt = new e.constructor(e.type, e);\n      this.el.dispatchEvent(changeEvt);\n    }\n\n    customEvent.emit(this.value);\n  };\n\n  /**\n   * Remove file and update value.\n   */\n  @StencilEvent() gcdsRemoveFile: EventEmitter;\n  removeFile = e => {\n    e.preventDefault();\n    const fileName = e.target.closest('.file-uploader__uploaded-file')\n      .childNodes[0].textContent;\n\n    const filesContainer = this.value;\n    const file = filesContainer.indexOf(fileName);\n\n    if (file > -1) {\n      filesContainer.splice(file, 1);\n\n      // Add additional logic to remove file from input\n      const dt = new DataTransfer();\n      for (let f = 0; f < this.shadowElement.files.length; f++) {\n        if (this.shadowElement.files[f].name != fileName) {\n          dt.items.add(this.shadowElement.files[f]);\n        }\n      }\n\n      this.shadowElement.files = dt.files;\n      this.files = dt.files;\n      this.addFilesToFormData(Array.from(this.shadowElement.files));\n    }\n\n    this.value = [...filesContainer];\n    this.gcdsRemoveFile.emit(this.value);\n    this.gcdsChange.emit(this.value);\n    this.el.dispatchEvent(\n      new Event('change', { bubbles: true, composed: true }),\n    );\n  };\n\n  /**\n   * Call any active validators\n   */\n  @Method()\n  async validate() {\n    handleValidationResult(\n      this.el as HTMLGcdsFileUploaderElement,\n      this._validator.validate(this.shadowElement.files),\n      this.label,\n      this.gcdsError,\n      this.gcdsValid,\n      this.lang,\n    );\n  }\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @StencilEvent() gcdsError!: EventEmitter<object>;\n\n  /**\n   * Emitted when the input has a validation error.\n   */\n  @StencilEvent() gcdsValid!: EventEmitter<object>;\n\n  @Listen('submit', { target: 'document' })\n  submitListener(e) {\n    if (e.target == this.el.closest('form')) {\n      if (this.validateOn && this.validateOn != 'other') {\n        this.validate();\n      }\n\n      if (this.hasError && this.validateOn != 'other') {\n        e.preventDefault();\n      }\n    }\n  }\n\n  /*\n   * Form internal functions\n   */\n  formResetCallback() {\n    this.internals.setFormValue('');\n    this.value = [];\n  }\n\n  formStateRestoreCallback(state) {\n    this.internals.setFormValue(state);\n    this.value = state;\n  }\n\n  /*\n   * Set form data for internals\n   */\n  private addFilesToFormData = files => {\n    const formData = new FormData();\n\n    if (files.length > 0) {\n      files.forEach(file => {\n        formData.append(this.name, file, file.name);\n      });\n    }\n\n    this.internals.setFormValue(formData);\n  };\n\n  /*\n   * Handle drop event on file uploader\n   */\n  private handleDrop(e) {\n    e.preventDefault();\n\n    const droppedFiles = e.dataTransfer.files;\n\n    if (droppedFiles && droppedFiles.length > 0) {\n      const dt = new DataTransfer();\n      for (const file of droppedFiles) {\n        dt.items.add(file);\n      }\n\n      if (dt.files.length > 0) {\n        this.shadowElement.files = dt.files;\n        this.files = dt.files;\n      }\n\n      this.gcdsChange.emit(this.value);\n      this.el.dispatchEvent(\n        new Event('change', { bubbles: true, composed: true }),\n      );\n    }\n\n    // Focus file input after drop\n    this.shadowElement.focus();\n  }\n\n  /*\n   * Observe lang attribute change\n   */\n  updateLang() {\n    const observer = new MutationObserver(mutations => {\n      if (mutations[0].oldValue != this.el.lang) {\n        this.lang = this.el.lang;\n      }\n    });\n    observer.observe(this.el, observerConfig);\n  }\n\n  async componentWillLoad() {\n    // Define lang attribute\n    this.lang = assignLanguage(this.el);\n\n    this.updateLang();\n\n    this.validateDisabledSelect();\n    this.validateHasError();\n    this.validateErrorMessage();\n\n    // Assign required validator if needed\n    requiredValidator(this.el, 'file');\n\n    this.validateValidator();\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n  }\n\n  render() {\n    const {\n      accept,\n      disabled,\n      errorMessage,\n      hasError,\n      hint,\n      label,\n      lang,\n      multiple,\n      name,\n      required,\n      uploaderId,\n      value,\n      inheritedAttributes,\n    } = this;\n\n    const attrsInput = {\n      accept,\n      disabled,\n      multiple,\n      name,\n      required,\n      value,\n      ...inheritedAttributes,\n      'aria-describedby': `${\n        inheritedAttributes['aria-describedby']\n          ? `${inheritedAttributes['aria-describedby']} `\n          : ''\n      }file-uploader__summary`,\n    };\n\n    const attrsLabel = {\n      label,\n      required,\n    };\n\n    if (hint || errorMessage) {\n      const hintID = hint ? `hint-${uploaderId} ` : '';\n      const errorID = errorMessage ? `error-message-${uploaderId} ` : '';\n      attrsInput['aria-describedby'] =\n        `${hintID}${errorID}${attrsInput['aria-describedby']}`;\n    }\n\n    return (\n      <Host>\n        <div\n          class={`gcds-file-uploader-wrapper ${\n            disabled ? 'gcds-disabled' : ''\n          } ${hasError ? 'gcds-error' : ''}`}\n        >\n          <gcds-label {...attrsLabel} label-for={uploaderId} lang={lang} />\n\n          {hint ? <gcds-hint hint-id={uploaderId}>{hint}</gcds-hint> : null}\n\n          {errorMessage ? (\n            <gcds-error-message messageId={uploaderId}>\n              {errorMessage}\n            </gcds-error-message>\n          ) : null}\n\n          <div\n            class={`file-uploader__input ${\n              value.length > 0 ? 'uploaded-files' : ''\n            }`}\n            onDrop={e => this.handleDrop(e)}\n            onDragOver={e => e.preventDefault()}\n          >\n            <button\n              type=\"button\"\n              tabindex=\"-1\"\n              onClick={() => this.shadowElement.click()}\n            >\n              {i18n[lang].button.upload}\n            </button>\n            <input\n              type=\"file\"\n              id={uploaderId}\n              {...attrsInput}\n              onBlur={() => this.onBlur()}\n              onFocus={() => this.gcdsFocus.emit()}\n              onInput={e => this.handleInput(e, this.gcdsInput)}\n              onChange={e => this.handleInput(e, this.gcdsChange)}\n              aria-invalid={hasError ? 'true' : 'false'}\n              ref={element =>\n                (this.shadowElement = element as HTMLInputElement)\n              }\n            />\n            {value.length > 0 ? (\n              <gcds-sr-only id=\"file-uploader__summary\">\n                <span>{i18n[lang].summary.selected} </span>\n                {value.map(file => (\n                  <span>{file} </span>\n                ))}\n              </gcds-sr-only>\n            ) : (\n              <gcds-sr-only id=\"file-uploader__summary\">\n                {i18n[lang].summary.unselected}\n              </gcds-sr-only>\n            )}\n          </div>\n\n          {value.length > 0\n            ? value.map(file => (\n                <div\n                  class=\"file-uploader__uploaded-file\"\n                  aria-label={`${i18n[lang].removeFile} ${file}.`}\n                >\n                  <gcds-text margin-bottom=\"0\">{file}</gcds-text>\n                  <button onClick={e => this.removeFile(e)}>\n                    <span>{i18n[lang].button.remove}</span>\n                    <gcds-icon name=\"close\" size=\"text\" margin-left=\"150\" />\n                  </button>\n                </div>\n              ))\n            : null}\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}