{"version":3,"names":["defaultValidator","validate","valid","reason","en","fr","combineValidators","v1","v2","x","res1","res2","errorMessage","requiredValidator","element","type","subtype","required","validator","unshift","emailPattern","requiredField","value","trim","requiredEmailField","toLowerCase","match","requiredFileInput","length","requiredSelectField","dateInputErrorMessage","all","missingmonth","missingyear","missingday","missingmonthday","missingmonthyear","missingdayyear","invalidyearlength","invalidyear","invalidday","requiredDateInput","date","isValidDate","splitDate","split","dateObject","day","month","year","format","error","getDateInputError","dateValues","errorResponse","errors","requiredRadio","requiredCheckboxGroup","requiredCheckboxSingle","ValidatorsName","getValidator","list","map","v","validatorFactory","name","reduce","options"],"sources":["src/validators/validator.ts","src/validators/input-validators/input-validators.ts","src/validators/validator.factory.ts"],"sourcesContent":["export interface ValidatorOld<A> {\n  validate: (x: A) => any;\n  errorMessage?: object;\n}\n\nexport interface ValidatorReturn {\n  valid: boolean;\n  reason: {\n    en: string;\n    fr: string;\n  };\n  errors?: object;\n}\n\nexport interface Validator<A> {\n  validate: (x: A) => ValidatorReturn;\n}\n\nexport interface ValidatorEntry {\n  name: string;\n  options?: unknown;\n}\n\nexport interface GcdsErrorInterface {\n  id: string;\n  message: string;\n}\n\nexport const defaultValidator: Validator<any> = {\n  validate: () => {\n    return {\n      valid: true,\n      reason: {\n        en: '',\n        fr: '',\n      },\n    };\n  },\n};\n\nexport function combineValidators<A>(\n  v1: Validator<A> | ValidatorOld<A>,\n  v2: Validator<A> | ValidatorOld<A>,\n): Validator<A> {\n  return {\n    validate: (x: A) => {\n      const res1 = v1.validate(x);\n      const res2 = v2.validate(x);\n\n      if (\n        (typeof res1 === 'object' && !res1.valid) ||\n        (typeof res1 === 'boolean' && !res1)\n      ) {\n        return typeof res1 === 'object'\n          ? res1\n          : { valid: res1, reason: (v1 as ValidatorOld<A>).errorMessage };\n      } else if (\n        (typeof res2 === 'object' && !res2.valid) ||\n        (typeof res2 === 'boolean' && !res2)\n      ) {\n        return typeof res2 === 'object'\n          ? res2\n          : { valid: res2, reason: (v2 as ValidatorOld<A>).errorMessage };\n      } else {\n        return {\n          valid: true,\n          reason: {\n            en: '',\n            fr: '',\n          },\n        };\n      }\n    },\n  };\n}\n\nexport function requiredValidator(element, type, subtype?) {\n  if (element.required) {\n    switch (type) {\n      // Components all validate the \"value\" property\n      case 'input':\n        switch (subtype) {\n          case 'email':\n            if (element.validator) {\n              element.validator.unshift('requiredEmailField');\n            } else {\n              element.validator = ['requiredEmailField'];\n            }\n            break;\n          default:\n            if (element.validator) {\n              element.validator.unshift('requiredField');\n            } else {\n              element.validator = ['requiredField'];\n            }\n            break;\n        }\n        break;\n      case 'select':\n        if (element.validator) {\n          element.validator.unshift('requiredSelectField');\n        } else {\n          element.validator = ['requiredSelectField'];\n        }\n        break;\n      case 'textarea':\n        if (element.validator) {\n          element.validator.unshift('requiredField');\n        } else {\n          element.validator = ['requiredField'];\n        }\n        break;\n      case 'file':\n        if (element.validator) {\n          element.validator.unshift('requiredFileInput');\n        } else {\n          element.validator = ['requiredFileInput'];\n        }\n        break;\n\n      case 'date-input':\n        if (element.validator) {\n          element.validator.unshift('requiredDateInput');\n        } else {\n          element.validator = ['requiredDateInput'];\n        }\n        break;\n      case 'radio':\n        if (element.validator) {\n          element.validator.unshift('requiredRadio');\n        } else {\n          element.validator = ['requiredRadio'];\n        }\n        break;\n      case 'checkboxGroup':\n        if (element.validator) {\n          element.validator.unshift('requiredCheckboxGroup');\n        } else {\n          element.validator = ['requiredCheckboxGroup'];\n        }\n        break;\n      case 'checkboxSingle':\n        if (element.validator) {\n          element.validator.unshift('requiredCheckboxSingle');\n        } else {\n          element.validator = ['requiredCheckboxSingle'];\n        }\n        break;\n    }\n  }\n}\n\n/*\nExample of parameter validator\n\nexport function getLengthValidator(min: number, max: number): Validator<string> {\n    // Create errorMessage object\n    let errorMessage = {};\n    if (min && max) {\n        errorMessage[\"en\"] = `You must enter between ${min} and ${max} characters`;\n        errorMessage[\"fr\"] = `French You must enter between ${min} and ${max} characters`;\n    } else if (min) {\n        errorMessage[\"en\"] = `You must enter at least ${min} characters`;\n        errorMessage[\"fr\"] = `French You must enter at least ${min} characters`;\n    } else if (max) {\n        errorMessage[\"en\"] = `You must enter less than ${max} characters`;\n        errorMessage[\"fr\"] = `French You must enter less than ${max} characters`;\n    }\n    return {\n        validate: (value: string) => {\n            value = value || '';\n            if (min && max) {\n                return min <= value.length && value.length <= max;\n            }\n            if (min) {\n                return min <= value.length;\n            }\n            if (max) {\n                return value.length <= max;\n            }\n            return true;\n        },\n        errorMessage\n    };\n}\n*/\n","import { Validator } from '../validator';\nimport { isValidDate } from '../../utils/utils';\n\nconst emailPattern =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const requiredField: Validator<string> = {\n  validate: (value: string) => {\n    return {\n      valid: value != null && value.trim() != '',\n      reason: {\n        en: 'Enter information to continue.',\n        fr: 'Saisissez des renseignements pour continuer.',\n      },\n    };\n  },\n};\n\nexport const requiredEmailField: Validator<string> = {\n  validate: (value: string) => {\n    return {\n      valid:\n        value != null &&\n        value.trim() != '' &&\n        (value.toLowerCase().match(emailPattern) ? true : false),\n      reason: {\n        en: 'Enter a valid email address to continue. Use a standard format. Example: name@address.ca.',\n        fr: 'Saisissez votre adresse courriel pour continuer. Utilisez un format standard. Exemple: nom@adresse.ca.',\n      },\n    };\n  },\n};\n\nexport const requiredFileInput: Validator<FileList> = {\n  validate: (value: FileList) => {\n    return {\n      valid: value.length > 0,\n      reason: {\n        en: 'You must upload a file to continue.',\n        fr: 'Vous devez téléverser un fichier pour continuer.',\n      },\n    };\n  },\n};\n\nexport const requiredSelectField: Validator<string> = {\n  validate: (value: string) => {\n    return {\n      valid: value != null && value.trim() != '',\n      reason: {\n        en: 'Choose an option to continue.',\n        fr: 'Choisissez une option pour continuer.',\n      },\n    };\n  },\n};\n\n/*\n * Date input validators\n */\nexport const dateInputErrorMessage = {\n  en: {\n    all: 'Enter the date.',\n    missingmonth: 'Select the month.',\n    missingyear: 'Enter the year.',\n    missingday: 'Enter the day.',\n    missingmonthday: 'Select the month and enter the day.',\n    missingmonthyear: 'Select the month and enter the year.',\n    missingdayyear: 'Enter the day and year.',\n    invalidyearlength: 'Year must be 4 digits.',\n    invalidyear: 'Enter a valid year.',\n    invalidday: 'Enter a valid day.',\n  },\n  fr: {\n    all: 'Saisissez la date.',\n    missingmonth: 'Sélectionnez un mois.',\n    missingyear: \"Saisissez l'année.\",\n    missingday: 'Saisissez le jour.',\n    missingmonthday: 'Saisissez le jour et sélectionnez un mois.',\n    missingmonthyear: \"Sélectionnez un mois et saisissez l'année.\",\n    missingdayyear: \"Saisissez le jour et l'année.\",\n    invalidyearlength: \"L'année doit inclure 4 chiffres.\",\n    invalidyear: 'Entrez une année valide.',\n    invalidday: 'Saisissez un jour valide.',\n  },\n};\n\nexport const requiredDateInput: Validator<string> = {\n  validate: (date: string) => {\n    if (isValidDate(date)) {\n      return {\n        valid: true,\n        reason: {\n          en: '',\n          fr: '',\n        },\n      };\n    }\n\n    const splitDate = date.split('-');\n    const dateObject = {\n      day: splitDate[2],\n      month: splitDate[1],\n      year: splitDate[0],\n    };\n\n    const format = splitDate.length === 3 ? 'full' : 'compact';\n\n    const error = getDateInputError(dateObject, format);\n\n    return error;\n  },\n};\n\nconst getDateInputError = (dateValues, format) => {\n  const { day, month, year } = dateValues;\n\n  const errorResponse = {\n    valid: false,\n    errors: {\n      day: false,\n      month: false,\n      year: false,\n    },\n    reason: {\n      en: '',\n      fr: '',\n    },\n  };\n\n  // No values set\n  if (!day && !month && !year) {\n    errorResponse.errors.day = true;\n    errorResponse.errors.month = true;\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.all;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.all;\n\n    // No day set\n  } else if (!day && month && year) {\n    errorResponse.errors.day = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingday;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingday;\n\n    // No month set\n  } else if (\n    (day && !month && year) ||\n    (!day && !month && year && format === 'compact')\n  ) {\n    errorResponse.errors.month = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingmonth;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingmonth;\n\n    // No year set\n  } else if (\n    (day && month && !year) ||\n    (!day && month && !year && format === 'compact')\n  ) {\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingyear;\n\n    // No day and month set\n  } else if (!day && !month && year) {\n    errorResponse.errors.day = true;\n    errorResponse.errors.month = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingmonthday;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingmonthday;\n\n    // No day and year set\n  } else if (!day && month && !year) {\n    errorResponse.errors.day = true;\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingdayyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingdayyear;\n\n    // No month and year set\n  } else if (day && !month && !year) {\n    errorResponse.errors.year = true;\n    errorResponse.errors.month = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.missingmonthyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.missingmonthyear;\n\n    // Year is formatted incorrectly\n  } else if (year.length != 4) {\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.invalidyearlength;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.invalidyearlength;\n\n    // Year format\n  } else if (year < 0 || year > 9999) {\n    errorResponse.errors.year = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.invalidyear;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.invalidyear;\n\n    // Invalid day\n  } else {\n    errorResponse.errors.day = true;\n    errorResponse.reason.en = dateInputErrorMessage.en.invalidday;\n    errorResponse.reason.fr = dateInputErrorMessage.fr.invalidday;\n  }\n\n  return errorResponse;\n};\n\nexport const requiredRadio: Validator<string> = {\n  validate: (value: string) => {\n    return {\n      valid: value != null && value != '',\n      reason: {\n        en: 'Choose an option to continue.',\n        fr: 'Choisissez une option pour continuer.',\n      },\n    };\n  },\n};\n\nexport const requiredCheckboxGroup: Validator<Array<string>> = {\n  validate: (value: Array<string>) => {\n    return {\n      valid: value.length > 0,\n      reason: {\n        en: 'Choose an option to continue.',\n        fr: 'Choisissez une option pour continuer.',\n      },\n    };\n  },\n};\n\nexport const requiredCheckboxSingle: Validator<Array<string>> = {\n  validate: (value: Array<string>) => {\n    return {\n      valid: value.length > 0,\n      reason: {\n        en: 'You must check the box to continue.',\n        fr: 'Vous devez cocher la case pour continuer.',\n      },\n    };\n  },\n};\n","import {\n  Validator,\n  ValidatorEntry,\n  defaultValidator,\n  combineValidators,\n} from './validator';\nimport {\n  requiredField,\n  requiredEmailField,\n  requiredFileInput,\n  requiredSelectField,\n  requiredDateInput,\n  requiredRadio,\n  requiredCheckboxGroup,\n  requiredCheckboxSingle,\n} from './input-validators/input-validators';\n\nexport enum ValidatorsName {\n  requiredField = 'requiredField',\n  requiredEmailField = 'requiredEmailField',\n  requiredCheck = 'requiredCheck',\n  requiredFileInput = 'requiredFileInput',\n  requiredSelectField = 'requiredSelectField',\n  requiredDateInput = 'requiredDateInput',\n  requiredRadio = 'requiredRadio',\n  requiredCheckboxGroup = 'requiredCheckboxGroup',\n  requiredCheckboxSingle = 'requiredCheckboxSingle',\n}\n\nexport function getValidator<A>(\n  list: Array<string | ValidatorEntry | Validator<A>>,\n): Validator<A> {\n  return (list || [])\n    .map(v => {\n      if (typeof v === 'string') {\n        return validatorFactory(v, null);\n      } else if (v && (v as any).name) {\n        v = v as ValidatorEntry;\n        return validatorFactory(v.name, v.options);\n      } else {\n        return v as Validator<A>;\n      }\n    })\n    .reduce(combineValidators, defaultValidator);\n}\n\nexport function validatorFactory(name: string, options: any): Validator<any> {\n  options ? options : {};\n  switch (name) {\n    case ValidatorsName.requiredField:\n      return requiredField;\n    case ValidatorsName.requiredEmailField:\n      return requiredEmailField;\n    case ValidatorsName.requiredSelectField:\n      return requiredSelectField;\n    case ValidatorsName.requiredDateInput:\n      return requiredDateInput;\n    case ValidatorsName.requiredFileInput:\n      return requiredFileInput;\n    case ValidatorsName.requiredRadio:\n      return requiredRadio;\n    case ValidatorsName.requiredCheckboxGroup:\n      return requiredCheckboxGroup;\n    case ValidatorsName.requiredCheckboxSingle:\n      return requiredCheckboxSingle;\n    default:\n      return defaultValidator;\n  }\n}\n"],"mappings":"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","ignoreList":[]}