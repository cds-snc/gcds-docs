{"version":3,"names":["async","handleKeyDownNav","event","nav","queue","key","currentIndex","indexOf","document","activeElement","shadowRoot","preventDefault","length","focusNavItem","nodeName","hasAttribute","toggleNavGroup","parentNode","getNavSize","shiftKey","index","focusLink","focusTrigger","group","navGroup","toggleNav","updateNavItemQueue","setTimeout","children","getNavItems","el","indexedItems","Array","from","forEach","item","open","groupChildren","splice"],"sources":["src/utils/menus/utils.ts"],"sourcesContent":["/**\n * Handle event for keyboard control of nav\n * @param {Event} event\n * @param {Element} nav\n * @param {any[]} queue\n */\nexport async function handleKeyDownNav(event, nav, queue) {\n  const key = event.key;\n  const currentIndex = queue.indexOf(\n    document.activeElement == nav\n      ? document.activeElement.shadowRoot.activeElement\n      : document.activeElement,\n  );\n  const activeElement = queue[currentIndex];\n\n  switch (key) {\n    // Down arrow\n    case 'ArrowDown':\n      event.preventDefault();\n      // If on last item, jump to first item\n      if (currentIndex + 1 > queue.length - 1) {\n        await focusNavItem(0, queue);\n        // Jump to next item\n      } else {\n        await focusNavItem(currentIndex + 1, queue);\n      }\n      break;\n\n    // Up arrow\n    case 'ArrowUp':\n      event.preventDefault();\n      // If on first item, jump to last item\n      if (currentIndex - 1 < 0) {\n        await focusNavItem(queue.length - 1, queue);\n        // Jump to previous item\n      } else {\n        await focusNavItem(currentIndex - 1, queue);\n      }\n      break;\n\n    // Right arrow\n    case 'ArrowRight':\n      event.preventDefault();\n      if (\n        activeElement.nodeName == 'GCDS-NAV-GROUP' &&\n        !activeElement.hasAttribute('open')\n      ) {\n        await toggleNavGroup(activeElement, nav);\n      }\n      break;\n\n    // Left arrow || ESC\n    case 'ArrowLeft':\n    case 'Escape':\n      event.preventDefault();\n      // Currently focusing a gcds-nav-group\n      if (\n        activeElement.nodeName == 'GCDS-NAV-GROUP' &&\n        activeElement.hasAttribute('open')\n      ) {\n        await toggleNavGroup(activeElement, nav);\n        // Currently focus within a gcds-nav-group\n      } else if (activeElement.parentNode.nodeName == 'GCDS-NAV-GROUP') {\n        await toggleNavGroup(activeElement.parentNode, nav);\n      } else if (\n        activeElement.parentNode == nav &&\n        (await (\n          activeElement.parentNode as HTMLGcdsTopNavElement\n        ).getNavSize()) == 'mobile'\n      ) {\n        await toggleNavGroup(queue[queue.length - 1], nav);\n      }\n      break;\n\n    // Tab - special logic on mobile screen size\n    case 'Tab':\n      if ((await nav.getNavSize()) == 'mobile') {\n        // shift + tab\n        if (event.shiftKey) {\n          if (\n            currentIndex == queue.length - 1 &&\n            activeElement.hasAttribute('open')\n          ) {\n            event.preventDefault();\n            await focusNavItem(queue.length - 2, queue);\n          }\n        } else {\n          // tab\n          if (currentIndex == queue.length - 2) {\n            event.preventDefault();\n            await focusNavItem(queue.length - 1, queue);\n          }\n        }\n      }\n      break;\n\n    // ENTER || SPACEBAR\n    case 'Enter':\n    case ' ':\n      if (activeElement.nodeName == 'GCDS-NAV-GROUP') {\n        event.preventDefault();\n        await toggleNavGroup(activeElement, nav);\n      }\n      break;\n  }\n}\n\n/**\n * Focus nav element\n * @param {Number} index\n * @param {any[]} queue\n */\nasync function focusNavItem(index, queue) {\n  if (queue[index].nodeName == 'GCDS-NAV-LINK') {\n    (queue[index] as HTMLGcdsNavLinkElement).focusLink();\n  } else if (queue[index].nodeName == 'GCDS-NAV-GROUP') {\n    (queue[index] as HTMLGcdsNavGroupElement).focusTrigger();\n  }\n}\n\n/**\n *\n * @param {Element} group\n * @param {Element} nav\n */\nasync function toggleNavGroup(group, nav) {\n  const navGroup = group as HTMLGcdsNavGroupElement;\n\n  // Close nav group\n  if (navGroup.hasAttribute('open')) {\n    await navGroup.toggleNav();\n    navGroup.focusTrigger();\n\n    nav.updateNavItemQueue(nav);\n\n    // Open nav group\n  } else {\n    await navGroup.toggleNav();\n\n    setTimeout(async () => {\n      await focusNavItem(\n        0,\n        document.activeElement == nav ? nav.children : navGroup.children,\n      );\n    }, 10);\n\n    nav.updateNavItemQueue(nav);\n  }\n}\n\n/**\n * Return array of child elements of passed element\n * @param {Element} el\n * @return {any[]} indexedItems\n */\nexport async function getNavItems(el) {\n  const indexedItems: Array<any> = Array.from(el.children);\n\n  indexedItems.forEach(async item => {\n    if (\n      item.nodeName == 'GCDS-NAV-GROUP' &&\n      (item as HTMLGcdsNavGroupElement).open\n    ) {\n      const groupChildren = await getNavItems(item);\n      indexedItems.splice(indexedItems.indexOf(item) + 1, 0, ...groupChildren);\n    }\n  });\n\n  return indexedItems;\n}\n"],"mappings":"AAMOA,eAAeC,EAAiBC,EAAOC,EAAKC,GACjD,MAAMC,EAAMH,EAAMG,IAClB,MAAMC,EAAeF,EAAMG,QACzBC,SAASC,eAAiBN,EACtBK,SAASC,cAAcC,WAAWD,cAClCD,SAASC,eAEf,MAAMA,EAAgBL,EAAME,GAE5B,OAAQD,GAEN,IAAK,YACHH,EAAMS,iBAEN,GAAIL,EAAe,EAAIF,EAAMQ,OAAS,EAAG,OACjCC,EAAa,EAAGT,E,KAEjB,OACCS,EAAaP,EAAe,EAAGF,E,CAEvC,MAGF,IAAK,UACHF,EAAMS,iBAEN,GAAIL,EAAe,EAAI,EAAG,OAClBO,EAAaT,EAAMQ,OAAS,EAAGR,E,KAEhC,OACCS,EAAaP,EAAe,EAAGF,E,CAEvC,MAGF,IAAK,aACHF,EAAMS,iBACN,GACEF,EAAcK,UAAY,mBACzBL,EAAcM,aAAa,QAC5B,OACMC,EAAeP,EAAeN,E,CAEtC,MAGF,IAAK,YACL,IAAK,SACHD,EAAMS,iBAEN,GACEF,EAAcK,UAAY,kBAC1BL,EAAcM,aAAa,QAC3B,OACMC,EAAeP,EAAeN,E,MAE/B,GAAIM,EAAcQ,WAAWH,UAAY,iBAAkB,OAC1DE,EAAeP,EAAcQ,WAAYd,E,MAC1C,GACLM,EAAcQ,YAAcd,SAE1BM,EAAcQ,WACdC,cAAiB,SACnB,OACMF,EAAeZ,EAAMA,EAAMQ,OAAS,GAAIT,E,CAEhD,MAGF,IAAK,MACH,SAAWA,EAAIe,cAAiB,SAAU,CAExC,GAAIhB,EAAMiB,SAAU,CAClB,GACEb,GAAgBF,EAAMQ,OAAS,GAC/BH,EAAcM,aAAa,QAC3B,CACAb,EAAMS,uBACAE,EAAaT,EAAMQ,OAAS,EAAGR,E,MAElC,CAEL,GAAIE,GAAgBF,EAAMQ,OAAS,EAAG,CACpCV,EAAMS,uBACAE,EAAaT,EAAMQ,OAAS,EAAGR,E,GAI3C,MAGF,IAAK,QACL,IAAK,IACH,GAAIK,EAAcK,UAAY,iBAAkB,CAC9CZ,EAAMS,uBACAK,EAAeP,EAAeN,E,CAEtC,MAEN,CAOAH,eAAea,EAAaO,EAAOhB,GACjC,GAAIA,EAAMgB,GAAON,UAAY,gBAAiB,CAC3CV,EAAMgB,GAAkCC,W,MACpC,GAAIjB,EAAMgB,GAAON,UAAY,iBAAkB,CACnDV,EAAMgB,GAAmCE,c,CAE9C,CAOAtB,eAAegB,EAAeO,EAAOpB,GACnC,MAAMqB,EAAWD,EAGjB,GAAIC,EAAST,aAAa,QAAS,OAC3BS,EAASC,YACfD,EAASF,eAETnB,EAAIuB,mBAAmBvB,E,KAGlB,OACCqB,EAASC,YAEfE,YAAW3B,gBACHa,EACJ,EACAL,SAASC,eAAiBN,EAAMA,EAAIyB,SAAWJ,EAASI,SACzD,GACA,IAEHzB,EAAIuB,mBAAmBvB,E,CAE3B,CAOOH,eAAe6B,EAAYC,GAChC,MAAMC,EAA2BC,MAAMC,KAAKH,EAAGF,UAE/CG,EAAaG,SAAQlC,MAAMmC,IACzB,GACEA,EAAKrB,UAAY,kBAChBqB,EAAiCC,KAClC,CACA,MAAMC,QAAsBR,EAAYM,GACxCJ,EAAaO,OAAOP,EAAaxB,QAAQ4B,GAAQ,EAAG,KAAME,E,KAI9D,OAAON,CACT,Q","ignoreList":[]}