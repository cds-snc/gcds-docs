{"version":3,"names":["I18N","en","gapDesktopError","gapTabletError","fr","gcdsGridCss","GridGapArray","GcdsGrid","__stencil_proxyCustomElement","HTMLElement","constructor","this","centered","display","equalRowHeight","gap","tag","validateGap","newValue","values","includes","validateGapTablet","undefined","gapTablet","console","error","i18n","validateGapDesktop","gapDesktop","validateTag","componentWillLoad","render","alignContent","alignItems","columns","columnsDesktop","columnsTablet","container","justifyContent","justifyItems","placeContent","placeItems","Tag","classNames","handleGridStyles","gridStyles","setGridProperty","value","property","suffix","gapValue","tokenValue","h","Host","size","class","style"],"sources":["src/components/gcds-grid/i18n/i18n.js","src/components/gcds-grid/gcds-grid.css?tag=gcds-grid&encapsulation=shadow","src/components/gcds-grid/gcds-grid.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    gapDesktopError: 'gcds-grid: Invalid spacing value for gap-desktop.',\n    gapTabletError: 'gcds-grid: Invalid spacing value for gap-tablet.',\n  },\n  fr: {\n    gapDesktopError: \"gcds-grid: Valeur d'espacement invalide pour gap-desktop.\",\n    gapTabletError: \"gcds-grid: Valeur d'espacement invalide pour gap-tablet.\",\n  },\n};\n\nexport default I18N;\n","@layer reset, default, display, align, justify, place, equalHeight, tablet, desktop;\n\n@layer reset {\n  :host {\n    display: block;\n\n    .gcds-grid {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n  }\n}\n\n@layer default {\n  :host .gcds-grid {\n    grid-template-columns: var(--gcds-grid-columns, 1fr);\n    gap: var(--gcds-grid-gap);\n  }\n}\n\n@layer display {\n  :host .gcds-grid {\n    &.display-grid-with-cols {\n      display: grid;\n      grid-template-columns: 1fr;\n    }\n\n    &.display-grid {\n      display: grid;\n    }\n\n    &.display-inline-grid {\n      display: inline-grid;\n    }\n  }\n}\n\n@layer align {\n  :host .gcds-grid {\n    /* Align content */\n    &.align-content-center {\n      align-content: center;\n    }\n\n    &.align-content-end {\n      align-content: end;\n    }\n\n    &.align-content-space-around {\n      align-content: space-around;\n    }\n\n    &.align-content-space-between {\n      align-content: space-between;\n    }\n\n    &.align-content-space-evenly {\n      align-content: space-evenly;\n    }\n\n    &.align-content-start {\n      align-content: start;\n    }\n\n    &.align-content-stretch {\n      align-content: stretch;\n    }\n\n    /* Align items */\n    &.align-items-baseline {\n      align-items: baseline;\n    }\n\n    &.align-items-center {\n      align-items: center;\n    }\n\n    &.align-items-end {\n      align-items: end;\n    }\n\n    &.align-items-start {\n      align-items: start;\n    }\n\n    &.align-items-stretch {\n      align-items: stretch;\n    }\n  }\n}\n\n@layer justify {\n  :host .gcds-grid {\n    /* Justify content */\n    &.justify-content-center {\n      justify-content: center;\n    }\n\n    &.justify-content-end {\n      justify-content: end;\n    }\n\n    &.justify-content-space-around {\n      justify-content: space-around;\n    }\n\n    &.justify-content-space-between {\n      justify-content: space-between;\n    }\n\n    &.justify-content-space-evenly {\n      justify-content: space-evenly;\n    }\n\n    &.justify-content-start {\n      justify-content: start;\n    }\n\n    &.justify-content-stretch {\n      justify-content: stretch;\n    }\n\n    /* Justify items */\n    &.justify-items-center {\n      justify-items: center;\n    }\n\n    &.justify-items-end {\n      justify-items: end;\n    }\n\n    &.justify-items-start {\n      justify-items: start;\n    }\n\n    &.justify-items-stretch {\n      justify-items: stretch;\n    }\n  }\n}\n\n@layer place {\n  :host .gcds-grid {\n    /* Place content */\n    &.place-content-center {\n      place-content: center;\n    }\n\n    &.place-content-end {\n      place-content: end;\n    }\n\n    &.place-content-space-around {\n      place-content: space-around;\n    }\n\n    &.place-content-space-between {\n      place-content: space-between;\n    }\n\n    &.place-content-space-evenly {\n      place-content: space-evenly;\n    }\n\n    &.place-content-start {\n      place-content: start;\n    }\n\n    &.place-content-stretch {\n      place-content: stretch;\n    }\n\n    /* Place items */\n    &.place-items-center {\n      place-items: center;\n    }\n\n    &.place-items-end {\n      place-items: end;\n    }\n\n    &.place-items-start {\n      place-items: start;\n    }\n\n    &.place-items-stretch {\n      place-items: stretch;\n    }\n  }\n}\n\n@layer equalHeight {\n  :host .gcds-grid.equal-row-height {\n    grid-auto-rows: 1fr;\n    align-items: stretch;\n  }\n}\n\n/* Note: viewport specific style decision */\n@layer tablet {\n  @media screen and (width >= 48em) {\n    :host .gcds-grid {\n      grid-template-columns: var(\n        --gcds-grid-columns-tablet,\n        var(--gcds-grid-columns, 1fr)\n      );\n      gap: var(--gcds-grid-gap-tablet, var(--gcds-grid-gap));\n\n      /* Grid with cols */\n      &.display-grid-with-cols {\n        grid-template-columns: repeat(\n          var(--gcds-grid-columns-default-tablet),\n          minmax(0, 1fr)\n        );\n      }\n    }\n  }\n}\n\n/* Note: viewport specific style decision */\n@layer desktop {\n  @media screen and (width >= 64em) {\n    :host .gcds-grid {\n      grid-template-columns: var(\n        --gcds-grid-columns-desktop,\n        var(--gcds-grid-columns-tablet, var(--gcds-grid-columns, 1fr))\n      );\n      gap: var(--gcds-grid-gap-desktop, var(--gcds-grid-gap-tablet, var(--gcds-grid-gap)));\n\n      /* Grid with cols */\n      &.display-grid-with-cols {\n        grid-template-columns: repeat(\n          var(--gcds-grid-columns-default-desktop),\n          minmax(0, 1fr)\n        );\n      }\n    }\n  }\n}\n","import { Component, Element, Host, Watch, Prop, h } from '@stencil/core';\nimport i18n from './i18n/i18n';\n\nexport type ContentValues =\n  | 'center'\n  | 'end'\n  | 'space-around'\n  | 'space-between'\n  | 'space-evenly'\n  | 'start'\n  | 'stretch';\n\nexport type GridGapValues =\n  | '150'\n  | '175'\n  | '200'\n  | '225'\n  | '250'\n  | '300'\n  | '350'\n  | '400'\n  | '450'\n  | '500'\n  | '550'\n  | '600'\n  | '650'\n  | '700'\n  | '750'\n  | '800';\n\nconst GridGapArray = [\n  '150',\n  '175',\n  '200',\n  '225',\n  '250',\n  '300',\n  '350',\n  '400',\n  '450',\n  '500',\n  '550',\n  '600',\n  '650',\n  '700',\n  '750',\n  '800',\n];\n\n/**\n * A grid is a responsive, flexible column layout to position elements on a page.\n *\n * @slot default - Slot for the main content of the grid.\n */\n@Component({\n  tag: 'gcds-grid',\n  styleUrl: 'gcds-grid.css',\n  shadow: true,\n})\nexport class GcdsGrid {\n  @Element() el: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Defines the default number of grid columns for all viewports if columns-tablet\n   * and columns-desktop are not defined. Option to set different layouts for\n   * desktop with columns-desktop and for tablet with columns-tablet.\n   */\n  @Prop() columns?: string;\n\n  /**\n   * Provides option to set a different number of grid columns for tablet screens.\n   * If columns-desktop is not defined, columns-tablet will be used to define the\n   * number of columns for desktop as well.\n   */\n  @Prop() columnsTablet?: string;\n\n  /**\n   * Provides option to set a different number of grid columns for desktop screens.\n   */\n  @Prop() columnsDesktop?: string;\n\n  /**\n   * Defines grid container size\n   */\n  @Prop() container?: 'full' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\n\n  /**\n   * Defines if grid container is centered or not\n   */\n  @Prop() centered?: boolean = false;\n\n  /**\n   * Defines element as grid or inline-grid container\n   */\n  @Prop() display?: 'grid' | 'inline-grid' = 'grid';\n\n  /**\n   * Sets all grid items to have an equal height,\n   * based on the tallest item.\n   */\n  @Prop() equalRowHeight?: boolean = false;\n\n  /**\n   * Defines the horizontal and vertical spacing between items in\n   * a grid container for all viewports if gap-tablet and gap-desktop\n   * are not defined. Option to set different spacing for desktop\n   * with gap-desktop and for tablet with gap-tablet.\n   */\n  @Prop({ mutable: true }) gap?: GridGapValues = '300';\n\n  @Watch('gap')\n  validateGap(newValue: string) {\n    const values = GridGapArray;\n\n    if (!values.includes(newValue)) {\n      this.gap = '300';\n    }\n  }\n\n  /**\n   * Provides option to set horizontal and vertical spacing between items in a\n   * grid container for tablet screens. If gap-desktop is not defined, gap-tablet\n   * will be used to define the spacing for desktop screens as well.\n   */\n  @Prop({ mutable: true }) gapTablet?: GridGapValues;\n\n  @Watch('gapTablet')\n  validateGapTablet(newValue: string) {\n    const values = GridGapArray;\n\n    if (newValue != undefined && !values.includes(newValue)) {\n      this.gapTablet = undefined;\n      console.error(\n        `${i18n['en'].gapTabletError} | ${i18n['fr'].gapTabletError}`,\n      );\n    }\n  }\n\n  /**\n   * Provides option to set horizontal and vertical spacing between items\n   * in a grid container for desktop screens.\n   */\n  @Prop({ mutable: true }) gapDesktop?: GridGapValues;\n\n  @Watch('gapDesktop')\n  validateGapDesktop(newValue: string) {\n    const values = GridGapArray;\n\n    if (newValue != undefined && !values.includes(newValue)) {\n      this.gapDesktop = undefined;\n      console.error(\n        `${i18n['en'].gapDesktopError} | ${i18n['fr'].gapDesktopError}`,\n      );\n    }\n  }\n\n  /**\n   * Set tag for grid container\n   */\n  @Prop({ mutable: true }) tag?:\n    | 'article'\n    | 'aside'\n    | 'div'\n    | 'dl'\n    | 'main'\n    | 'nav'\n    | 'ol'\n    | 'section'\n    | 'ul' = 'div';\n\n  @Watch('tag')\n  validateTag(newValue: string) {\n    const values = [\n      'article',\n      'aside',\n      'div',\n      'dl',\n      'main',\n      'nav',\n      'ol',\n      'section',\n      'ul',\n    ];\n\n    if (!values.includes(newValue)) {\n      this.tag = 'div';\n    }\n  }\n\n  /**\n   * If total grid size is less than the size of its grid container,\n   * this property aligns the grid along the block (column) axis\n   */\n  @Prop() alignContent?: ContentValues;\n\n  /**\n   * If total grid size is less than the size of its grid container,\n   * this property aligns the grid along the inline (row) axis\n   */\n  @Prop() justifyContent?: ContentValues;\n\n  /**\n   * Sets both the align-content + justify-content properties\n   */\n  @Prop() placeContent?: ContentValues;\n\n  /**\n   * Aligns grid items along the block (column) axis\n   */\n  @Prop() alignItems?: 'baseline' | 'center' | 'end' | 'start' | 'stretch';\n\n  /**\n   * Aligns grid items along the inline (row) axis\n   */\n  @Prop() justifyItems?: 'center' | 'end' | 'start' | 'stretch';\n\n  /**\n   * Sets both the align-items + justify-items properties\n   */\n  @Prop() placeItems?: 'center' | 'end' | 'start' | 'stretch';\n\n  componentWillLoad() {\n    // Validate attributes and set defaults\n    this.validateTag(this.tag);\n    this.validateGap(this.gap);\n    this.validateGapTablet(this.gapTablet);\n    this.validateGapDesktop(this.gapDesktop);\n  }\n\n  render() {\n    const {\n      alignContent,\n      alignItems,\n      columns,\n      columnsDesktop,\n      columnsTablet,\n      container,\n      centered,\n      display,\n      equalRowHeight,\n      gap,\n      gapTablet,\n      gapDesktop,\n      justifyContent,\n      justifyItems,\n      placeContent,\n      placeItems,\n      tag,\n    } = this;\n\n    const Tag = tag;\n    const classNames = `\n      gcds-grid\n      ${alignContent ? `align-content-${alignContent}` : ''}\n      ${alignItems ? `align-items-${alignItems}` : ''}\n      ${\n        (columns || columnsTablet || columnsDesktop) === undefined\n          ? `display-grid-with-cols`\n          : `display-${display}`\n      }\n      ${equalRowHeight ? 'equal-row-height' : ''}\n      ${justifyContent ? `justify-content-${justifyContent}` : ''}\n      ${justifyItems ? `justify-items-${justifyItems}` : ''}\n      ${placeContent ? `place-content-${placeContent}` : ''}\n      ${placeItems ? `place-items-${placeItems}` : ''}\n    `;\n\n    // Set CSS variables in style attribute based on passed column + gap properties\n    function handleGridStyles() {\n      const gridStyles = {};\n\n      const setGridProperty = (value, property, suffix = '') => {\n        const gapValue = `var(--gcds-grid-gap-${value})`;\n        const tokenValue = property === 'gap' ? gapValue : value;\n\n        if (value) {\n          gridStyles[`--gcds-grid-${property}${suffix}`] = tokenValue;\n        }\n      };\n\n      // Handle columns\n      setGridProperty(columns, 'columns');\n      setGridProperty(columnsTablet, 'columns', '-tablet');\n      setGridProperty(columnsDesktop, 'columns', '-desktop');\n\n      // Handle gap\n      setGridProperty(gap, 'gap');\n      setGridProperty(gapTablet, 'gap', '-tablet');\n      setGridProperty(gapDesktop, 'gap', '-desktop');\n\n      return gridStyles;\n    }\n\n    return (\n      <Host>\n        {container ? (\n          <gcds-container size={container} centered={centered}>\n            <Tag class={classNames} style={handleGridStyles()}>\n              <slot />\n            </Tag>\n          </gcds-container>\n        ) : (\n          <Tag class={classNames} style={handleGridStyles()}>\n            <slot />\n          </Tag>\n        )}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}