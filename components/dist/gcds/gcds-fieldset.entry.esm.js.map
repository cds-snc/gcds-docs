{"version":3,"file":"gcds-fieldset.entry.esm.js","sources":["src/components/gcds-fieldset/i18n/i18n.js","src/components/gcds-fieldset/gcds-fieldset.css?tag=gcds-fieldset&encapsulation=shadow","src/components/gcds-fieldset/gcds-fieldset.tsx"],"sourcesContent":["const I18N = {\n  en: {\n    legendSizeError: 'gcds-fieldset: Invalid size.',\n  },\n  fr: {\n    legendSizeError: 'gcds-fieldset: Taille invalide.',\n  },\n};\n\nexport default I18N;\n","@layer reset, default, size;\n\n@layer reset {\n  :host {\n    display: block;\n\n    .gcds-fieldset {\n      border: 0;\n      padding: 0;\n      min-inline-size: auto\n    }\n\n    legend {\n      padding: 0;\n    }\n\n    slot {\n      display: block;\n      margin: 0;\n    }\n  }\n}\n\n@layer default {\n  .gcds-fieldset {\n    color: var(--gcds-fieldset-default-text);\n\n    legend {\n      margin: var(--gcds-fieldset-legend-margin) !important;\n    }\n  }\n}\n\n@layer size {\n  .gcds-fieldset legend {\n    &.size-h2 {\n      font: var(--gcds-fieldset-legend-size-h2-desktop);\n\n      @media only screen and (width < 48em) {\n        font: var(--gcds-fieldset-legend-size-h2-mobile);\n      }\n    }\n\n    &.size-h3 {\n      font: var(--gcds-fieldset-legend-size-h3-desktop);\n\n      @media only screen and (width < 48em) {\n        font: var(--gcds-fieldset-legend-size-h3-mobile);\n      }\n    }\n\n    &.size-h4 {\n      font: var(--gcds-fieldset-legend-size-h4-desktop);\n\n      @media only screen and (width < 48em) {\n        font: var(--gcds-fieldset-legend-size-h4-mobile);\n      }\n    }\n\n    &.size-h5 {\n      font: var(--gcds-fieldset-legend-size-h5-desktop);\n\n      @media only screen and (width < 48em) {\n        font: var(--gcds-fieldset-legend-size-h5-mobile);\n      }\n    }\n\n    &.size-h6 {\n      font: var(--gcds-fieldset-legend-size-h6-desktop);\n\n      @media only screen and (width < 48em) {\n        font: var(--gcds-fieldset-legend-size-h6-mobile);\n      }\n    }\n  }\n}\n","import { Component, Prop, Element, State, Host, Watch, h } from '@stencil/core';\nimport { inheritAttributes } from '../../utils/utils';\nimport i18n from './i18n/i18n';\n@Component({\n  tag: 'gcds-fieldset',\n  styleUrl: 'gcds-fieldset.css',\n  shadow: { delegatesFocus: true },\n})\nexport class GcdsFieldset {\n  @Element() el: HTMLElement;\n\n  private shadowElement?: HTMLElement;\n\n  /**\n   * Props\n   */\n\n  /**\n   * Hint displayed below the legend.\n   */\n  @Prop({ reflect: true, mutable: false }) hint: string;\n\n  /**\n   * The title for the contents of the fieldset\n   */\n  @Prop({ reflect: true, mutable: false }) legend!: string;\n\n  /**\n   * Sets the appropriate font size for the fieldset legend.\n   */\n  @Prop({ mutable: true }) legendSize!: 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n\n  @Watch('legendSize')\n  validateLegendSize(newValue: string) {\n    const values = ['h2', 'h3', 'h4', 'h5', 'h6'];\n\n    if (!values.includes(newValue)) {\n      console.error(\n        `${i18n['en'].legendSizeError} | ${i18n['fr'].legendSizeError}`,\n      );\n    }\n  }\n\n  /**\n   * Set additional HTML attributes not available in component properties\n   */\n  @State() inheritedAttributes: Object = {};\n\n  async componentWillLoad() {\n    // Validate attributes and set defaults\n    this.validateLegendSize(this.legendSize);\n\n    this.inheritedAttributes = inheritAttributes(this.el, this.shadowElement);\n  }\n\n  render() {\n    const { hint, inheritedAttributes, legend, legendSize } = this;\n\n    const fieldsetAttrs = {\n      ...inheritedAttributes,\n    };\n\n    return (\n      <Host>\n        <fieldset\n          class=\"gcds-fieldset\"\n          {...fieldsetAttrs}\n          aria-labelledby={\n            hint ? `fieldset-legend fieldset-hint` : `fieldset-legend`\n          }\n          tabindex=\"-1\"\n          ref={element => (this.shadowElement = element as HTMLElement)}\n        >\n          <legend id=\"fieldset-legend\" class={`size-${legendSize}`}>\n            {legend}\n          </legend>\n\n          {hint ? (\n            <gcds-hint id=\"fieldset-hint\" hint-id=\"fieldset\">\n              {hint}\n            </gcds-hint>\n          ) : null}\n\n          <slot></slot>\n        </fieldset>\n      </Host>\n    );\n  }\n}\n"],"names":["i18n"],"mappings":";;;AAAA,MAAM,IAAI,GAAG;AACb,EAAE,EAAE,EAAE;AACN,IAAI,eAAe,EAAE,8BAA8B;AACnD,GAAG;AACH,EAAE,EAAE,EAAE;AACN,IAAI,eAAe,EAAE,iCAAiC;AACtD,GAAG;AACH,CAAC;;ACPD,MAAM,eAAe,GAAG,wyCAAwyC;;MCQnzC,YAAY,GAAA,MAAA;AALzB,IAAA,WAAA,CAAA,OAAA,EAAA;;AAwCE;;AAEG;AACM,QAAA,IAAmB,CAAA,mBAAA,GAAW,EAAE;AA0C1C;AAvDC,IAAA,kBAAkB,CAAC,QAAgB,EAAA;AACjC,QAAA,MAAM,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QAE7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AAC9B,YAAA,OAAO,CAAC,KAAK,CACX,GAAGA,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,CAAM,GAAA,EAAAA,IAAI,CAAC,IAAI,CAAC,CAAC,eAAe,CAAA,CAAE,CAChE;;;AASL,IAAA,MAAM,iBAAiB,GAAA;;AAErB,QAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC;AAExC,QAAA,IAAI,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC;;IAG3E,MAAM,GAAA;QACJ,MAAM,EAAE,IAAI,EAAE,mBAAmB,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI;QAE9D,MAAM,aAAa,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACd,mBAAmB,CACvB;AAED,QAAA,QACE,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACH,CAAA,CAAA,UAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,GAAA,EAAA,0CAAA,EACE,KAAK,EAAC,eAAe,EAAA,EACjB,aAAa,EAEf,EAAA,iBAAA,EAAA,IAAI,GAAG,CAA+B,6BAAA,CAAA,GAAG,CAAiB,eAAA,CAAA,EAE5D,QAAQ,EAAC,IAAI,EACb,GAAG,EAAE,OAAO,KAAK,IAAI,CAAC,aAAa,GAAG,OAAsB,CAAC,EAAA,CAAA,EAE7D,CAAQ,CAAA,QAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EAAE,EAAC,iBAAiB,EAAC,KAAK,EAAE,CAAQ,KAAA,EAAA,UAAU,CAAE,CAAA,EACrD,EAAA,MAAM,CACA,EAER,IAAI,IACH,CAAA,CAAA,WAAA,EAAA,EAAW,EAAE,EAAC,eAAe,EAAS,SAAA,EAAA,UAAU,IAC7C,IAAI,CACK,IACV,IAAI,EAER,CAAa,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACJ,CACN;;;;;;;;;;;;"}